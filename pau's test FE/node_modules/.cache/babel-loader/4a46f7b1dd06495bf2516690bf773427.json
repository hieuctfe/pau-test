{"remainingRequest":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/seller/_store/actions.js","dependencies":[{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/seller/_store/actions.js","mtime":1555386915879},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nexport default {\n  getSellerCategory: function () {\n    var _getSellerCategory = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"/api/collections/parents\");\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getSellerCategory() {\n      return _getSellerCategory.apply(this, arguments);\n    }\n\n    return getSellerCategory;\n  }(),\n  REGISTER: function REGISTER(_ref, _ref2) {\n    var commit = _ref.commit;\n    var email = _ref2.email,\n        password = _ref2.password,\n        country_code = _ref2.country_code;\n    return new _Promise(function (reslove, reject) {\n      axios.post('/api/seller/register', {\n        email: email,\n        password: password,\n        country_code: country_code\n      }).then(function (res) {\n        var _res$data = res.data,\n            status = _res$data.status,\n            data = _res$data.data;\n\n        if (status) {\n          commit('LOGIN_SUCCESS', data.token);\n        }\n\n        reslove(res);\n      });\n    });\n  },\n  LOGIN: function LOGIN(_ref3, _ref4) {\n    var commit = _ref3.commit;\n    var email = _ref4.email,\n        password = _ref4.password;\n    return new _Promise(function (reslove, reject) {\n      axios.post('/api/users/login', {\n        email: email,\n        password: password\n      }).then(function (res) {\n        var _res$data2 = res.data,\n            status = _res$data2.status,\n            data = _res$data2.data;\n\n        if (status) {\n          commit('LOGIN_SUCCESS', data.token);\n        }\n\n        reslove(res);\n      });\n    });\n  },\n  LOGOUT: function LOGOUT(_ref5) {\n    var commit = _ref5.commit;\n    commit('LOGOUT_SUCCESS');\n  },\n  UPDATE_USER_INFO: function () {\n    var _UPDATE_USER_INFO = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref6, sellerInfo) {\n      var Commit, temp;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Commit = _ref6.Commit;\n              temp = {\n                country_code: sellerInfo.country_code,\n                current_pass: sellerInfo.current_password,\n                password: sellerInfo.password // if (sellerInfo.password) {\n                //     temp.password = sellerInfo.password\n                // }\n\n              };\n              _context2.next = 4;\n              return axios.put(\"/api/seller/update\", temp);\n\n            case 4:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function UPDATE_USER_INFO(_x, _x2) {\n      return _UPDATE_USER_INFO.apply(this, arguments);\n    }\n\n    return UPDATE_USER_INFO;\n  }(),\n  SELLER_CHOOSING_PLAN: function () {\n    var _SELLER_CHOOSING_PLAN = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref7, planId) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref7.commit;\n              _context3.next = 3;\n              return axios.post(\"/api/seller/subscription\", {\n                plan_id: planId\n              });\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function SELLER_CHOOSING_PLAN(_x3, _x4) {\n      return _SELLER_CHOOSING_PLAN.apply(this, arguments);\n    }\n\n    return SELLER_CHOOSING_PLAN;\n  }(),\n  CREATE_CUSTOMER: function () {\n    var _CREATE_CUSTOMER = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref8, customerInfo) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref8.commit;\n              _context4.next = 3;\n              return axios.post(\"/api/seller/subscription/create_customer\", customerInfo);\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function CREATE_CUSTOMER(_x5, _x6) {\n      return _CREATE_CUSTOMER.apply(this, arguments);\n    }\n\n    return CREATE_CUSTOMER;\n  }(),\n  GET_FAVORITE_PRODUCT: function () {\n    var _GET_FAVORITE_PRODUCT = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref9) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref9.commit;\n              _context5.next = 3;\n              return axios.get(\"/api/seller/favourite_categories/suggested_product\");\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function GET_FAVORITE_PRODUCT(_x7) {\n      return _GET_FAVORITE_PRODUCT.apply(this, arguments);\n    }\n\n    return GET_FAVORITE_PRODUCT;\n  }(),\n  GET_FAVORITE_CATEGORY: function () {\n    var _GET_FAVORITE_CATEGORY = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(_ref10) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref10.commit;\n              _context6.next = 3;\n              return axios.get(\"/api/seller/favorite_collections\");\n\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function GET_FAVORITE_CATEGORY(_x8) {\n      return _GET_FAVORITE_CATEGORY.apply(this, arguments);\n    }\n\n    return GET_FAVORITE_CATEGORY;\n  }(),\n  UPDATE_FAVORITE_COLLECTION: function () {\n    var _UPDATE_FAVORITE_COLLECTION = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(_ref11, favoriteIds) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref11.commit;\n              _context7.next = 3;\n              return axios.put(\"/api/seller/favorite_collections\", {\n                collection_ids: favoriteIds\n              });\n\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function UPDATE_FAVORITE_COLLECTION(_x9, _x10) {\n      return _UPDATE_FAVORITE_COLLECTION.apply(this, arguments);\n    }\n\n    return UPDATE_FAVORITE_COLLECTION;\n  }(),\n  BECOME_SUPPLIER: function () {\n    var _BECOME_SUPPLIER = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(_ref12, sellerInfo) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref12.commit;\n              _context8.next = 3;\n              return axios.post(\"/api/seller/become_supplier\", sellerInfo);\n\n            case 3:\n              return _context8.abrupt(\"return\", _context8.sent);\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function BECOME_SUPPLIER(_x11, _x12) {\n      return _BECOME_SUPPLIER.apply(this, arguments);\n    }\n\n    return BECOME_SUPPLIER;\n  }(),\n  GET_PAYMENT_HISTORY: function () {\n    var _GET_PAYMENT_HISTORY = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(_ref13, current_page) {\n      var commit, temp;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              commit = _ref13.commit;\n              temp = {\n                limit: 10,\n                current_page: current_page ? current_page : 1\n              };\n              _context9.next = 4;\n              return axios.get(\"/api/seller/subscription/payment_history\", {\n                params: temp\n              });\n\n            case 4:\n              return _context9.abrupt(\"return\", _context9.sent);\n\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function GET_PAYMENT_HISTORY(_x13, _x14) {\n      return _GET_PAYMENT_HISTORY.apply(this, arguments);\n    }\n\n    return GET_PAYMENT_HISTORY;\n  }(),\n  CHANGE_PAYMENT_ACCOUNT: function () {\n    var _CHANGE_PAYMENT_ACCOUNT = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(_ref14, cardInfo) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              commit = _ref14.commit;\n              _context10.next = 3;\n              return axios.post(\"/api/seller/subscription/change_card\", cardInfo);\n\n            case 3:\n              return _context10.abrupt(\"return\", _context10.sent);\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function CHANGE_PAYMENT_ACCOUNT(_x15, _x16) {\n      return _CHANGE_PAYMENT_ACCOUNT.apply(this, arguments);\n    }\n\n    return CHANGE_PAYMENT_ACCOUNT;\n  }(),\n  CANCEL_SUBSCRIPTION: function () {\n    var _CANCEL_SUBSCRIPTION = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(_ref15) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              commit = _ref15.commit;\n              _context11.next = 3;\n              return axios.put(\"/api/seller/subscription/cancel_subscription\");\n\n            case 3:\n              return _context11.abrupt(\"return\", _context11.sent);\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    function CANCEL_SUBSCRIPTION(_x17) {\n      return _CANCEL_SUBSCRIPTION.apply(this, arguments);\n    }\n\n    return CANCEL_SUBSCRIPTION;\n  }(),\n  GET_USER_INFO: function GET_USER_INFO(_ref16) {\n    var commit = _ref16.commit;\n    return new _Promise(function (reslove, reject) {\n      axios.get(\"/api/seller/info\").then(function (res) {\n        reslove(res);\n        var _res$data3 = res.data,\n            status = _res$data3.status,\n            data = _res$data3.data;\n\n        if (status) {\n          commit('UPDATE_SELLER_INFO', data);\n        } else {\n          commit('LOGOUT_SUCCESS');\n        }\n      });\n    });\n  },\n  SEND_ACCESS_TOKEN: function () {\n    var _SEND_ACCESS_TOKEN = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(_ref17, tokenInfo) {\n      var commit, url;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              commit = _ref17.commit;\n              url = \"\";\n\n              if (tokenInfo.type == \"facebook\") {\n                url = '/api/seller/login/facebook';\n              } else {\n                url = '/api/seller/login/google';\n              }\n\n              _context12.next = 5;\n              return axios.post(url, {\n                token: tokenInfo.token\n              });\n\n            case 5:\n              return _context12.abrupt(\"return\", _context12.sent);\n\n            case 6:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    function SEND_ACCESS_TOKEN(_x18, _x19) {\n      return _SEND_ACCESS_TOKEN.apply(this, arguments);\n    }\n\n    return SEND_ACCESS_TOKEN;\n  }(),\n  REGISTER_WITH_SOCIAL: function () {\n    var _REGISTER_WITH_SOCIAL = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee13(_ref18, userInfo) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              commit = _ref18.commit;\n              _context13.next = 3;\n              return axios.post(\"/api/seller/register/with_social\", userInfo);\n\n            case 3:\n              return _context13.abrupt(\"return\", _context13.sent);\n\n            case 4:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    function REGISTER_WITH_SOCIAL(_x20, _x21) {\n      return _REGISTER_WITH_SOCIAL.apply(this, arguments);\n    }\n\n    return REGISTER_WITH_SOCIAL;\n  }(),\n  CHECK_TOKEN: function () {\n    var _CHECK_TOKEN = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee14(_ref19, token) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              commit = _ref19.commit;\n              _context14.next = 3;\n              return axios.post(\"/api/users/reset_password_token\", {\n                reset_password_token: token\n              });\n\n            case 3:\n              return _context14.abrupt(\"return\", _context14.sent);\n\n            case 4:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    function CHECK_TOKEN(_x22, _x23) {\n      return _CHECK_TOKEN.apply(this, arguments);\n    }\n\n    return CHECK_TOKEN;\n  }(),\n  RESET_PASSWORD: function () {\n    var _RESET_PASSWORD = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee15(_ref20, resetInfo) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              commit = _ref20.commit;\n              _context15.next = 3;\n              return axios.post(\"/api/users/reset_password\", resetInfo);\n\n            case 3:\n              return _context15.abrupt(\"return\", _context15.sent);\n\n            case 4:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n\n    function RESET_PASSWORD(_x24, _x25) {\n      return _RESET_PASSWORD.apply(this, arguments);\n    }\n\n    return RESET_PASSWORD;\n  }(),\n  FORGOT_PASSWORD: function () {\n    var _FORGOT_PASSWORD = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee16(_ref21, email) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              commit = _ref21.commit;\n              _context16.next = 3;\n              return axios.post(\"/api/users/forgot_password\", email);\n\n            case 3:\n              return _context16.abrupt(\"return\", _context16.sent);\n\n            case 4:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n\n    function FORGOT_PASSWORD(_x26, _x27) {\n      return _FORGOT_PASSWORD.apply(this, arguments);\n    }\n\n    return FORGOT_PASSWORD;\n  }(),\n  SOCIAL_WITH_NEW_EMAIL: function () {\n    var _SOCIAL_WITH_NEW_EMAIL = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee17(_ref22, userInfo) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              commit = _ref22.commit;\n              _context17.next = 3;\n              return axios.post(\"/api/seller/register/social_with_new_email\", userInfo);\n\n            case 3:\n              return _context17.abrupt(\"return\", _context17.sent);\n\n            case 4:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n\n    function SOCIAL_WITH_NEW_EMAIL(_x28, _x29) {\n      return _SOCIAL_WITH_NEW_EMAIL.apply(this, arguments);\n    }\n\n    return SOCIAL_WITH_NEW_EMAIL;\n  }(),\n  CHECK_NEW_EMAIL_TOKEN: function () {\n    var _CHECK_NEW_EMAIL_TOKEN = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee18(_ref23, token) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              commit = _ref23.commit;\n              _context18.next = 3;\n              return axios.post(\"/api/seller/active/social_new_email\", {\n                id: token\n              });\n\n            case 3:\n              return _context18.abrupt(\"return\", _context18.sent);\n\n            case 4:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }));\n\n    function CHECK_NEW_EMAIL_TOKEN(_x30, _x31) {\n      return _CHECK_NEW_EMAIL_TOKEN.apply(this, arguments);\n    }\n\n    return CHECK_NEW_EMAIL_TOKEN;\n  }(),\n  GET_SHOPS: function () {\n    var _GET_SHOPS = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee19(_ref24) {\n      var commut;\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              commut = _ref24.commut;\n              _context19.next = 3;\n              return axios.get(\"/api/seller/shops\");\n\n            case 3:\n              return _context19.abrupt(\"return\", _context19.sent);\n\n            case 4:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }));\n\n    function GET_SHOPS(_x32) {\n      return _GET_SHOPS.apply(this, arguments);\n    }\n\n    return GET_SHOPS;\n  }(),\n  ADD_SHOPS: function () {\n    var _ADD_SHOPS = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee20(_ref25, info) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              commit = _ref25.commit;\n              _context20.next = 3;\n              return axios.post(\"/api/seller/shops\", info);\n\n            case 3:\n              return _context20.abrupt(\"return\", _context20.sent);\n\n            case 4:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    function ADD_SHOPS(_x33, _x34) {\n      return _ADD_SHOPS.apply(this, arguments);\n    }\n\n    return ADD_SHOPS;\n  }(),\n  SHOPIFY_VERIFY: function () {\n    var _SHOPIFY_VERIFY = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee21(_ref26, info) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              commit = _ref26.commit;\n              _context21.next = 3;\n              return axios.post(\"/api/seller/shops/handle\", info);\n\n            case 3:\n              return _context21.abrupt(\"return\", _context21.sent);\n\n            case 4:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n\n    function SHOPIFY_VERIFY(_x35, _x36) {\n      return _SHOPIFY_VERIFY.apply(this, arguments);\n    }\n\n    return SHOPIFY_VERIFY;\n  }(),\n  SET_DEFAULT_STORE: function () {\n    var _SET_DEFAULT_STORE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee22(_ref27, id) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              commit = _ref27.commit;\n              _context22.next = 3;\n              return axios.put(\"/api/seller/shops/default\", {\n                shop_id: id\n              });\n\n            case 3:\n              return _context22.abrupt(\"return\", _context22.sent);\n\n            case 4:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22);\n    }));\n\n    function SET_DEFAULT_STORE(_x37, _x38) {\n      return _SET_DEFAULT_STORE.apply(this, arguments);\n    }\n\n    return SET_DEFAULT_STORE;\n  }(),\n  DELETE_STORE: function () {\n    var _DELETE_STORE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee23(_ref28, id) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              commit = _ref28.commit;\n              _context23.next = 3;\n              return axios.put(\"api/seller/shops/remove\", {\n                shop_id: id\n              });\n\n            case 3:\n              return _context23.abrupt(\"return\", _context23.sent);\n\n            case 4:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23);\n    }));\n\n    function DELETE_STORE(_x39, _x40) {\n      return _DELETE_STORE.apply(this, arguments);\n    }\n\n    return DELETE_STORE;\n  }()\n};",{"version":3,"sources":["/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/seller/_store/actions.js"],"names":["getSellerCategory","axios","get","REGISTER","commit","email","password","country_code","reslove","reject","post","then","res","data","status","token","LOGIN","LOGOUT","UPDATE_USER_INFO","sellerInfo","Commit","temp","current_pass","current_password","put","SELLER_CHOOSING_PLAN","planId","plan_id","CREATE_CUSTOMER","customerInfo","GET_FAVORITE_PRODUCT","GET_FAVORITE_CATEGORY","UPDATE_FAVORITE_COLLECTION","favoriteIds","collection_ids","BECOME_SUPPLIER","GET_PAYMENT_HISTORY","current_page","limit","params","CHANGE_PAYMENT_ACCOUNT","cardInfo","CANCEL_SUBSCRIPTION","GET_USER_INFO","SEND_ACCESS_TOKEN","tokenInfo","url","type","REGISTER_WITH_SOCIAL","userInfo","CHECK_TOKEN","reset_password_token","RESET_PASSWORD","resetInfo","FORGOT_PASSWORD","SOCIAL_WITH_NEW_EMAIL","CHECK_NEW_EMAIL_TOKEN","id","GET_SHOPS","commut","ADD_SHOPS","info","SHOPIFY_VERIFY","SET_DEFAULT_STORE","shop_id","DELETE_STORE"],"mappings":"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","sourcesContent":["export default {\n    async getSellerCategory() {\n        return await axios.get(`/api/collections/parents`)\n    },\n    REGISTER({commit}, {email, password, country_code}) {\n        return new Promise((reslove, reject) => {\n            axios.post('/api/seller/register', {\n                email: email,\n                password: password,\n                country_code: country_code\n            }).then((res) => {\n                let {status, data} = res.data\n                if (status) {\n                    commit('LOGIN_SUCCESS', data.token)\n                }\n                reslove(res)\n            })\n        })\n    },\n    LOGIN({commit}, {email, password}) {\n        return new Promise((reslove, reject) => {\n            axios.post('/api/users/login', {email: email, password: password}).then((res) => {\n                let {status, data} = res.data\n                if (status) {\n                    commit('LOGIN_SUCCESS', data.token)\n                }\n                reslove(res)\n            })\n        })\n    },\n    LOGOUT({commit}) {\n        commit('LOGOUT_SUCCESS')\n    },\n\n    async UPDATE_USER_INFO({Commit}, sellerInfo) {\n        let temp = {\n            country_code: sellerInfo.country_code,\n            current_pass: sellerInfo.current_password,\n            password: sellerInfo.password\n        }\n        // if (sellerInfo.password) {\n        //     temp.password = sellerInfo.password\n        // }\n        return await axios.put(`/api/seller/update`, temp)\n    },\n\n    async SELLER_CHOOSING_PLAN({commit}, planId) {\n        return await axios.post(`/api/seller/subscription`, {\n            plan_id: planId\n        })\n    },\n\n    async CREATE_CUSTOMER({commit}, customerInfo) {\n        return await axios.post(`/api/seller/subscription/create_customer`, customerInfo)\n    },\n    async GET_FAVORITE_PRODUCT({commit}) {\n        return await axios.get(`/api/seller/favourite_categories/suggested_product`)\n    },\n    async GET_FAVORITE_CATEGORY({commit}) {\n        return await axios.get(`/api/seller/favorite_collections`)\n    },\n    async UPDATE_FAVORITE_COLLECTION({commit}, favoriteIds) {\n        return await axios.put(`/api/seller/favorite_collections`, {\n            collection_ids: favoriteIds\n        })\n    },\n    async BECOME_SUPPLIER({commit}, sellerInfo) {\n        return await axios.post(`/api/seller/become_supplier`, sellerInfo)\n    },\n    async GET_PAYMENT_HISTORY({commit}, current_page) {\n        let temp = {\n            limit: 10,\n            current_page: current_page ? current_page : 1\n        }\n        return await axios.get(`/api/seller/subscription/payment_history`, {\n            params: temp\n        })\n    },\n    async CHANGE_PAYMENT_ACCOUNT({commit}, cardInfo) {\n        return await axios.post(`/api/seller/subscription/change_card`, cardInfo)\n    },\n    async CANCEL_SUBSCRIPTION({commit}) {\n        return await axios.put(`/api/seller/subscription/cancel_subscription`)\n    },\n    GET_USER_INFO({commit}) {\n        return new Promise((reslove, reject) => {\n            axios.get(`/api/seller/info`).then(res => {\n                reslove(res)\n                let {status, data} = res.data\n                if (status) {\n                    commit('UPDATE_SELLER_INFO', data)\n                } else {\n                    commit('LOGOUT_SUCCESS')\n                }\n            })\n        })\n    },\n    async SEND_ACCESS_TOKEN({commit}, tokenInfo) {\n        let url = ``\n        if (tokenInfo.type == \"facebook\") {\n            url = '/api/seller/login/facebook'\n        } else {\n            url = '/api/seller/login/google'\n        }\n        return await axios.post(url, {token: tokenInfo.token})\n    },\n\n    async REGISTER_WITH_SOCIAL({commit}, userInfo) {\n        return await axios.post(`/api/seller/register/with_social`, userInfo)\n    },\n    async CHECK_TOKEN({commit}, token) {\n        return await axios.post(`/api/users/reset_password_token`, {\n            reset_password_token: token\n        })\n    },\n\n    async RESET_PASSWORD({commit}, resetInfo) {\n        return await axios.post(`/api/users/reset_password`, resetInfo)\n    },\n\n    async FORGOT_PASSWORD({commit}, email) {\n        return await axios.post(`/api/users/forgot_password`, email)\n    },\n\n    async SOCIAL_WITH_NEW_EMAIL({commit}, userInfo) {\n        return await axios.post(`/api/seller/register/social_with_new_email`, userInfo)\n    },\n\n    async CHECK_NEW_EMAIL_TOKEN({commit}, token) {\n        return await axios.post(`/api/seller/active/social_new_email`, {\n            id: token\n        })\n    },\n    async GET_SHOPS({commut}) {\n        return await axios.get(`/api/seller/shops`)\n    },\n\n    async ADD_SHOPS({commit}, info) {\n        return await axios.post(`/api/seller/shops`, info)\n    },\n\n    async SHOPIFY_VERIFY({commit}, info) {\n        return await axios.post(`/api/seller/shops/handle`, info)\n    },\n\n    async SET_DEFAULT_STORE({commit}, id) {\n        return await axios.put(`/api/seller/shops/default`, {\n            shop_id: id\n        })\n    },\n\n    async DELETE_STORE({commit}, id) {\n        // console.log(id);\n        return await axios.put(`api/seller/shops/remove`, {\n            shop_id: id\n        })\n    },\n\n}\n"]}]}