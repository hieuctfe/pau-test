{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Pau's test/pau's test FE/src/modules/account/_components/register.vue?vue&type=template&id=4f222e80&scoped=true&","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/modules/account/_components/register.vue","mtime":1556259939688},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"login-register-account-wrap login-page container\" },\n    [\n      _vm._m(0),\n      _c(\"div\", { staticClass: \"row login-page__body m-t-40\" }, [\n        _vm._m(1),\n        _c(\"div\", { staticClass: \"col col-6\" }, [\n          _c(\"div\", { staticClass: \"form-container card\" }, [\n            _c(\"div\", { staticClass: \"login-form-header\" }, [\n              _vm._m(2),\n              _c(\n                \"div\",\n                { staticClass: \"already-have-account\" },\n                [\n                  _c(\"p\", { staticClass: \"font-weight-bold\" }, [\n                    _vm._v(\"Already have account?\")\n                  ]),\n                  _c(\n                    \"router-link\",\n                    {\n                      staticClass: \"btn btn-outline-signin\",\n                      attrs: { to: { name: \"Login\" } }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n                            Sign in\\n                        \"\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ]),\n            _c(\n              \"form\",\n              {\n                on: {\n                  submit: function($event) {\n                    $event.stopPropagation()\n                    $event.preventDefault()\n                    return _vm.regis_account()\n                  }\n                }\n              },\n              [\n                _c(\"div\", { staticClass: \"login-form-body\" }, [\n                  _c(\"div\", { staticClass: \"login-form-body-account-type\" }, [\n                    _c(\"span\", [_vm._v(\"Youâ€™re using this app for\")]),\n                    _c(\"ul\", { staticClass: \"list-account-type\" }, [\n                      _c(\n                        \"li\",\n                        {\n                          staticClass: \"m-r-10\",\n                          class: _vm.form.type == \"personal\" ? \"checked\" : \"\"\n                        },\n                        [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.form.type,\n                                expression: \"form.type\"\n                              }\n                            ],\n                            attrs: {\n                              type: \"radio\",\n                              value: \"personal\",\n                              id: \"personal\",\n                              name: \"type-group\",\n                              checked: \"\"\n                            },\n                            domProps: {\n                              checked: _vm._q(_vm.form.type, \"personal\")\n                            },\n                            on: {\n                              change: function($event) {\n                                return _vm.$set(_vm.form, \"type\", \"personal\")\n                              }\n                            }\n                          }),\n                          _c(\"label\", { attrs: { for: \"personal\" } }, [\n                            _vm._v(\"Personal use\")\n                          ])\n                        ]\n                      ),\n                      _c(\n                        \"li\",\n                        { class: _vm.form.type == \"company\" ? \"checked\" : \"\" },\n                        [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.form.type,\n                                expression: \"form.type\"\n                              }\n                            ],\n                            attrs: {\n                              type: \"radio\",\n                              value: \"company\",\n                              id: \"company\",\n                              name: \"type-group\"\n                            },\n                            domProps: {\n                              checked: _vm._q(_vm.form.type, \"company\")\n                            },\n                            on: {\n                              change: function($event) {\n                                return _vm.$set(_vm.form, \"type\", \"company\")\n                              }\n                            }\n                          }),\n                          _c(\"label\", { attrs: { for: \"company\" } }, [\n                            _vm._v(\"Company\")\n                          ])\n                        ]\n                      )\n                    ])\n                  ]),\n                  _vm.form.type == \"personal\"\n                    ? _c(\"div\", { staticClass: \"login-form-body-form-info\" }, [\n                        _c(\"p\", [_vm._v(\"Give us some info\")]),\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Your name\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.name,\n                                  expression: \"form.name\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\":\n                                  _vm.$v.form.name.$invalid && _vm.formstate\n                              },\n                              attrs: { type: \"text\", placeholder: \"Name\" },\n                              domProps: { value: _vm.form.name },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"name\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.$v.form.name.$invalid && _vm.formstate\n                              ? _c(\n                                  \"small\",\n                                  { staticClass: \"form-text invalid-feedback\" },\n                                  [\n                                    _vm._v(\n                                      \"Your name is require\\n                                    \"\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ]),\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Phone number\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.phone_number,\n                                  expression: \"form.phone_number\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\":\n                                  _vm.$v.form.phone_number.$invalid &&\n                                  _vm.formstate\n                              },\n                              attrs: {\n                                type: \"text\",\n                                placeholder: \"Personal phone number\"\n                              },\n                              domProps: { value: _vm.form.phone_number },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"phone_number\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _c(\n                              \"small\",\n                              { staticClass: \"form-text invalid-feedback\" },\n                              [_vm._v(\"Phone number is require\")]\n                            )\n                          ]),\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Email\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.email,\n                                  expression: \"form.email\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\":\n                                  _vm.$v.form.email.$invalid && _vm.formstate\n                              },\n                              attrs: {\n                                type: \"email\",\n                                placeholder: \"Your mail address\"\n                              },\n                              domProps: { value: _vm.form.email },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"email\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _c(\n                              \"small\",\n                              { staticClass: \"form-text invalid-feedback\" },\n                              [_vm._v(\"This email is invalid\")]\n                            )\n                          ]),\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Address (Optional)\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.address,\n                                  expression: \"form.address\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"text\",\n                                placeholder: \"Your address\"\n                              },\n                              domProps: { value: _vm.form.address },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"address\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            })\n                          ]),\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Password\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.password,\n                                  expression: \"form.password\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\":\n                                  _vm.$v.form.password.$invalid && _vm.formstate\n                              },\n                              attrs: {\n                                type: \"password\",\n                                placeholder: \"Your password\"\n                              },\n                              domProps: { value: _vm.form.password },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"password\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _c(\n                              \"small\",\n                              { staticClass: \"form-text invalid-feedback\" },\n                              [_vm._v(\"Password length is more than 6\")]\n                            )\n                          ]),\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Re-enter Password\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.repassword,\n                                  expression: \"form.repassword\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\":\n                                  _vm.$v.form.repassword.$invalid &&\n                                  _vm.formstate\n                              },\n                              attrs: {\n                                type: \"password\",\n                                placeholder: \"re-enter password again\"\n                              },\n                              domProps: { value: _vm.form.repassword },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"repassword\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.$v.form.repassword.require\n                              ? _c(\n                                  \"small\",\n                                  { staticClass: \"form-text invalid-feedback\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                        Re-enter password length must more than 6\\n                                    \"\n                                    )\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm.$v.form.repassword.sameAs &&\n                            !_vm.$v.form.repassword.require\n                              ? _c(\n                                  \"small\",\n                                  { staticClass: \"form-text invalid-feedback\" },\n                                  [\n                                    _vm._v(\n                                      \"Re-enter password length must same\\n                                        with password\\n                                    \"\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ])\n                        ])\n                      ])\n                    : _c(\"div\", { staticClass: \"login-form-body-form-info\" }, [\n                        _c(\"p\", [_vm._v(\"Give us some info\")]),\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Company name\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.name,\n                                  expression: \"form.name\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\":\n                                  _vm.$v.form.name.$invalid && _vm.formstate\n                              },\n                              attrs: {\n                                type: \"text\",\n                                placeholder: \"Company name\"\n                              },\n                              domProps: { value: _vm.form.name },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"name\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.$v.form.name.$invalid && _vm.formstate\n                              ? _c(\n                                  \"small\",\n                                  { staticClass: \"form-text invalid-feedback\" },\n                                  [\n                                    _vm._v(\n                                      \"Your company name is require\\n                                    \"\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ]),\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group col col-6\" },\n                            [\n                              _c(\"label\", [_vm._v(\"Phone number\")]),\n                              _c(\"VueTelInput\", {\n                                staticClass: \"form-control\",\n                                class: {\n                                  \"is-invalid\":\n                                    _vm.$v.form.phone_number.$invalid &&\n                                    _vm.formstate\n                                },\n                                attrs: {\n                                  type: \"number\",\n                                  placeholder: \"Company number\",\n                                  disabledFormatting: true,\n                                  inputOptions: { showDialCode: true },\n                                  preferredCountries: [\"us\", \"gb\", \"ua\"]\n                                },\n                                on: { onInput: _vm.onInput },\n                                model: {\n                                  value: _vm.form.phone_number,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form, \"phone_number\", $$v)\n                                  },\n                                  expression: \"form.phone_number\"\n                                }\n                              }),\n                              !_vm.$v.form.phone_number.required\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text invalid-feedback\"\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                        Phone number is require\\n                                    \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              !_vm.$v.form.phone_number.isValid &&\n                              _vm.$v.form.phone_number.required\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text invalid-feedback\"\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"Phone number is not valid\\n                                    \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ],\n                            1\n                          ),\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Email\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.email,\n                                  expression: \"form.email\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\":\n                                  _vm.$v.form.email.$invalid && _vm.formstate\n                              },\n                              attrs: {\n                                type: \"email\",\n                                placeholder: \"Your mail address\"\n                              },\n                              domProps: { value: _vm.form.email },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"email\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _c(\n                              \"small\",\n                              { staticClass: \"form-text invalid-feedback\" },\n                              [_vm._v(\"This email is invalid\")]\n                            )\n                          ]),\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Company website (option)\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.address,\n                                  expression: \"form.address\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"text\",\n                                placeholder: \"Website link\"\n                              },\n                              domProps: { value: _vm.form.address },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"address\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            })\n                          ]),\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Password\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.password,\n                                  expression: \"form.password\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\":\n                                  _vm.$v.form.password.$invalid && _vm.formstate\n                              },\n                              attrs: {\n                                type: \"password\",\n                                placeholder: \"Your password\"\n                              },\n                              domProps: { value: _vm.form.password },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"password\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _c(\n                              \"small\",\n                              { staticClass: \"form-text invalid-feedback\" },\n                              [_vm._v(\"Password length is more than 6\")]\n                            )\n                          ]),\n                          _c(\"div\", { staticClass: \"form-group col col-6\" }, [\n                            _c(\"label\", [_vm._v(\"Re-enter Password\")]),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.repassword,\n                                  expression: \"form.repassword\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\":\n                                  _vm.$v.form.repassword.$invalid &&\n                                  _vm.formstate\n                              },\n                              attrs: {\n                                type: \"password\",\n                                placeholder: \"re-enter password again\"\n                              },\n                              domProps: { value: _vm.form.repassword },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"repassword\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.$v.form.repassword.require\n                              ? _c(\n                                  \"small\",\n                                  { staticClass: \"form-text invalid-feedback\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                        Re-enter password length must more than 6\\n                                    \"\n                                    )\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm.$v.form.repassword.sameAs &&\n                            !_vm.$v.form.repassword.require\n                              ? _c(\n                                  \"small\",\n                                  { staticClass: \"form-text invalid-feedback\" },\n                                  [\n                                    _vm._v(\n                                      \"Re-enter password length must same\\n                                        with password\\n                                    \"\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ]),\n                          _c(\n                            \"div\",\n                            { staticClass: \"difficults-report col col-12\" },\n                            [\n                              _c(\"p\", [\n                                _vm._v(\n                                  \"Difficults that your company are facing\"\n                                )\n                              ]),\n                              _c(\n                                \"ul\",\n                                { staticClass: \"list-difficult\" },\n                                _vm._l(_vm.question_list, function(question) {\n                                  return _c(\"li\", [\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.form.question,\n                                          expression: \"form.question\"\n                                        }\n                                      ],\n                                      attrs: {\n                                        type: \"radio\",\n                                        id: question.id,\n                                        name: \"difficult-group\"\n                                      },\n                                      domProps: {\n                                        value: question.id,\n                                        checked: _vm._q(\n                                          _vm.form.question,\n                                          question.id\n                                        )\n                                      },\n                                      on: {\n                                        change: function($event) {\n                                          return _vm.$set(\n                                            _vm.form,\n                                            \"question\",\n                                            question.id\n                                          )\n                                        }\n                                      }\n                                    }),\n                                    _c(\n                                      \"label\",\n                                      { attrs: { for: question.id } },\n                                      [_vm._v(_vm._s(question.content))]\n                                    )\n                                  ])\n                                }),\n                                0\n                              ),\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.form.content_option,\n                                      expression: \"form.content_option\"\n                                    }\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    placeholder:\n                                      \"Else? Show us others problem that you are facing.\"\n                                  },\n                                  domProps: { value: _vm.form.content_option },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.form,\n                                        \"content_option\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ])\n                            ]\n                          )\n                        ])\n                      ]),\n                  _vm.server_message\n                    ? _c(\n                        \"ul\",\n                        { staticClass: \"text-danger\" },\n                        _vm._l(_vm.server_message, function(value, key) {\n                          return _c(\"li\", [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.server_message[key][0]) +\n                                \"\\n                            \"\n                            )\n                          ])\n                        }),\n                        0\n                      )\n                    : _vm._e(),\n                  _c(\"div\", { staticClass: \"login-form-body-action m-t-15\" }, [\n                    _vm._m(3),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn\",\n                        class: { \"btn-importing\": _vm.isRegisting }\n                      },\n                      [\n                        _vm._m(4),\n                        _vm._v(\n                          \"\\n                                Create account\\n                            \"\n                        )\n                      ]\n                    )\n                  ])\n                ])\n              ]\n            )\n          ])\n        ])\n      ])\n    ]\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"login-page__header p-t-30\" }, [\n      _c(\"img\", {\n        attrs: {\n          src: require(\"../../../assets/images/default/Logo.png\"),\n          height: \"57\",\n          width: \"386\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"col col-6 login-promote\" }, [\n      _c(\"div\", { staticClass: \"login-promote__image\" }, [\n        _c(\"img\", {\n          attrs: {\n            src: require(\"../../../assets/images/login/login-image-1.png\"),\n            height: \"301\",\n            width: \"449\"\n          }\n        })\n      ]),\n      _c(\"div\", { staticClass: \"login-promote__description\" }, [\n        _c(\"p\", { staticClass: \"login-promote__description__title m-t-30\" }, [\n          _vm._v(\n            \"\\n                    Sell and manage everywhere\\n                \"\n          )\n        ]),\n        _c(\"p\", [\n          _vm._v(\n            \"\\n                    The easiest way for brands & retailers to list and sell their products on the worldâ€™s largest\\n                    online marketplaces.\\n                \"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"create-account-logo\" }, [\n      _c(\"div\", { staticClass: \"logo\" }, [\n        _c(\"img\", {\n          attrs: {\n            src: require(\"../../../assets/images/default/avatar.png\"),\n            alt: \"\"\n          }\n        })\n      ]),\n      _c(\"div\", { staticClass: \"create-account-title\" }, [\n        _c(\"p\", { staticClass: \"big-title\" }, [_vm._v(\"Create account\")]),\n        _c(\"p\", { staticClass: \"small-title\" }, [_vm._v(\"For free experience\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", [\n      _c(\"span\", [\n        _vm._v(\"By signing up, you agree to our \"),\n        _c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"Terms of Use\")]),\n        _vm._v(\".\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"circle-loader\" }, [\n      _c(\"div\", { staticClass: \"checkmark draw\" })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}