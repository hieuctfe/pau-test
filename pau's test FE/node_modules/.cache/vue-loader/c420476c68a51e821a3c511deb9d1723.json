{"remainingRequest":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/seller/_components/login.vue?vue&type=template&id=6c3c5ee0&","dependencies":[{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/seller/_components/login.vue","mtime":1553682049506},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n    <div class=\"login-container\">\n        <div class=\"login-form row\">\n            <div @click=\"formFocus('login-form')\" :class=\"{'form-opacity':!isLoginFocus}\"\n                 class=\"col col-md-6 login-left-form\">\n                <transition name=\"fade-transform\" mode=\"out-in\">\n                    <form @submit.stop.prevent=\"onSubmitLogin()\" novalidate v-if=\"!forgotPassword\" key=\"is-login\">\n                        <div class=\"product-filter-title m-b-25\">\n                            <span>Login</span>\n                        </div>\n                        <p>Keep raising your business</p>\n                        <div class=\"form-group become-input col col-md-8\">\n                            <label class=\"input-title\">Email <span class=\"text-danger\">*</span></label>\n                            <input class=\"form-control outline-type\"\n                                   :class=\"{'is-invalid': $v.login.email.$error || (loginStatus && $v.login.email.$invalid)}\"\n                                   v-model=\"$v.login.email.$model\"/>\n                            <div class=\"invalid-feedback\"\n                                 v-if=\"$v.login.email.$error  || (loginStatus && $v.login.email.$invalid)\">\n                                <span v-if=\"!$v.login.email.required\">Email is required</span>\n                                <span v-if=\"!$v.login.email.email\">Email is not valid</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group become-input col col-md-8\">\n                            <label class=\"input-title\">Password <span class=\"text-danger\">*</span></label>\n                            <input class=\"form-control outline-type\" type=\"password\"\n                                   :class=\"{'is-invalid': $v.login.password.$error || (loginStatus && $v.login.password.$invalid)}\"\n                                   v-model=\"$v.login.password.$model\"/>\n                            <div class=\"invalid-feedback\"\n                                 v-if=\"$v.login.password.$error || (loginStatus && $v.login.password.$invalid)\">\n                                <span v-if=\"!$v.login.password.required\">Password is required</span>\n                                <span v-if=\"!$v.login.password.minLength\">Password to short</span>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group become-input col col-md-8 m-t-10\">\n                            <div class=\"row\">\n                                <div class=\"col col-6\">\n                                    <div class=\"custom-checkbox\">\n                                        <label><input type=\"checkbox\">Remember Me</label>\n                                    </div>\n                                </div>\n                                <div class=\"col col-6 text-right\">\n                                    <a href=\"#\" @click.stop.prevent=\"forgotPassword = true\"\n                                       class=\"text-yellow forgot-password\">Forgot your password?</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\" v-if=\"error.login != ''\">\n                            <div class=\"error-login text-danger\">\n                                {{ error.login }}\n                            </div>\n                        </div>\n                        <div class=\"login-action m-t-20\">\n                            <button class=\"save-login btn btn-warning btn-radius-border\" type=\"submit\"\n                                    :disabled=\"$v.login.$invalid\">\n                                Login\n                            </button>\n                        </div>\n                    </form>\n                    <form @submit.stop.prevent=\"onSubmitForgot()\" novalidate v-else key=\"is-fotgot-password\">\n                        <div class=\"product-filter-title m-b-25\">\n                            <span>Forgot your password?</span>\n                        </div>\n                        <p>Enter your email </p>\n                        <div class=\"form-group become-input col col-md-8\">\n                            <label class=\"input-title\">Email <span class=\"text-danger\">*</span></label>\n                            <input class=\"form-control outline-type\"\n                                   :class=\"{'is-invalid': $v.forgot.email.$error || (forgotStatus && $v.forgot.email.$invalid)}\"\n                                   v-model=\"$v.forgot.email.$model\"/>\n                            <div class=\"invalid-feedback\"\n                                 v-if=\"$v.forgot.email.$error  || (forgotStatus && $v.forgot.email.$invalid)\">\n                                <span v-if=\"!$v.forgot.email.required\">Email is required</span>\n                                <span v-if=\"!$v.forgot.email.email\">Email is not valid</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group become-input col col-md-8 m-t-10 text-right\">\n                            <a href=\"#\" @click.stop.prevent=\"forgotPassword = false\"\n                               class=\"text-yellow forgot-password\">Back to login</a>\n                        </div>\n                        <div class=\"form-group\" v-if=\"error.forgot != ''\">\n                            <div class=\"error-login text-danger\">\n                                {{ error.forgot }}\n                            </div>\n                        </div>\n                        <div class=\"login-action m-t-20\">\n                            <button class=\"save-login btn btn-warning btn-radius-border\" type=\"submit\"\n                                    :disabled=\"$v.forgot.$invalid\">\n                                Get Verified Mail\n                            </button>\n                        </div>\n                    </form>\n                </transition>\n            </div>\n            <div @click=\"formFocus\" :class=\"{'form-opacity':isLoginFocus}\" class=\"col col-md-6 register-right-form\">\n                <form @submit.stop.prevent=\"onSubmitRegister()\" novalidate>\n                    <div class=\"product-filter-title m-b-25\">\n                        <span>Register</span>\n                    </div>\n                    <p>Start making business with us!</p>\n                    <div class=\"form-group become-input col col-md-8\">\n                        <label class=\"input-title\">Email <span class=\"text-danger\">*</span> </label>\n                        <input class=\"form-control outline-type\"\n                               :class=\"{\n                            'is-invalid': $v.register.email.$error || (registerStatus&&$v.register.email.$invalid),\n                            'is-valid': !$v.register.email.$invalid\n                        }\" v-model=\"$v.register.email.$model\"/>\n                        <div class=\"invalid-feedback\"\n                             v-if=\"$v.register.email.$error || (registerStatus&&$v.register.email.$invalid)\">\n                            <span v-if=\"!$v.register.email.required\">Email is required</span>\n                            <span v-if=\"!$v.register.email.email\">Email is not valid</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group become-input col col-md-8\">\n                        <label class=\"input-title\">Password* <span class=\"text-danger\">*</span></label>\n                        <input class=\"form-control outline-type\" type=\"password\" v-model=\"$v.register.password.$model\"\n                               :class=\"{\n                            'is-invalid': $v.register.password.$error || (registerStatus&&$v.register.password.$invalid),\n                            'is-valid': !$v.register.password.$invalid\n                        }\"/>\n                        <div class=\"invalid-feedback\"\n                             v-if=\"$v.register.password.$error || (registerStatus&&$v.register.password.$invalid)\">\n                            <span v-if=\"!$v.register.password.required\">Password is required</span>\n                            <span v-if=\"!$v.register.password.minLength\">Password length much more than 4</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group become-input col col-md-8\">\n                        <label class=\"input-title\">Repassword <span class=\"text-danger\">*</span></label>\n                        <input class=\"form-control outline-type\" type=\"password\"\n                               :class=\"{\n                            'is-invalid': $v.register.repassword.$error || (registerStatus&&$v.register.repassword.$invalid) ,\n                            'is-valid': !$v.register.repassword.$invalid\n                        }\" v-model=\"$v.register.repassword.$model\"/>\n                        <div class=\"invalid-feedback\"\n                             v-if=\"$v.register.repassword.$error || (registerStatus&&$v.register.repassword.$invalid)\">\n                            <span v-if=\"!$v.register.repassword.required\">Repassword is required</span>\n                            <span v-if=\"$v.register.repassword.required && !$v.register.repassword.match\">Repassword must be same as password</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group become-input col col-md-8\">\n                        <label class=\"input-title\">Country <span class=\"text-danger\">*</span></label>\n                        <select class=\"form-control outline-type\"\n                                :class=\"{\n                            'is-invalid': $v.register.country_code.$error || (registerStatus&&$v.register.country_code.$invalid),\n                            'is-valid': !$v.register.country_code.$invalid\n                        }\" v-model=\"$v.register.country_code.$model\">\n                            <option value=\"\">Select country</option>\n                            <option v-for=\"(item , index) in countries\" :value=\"item.code\" :key=\"`item${index}`\">\n                                {{item.name}}\n                            </option>\n                        </select>\n                        <div class=\"invalid-feedback\"\n                             v-if=\"$v.register.country_code.$error || ( registerStatus&&$v.register.country_code.$invalid)\">\n                            <span v-if=\"!$v.register.country_code.required\">Password is required</span>\n                        </div>\n                    </div>\n                    <div class=\"accept-checkbox form-check form-check-inline m-t-10\">\n                        <div class=\"custom-checkbox\">\n                            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"register.agree\">\n                        </div>\n                        <label class=\"form-check-label\">I have read and accept <a href=\"\">the terms and\n                            conditions</a></label>\n                    </div>\n                    <div class=\"form-group\" v-if=\"error.register != ''\">\n                        <div class=\"error-login text-danger\">\n                            {{ error.register }}\n                        </div>\n                    </div>\n                    <div class=\"login-action m-t-20\">\n                        <button class=\"save-login btn btn-warning btn-radius-border\" type=\"submit\"\n                                :disabled=\"$v.register.$invalid\">\n                            Register Now\n                        </button>\n                    </div>\n                </form>\n                <!--<v-facebook-login class=\"test\" @login=\"test\" :login-options=\"{ scope: 'email' }\"-->\n                                  <!--app-id=\"235588346871329\">-->\n                    <!--<template>-->\n                        <!--<v-facebook-login-scope>-->\n                            <!--<button slot-scope=\"scope\">-->\n                                <!--&lt;!&ndash; Compose HTML/CSS here, otherwise nothing will be rendered! &ndash;&gt;-->\n                                <!--ahjhihi-->\n                            <!--</button>-->\n                        <!--</v-facebook-login-scope>-->\n                    <!--</template>-->\n\n                <!--</v-facebook-login>-->\n                <VFBLoginScope class=\"test\"\n                               app-id=\"235588346871329\">\n                    <button slot-scope=\"scope\" @login=\"test\"  :login-options=\"{ scope: 'email' }>\n                        <!-- Compose HTML/CSS here, otherwise nothing will be rendered! -->\n                        <p>ádsdf</p>\n                    </button>\n                </VFBLoginScope>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {required, minLength, email, sameAs} from 'vuelidate/lib/validators'\n    import {mapGetters} from 'vuex';\n    import {VFBLogin as VFacebookLogin} from 'vue-facebook-login-component'\n    import { VFBLoginScope } from 'vue-facebook-login-component'\n\n    export default {\n        name: \"LoginAndRegister\",\n        data() {\n            return {\n                isLoginFocus: true,\n                login: {\n                    email: '',\n                    password: ''\n                },\n                register: {\n                    email: '',\n                    password: '',\n                    repassword: '',\n                    country_code: '',\n                    agree: false\n                },\n                forgot: {\n                    email: ''\n                },\n                error: {\n                    login: '',\n                    forgot: '',\n                    register: ''\n                },\n                loginStatus: false,\n                forgotStatus: false,\n                registerStatus: false,\n                forgotPassword: false,\n            }\n        },\n        components: {\n            VFacebookLogin,VFBLoginScope\n        },\n        methods: {\n            test(res) {\n                console.log(res);\n            },\n            formFocus(isLogin) {\n                if (isLogin == \"login-form\") {\n                    this.isLoginFocus = true\n                } else {\n                    this.isLoginFocus = false\n                }\n            },\n            onSubmitLogin() {\n                this.$v.login.$touch()\n                this.loginStatus = true\n                if (!this.$v.login.$invalid) {\n                    this.$store.dispatch('$_Seller/LOGIN', {\n                        email: this.login.email,\n                        password: this.login.password,\n                    }).then(res => {\n                        let {status, data} = res.data\n                        if (status) {\n                            if (this.router.name) {\n                                this.redirect(this.router.fullPath)\n                            } else {\n                                this.redirect({\n                                    name: 'Seller'\n                                })\n                            }\n\n                        } else {\n                            this.error.login = data.message ? data.message : 'error'\n                        }\n                    })\n                }\n            },\n            onSubmitForgot() {\n                this.$v.forgot.$touch()\n                this.forgotStatus = true\n                if (!this.$v.forgot.$invalid) {\n                    this.$store.dispatch('$_Seller/FORGOT_PASSWORD', {\n                        email: this.forgot.email,\n                    }).then(res => {\n                        let {status, data} = res.data\n                        if (status) {\n\n\n                        } else {\n                            this.error.forgot = data.message ? data.message : 'error'\n                        }\n                    })\n                }\n            },\n            onSubmitRegister() {\n                this.$v.register.$touch()\n                this.registerStatus = true\n                if (!this.$v.register.$invalid) {\n                    this.$store.dispatch('$_Seller/REGISTER', {\n                        email: this.register.email,\n                        password: this.register.password,\n                        country_code: this.register.country_code\n                    }).then(res => {\n                        let {status, data} = res\n                        if (status) {\n                            this.redirect({\n                                name: 'SellerPlan'\n                            })\n                        } else {\n                            this.error.register = data.message ? data.message : 'error'\n                        }\n                    })\n                }\n            }\n        },\n        computed: {\n            ...mapGetters({\n                countries: '$_Home/getCountries',\n                router: 'getPreviousRouter'\n            })\n        },\n        watch: {\n            'forgotPassword': function (value) {\n                if (!value) {\n                    this.forgot = {\n                        email: ''\n                    }\n                    this.$v.forgot.$reset()\n                } else {\n                    this.login = {\n                        email: '',\n                        password: ''\n                    }\n                    this.$v.login.$reset()\n                }\n            }\n        },\n        validations: {\n            login: {\n                email: {\n                    required, email\n                },\n                password: {\n                    required, minLength: minLength(6)\n                }\n            },\n            forgot: {\n                email: {\n                    required, email\n                },\n            },\n            register: {\n                email: {\n                    required, email\n                },\n                password: {\n                    required, minLength: minLength(6)\n                },\n                repassword: {\n                    required,\n                    macth: sameAs('password')\n                },\n                country_code: {\n                    required,\n                },\n                agree: {\n                    required: function (value) {\n                        return value\n                    }\n                }\n            }\n        },\n    }\n</script>\n\n\n<style lang=\"scss\" scoped>\n    @import 'src/assets/style';\n\n    .form-opacity {\n        opacity: .4;\n    }\n\n    .login-form {\n        .login-left-form {\n            position: relative;\n            &:after {\n                content: '';\n                height: 100%;\n                border-right: solid 1px lightgray;\n                position: absolute;\n                right: 10%;\n                top: 0px;\n                z-index: 10;\n            }\n            &:before {\n                content: 'or';\n                height: 50px;\n                width: 50px;\n                border-radius: 50%;\n                border: solid 1px lightgray;\n                text-align: center;\n                line-height: 50px;\n                position: absolute;\n                right: 10%;\n                top: 40%;\n                transform: translateX(50%);\n                z-index: 11;\n                background: white;\n            }\n        }\n\n        .login-left-form, .register-right-form {\n            transition: all .5s;\n        }\n        .become-input {\n            margin-top: 20px;\n            padding-left: 0px;\n            input.form-control {\n                /*height: 50px;*/\n            }\n        }\n        .accept-checkbox {\n            a {\n                color: $yellow;\n            }\n        }\n    }\n\n    .login-action {\n        .save-login {\n            color: white;\n            padding-left: 20px;\n            padding-right: 20px;\n            min-width: 150px;\n        }\n    }\n\n    .text-yellow {\n        color: $yellow;\n    }\n\n    .forgot-password {\n        color: $yellow;\n        &:hover {\n            color: $yellow;\n            text-decoration: underline;\n        }\n    }\n\n    /*.test {*/\n    /*background: red !important;*/\n    /*span {*/\n    /*display: none!important;*/\n    /*}*/\n    /*}*/\n\n</style>\n",null]}