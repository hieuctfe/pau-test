{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js!/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Pau's test/pau's test FE/src/modules/account/_components/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/modules/account/_components/login.vue","mtime":1556259719858},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/Document/Pau's test/pau's test FE/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength, maxLength, email, sameAs } from 'vuelidate/lib/validators';\nimport { mapActions } from 'vuex';\nexport default {\n  name: \"login\",\n  data: function data() {\n    return {\n      form: {\n        email: '',\n        password: ''\n      },\n      user_pass_error: false,\n      formstate: false\n    };\n  },\n  methods: _objectSpread({}, mapActions({\n    account_login: \"$_Account/LOGIN\"\n  }), {\n    login: function login() {\n      var _this = this;\n\n      this.formstate = true;\n\n      if (!this.$v.form.$invalid) {\n        this.account_login(this.form).then(function (res) {\n          if (res.data.status) {\n            _this.$router.push({\n              name: \"NeedAuth\"\n            });\n          } else if (res.data.errors) {\n            _this.user_pass_error = true;\n          } else {\n            $notify({\n              type: \"danger\",\n              content: \"Some thing wrong\"\n            });\n          }\n        });\n      }\n    }\n  }),\n  validations: function validations() {\n    return {\n      form: {\n        email: {\n          required: required,\n          email: email\n        },\n        password: {\n          required: required,\n          minLength: minLength(6)\n        }\n      }\n    };\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,SAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,KAAA,EAAA,MAAA,QAAA,0BAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA,OADA;AAKA,MAAA,eAAA,EAAA,KALA;AAMA,MAAA,SAAA,EAAA;AANA,KAAA;AAQA,GAXA;AAYA,EAAA,OAAA,oBACA,UAAA,CAAA;AACA,IAAA,aAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,KAJA,mBAIA;AAAA;;AACA,WAAA,SAAA,GAAA,IAAA;;AACA,UAAA,CAAA,KAAA,EAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,aAAA,aAAA,CAAA,KAAA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aAAA;AACA,WAFA,MAEA,IAAA,GAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,YAAA,KAAA,CAAA,eAAA,GAAA,IAAA;AACA,WAFA,MAEA;AACA,YAAA,OAAA,CAAA;AACA,cAAA,IAAA,EAAA,QADA;AAEA,cAAA,OAAA,EAAA;AAFA,aAAA,CAAA;AAIA;AACA,SAXA;AAYA;AACA;AApBA,IAZA;AAkCA,EAAA,WAlCA,yBAkCA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,QAAA,EAAA,QADA;AACA,UAAA,KAAA,EAAA;AADA,SADA;AAIA,QAAA,QAAA,EAAA;AACA,UAAA,QAAA,EAAA,QADA;AAEA,UAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAFA;AAJA;AADA,KAAA;AAWA;AA9CA,CAAA","sourcesContent":["<template>\n    <div class=\"login-pgae\">\n        <div class=\"login-page__header p-t-30 p-l-30\">\n            <img src=\"../../../assets/images/default/Logo.png\" height=\"57\" width=\"386\"/>\n        </div>\n        <div class=\"card login-form-container\">\n            <h2>Login</h2>\n            <form @submit.stop.prevent=\"login()\">\n                <div class=\"form-group\">\n                    <input type=\"text\" v-model=\"form.email\"\n                           class=\"form-control\" placeholder=\"Email\">\n                    <!--<small v-if=\"$v.form.name.$invalid && formstate\"-->\n                    <!--class=\"form-text invalid-feedback\">Your name is require-->\n                    <!--</small>-->\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" v-model=\"form.password\"\n                           class=\"form-control\" placeholder=\"Password\">\n                    <!--<small v-if=\"$v.form.name.$invalid && formstate\"-->\n                    <!--class=\"form-text invalid-feedback\">Your name is require-->\n                    <!--</small>-->\n                </div>\n                <div v-if=\"user_pass_error\" class=\"text-center m-t-10 text-danger\">\n                    Email or Password is incorrect\n                </div>\n                <div class=\"text-center m-t-10\">\n                    <button class=\"btn login-btn\">Login</button>\n                </div>\n                <div class=\"text-center register-link text-warning m-t-20\">\n                    <router-link :to=\"{name : 'Register'}\">\n                        Haven't account yet ?\n                    </router-link>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {required, minLength, maxLength, email, sameAs} from 'vuelidate/lib/validators'\n    import {mapActions} from 'vuex'\n\n    export default {\n        name: \"login\",\n        data() {\n            return {\n                form: {\n                    email: '',\n                    password: ''\n                },\n                user_pass_error: false,\n                formstate: false,\n            }\n        },\n        methods: {\n            ...mapActions({\n                account_login: \"$_Account/LOGIN\"\n            }),\n            login() {\n                this.formstate = true\n                if (!this.$v.form.$invalid) {\n                    this.account_login(this.form).then(res => {\n                        if (res.data.status) {\n                            this.$router.push({name: \"NeedAuth\"})\n                        } else if (res.data.errors) {\n                            this.user_pass_error = true\n                        } else {\n                            $notify({\n                                type: \"danger\",\n                                content: \"Some thing wrong\"\n                            })\n                        }\n                    })\n                }\n            }\n        },\n        validations() {\n            return {\n                form: {\n                    email: {\n                        required, email,\n                    },\n                    password: {\n                        required,\n                        minLength: minLength(6),\n                    }\n                }\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .login-pgae {\n        height: calc(100vh - 50px);\n        position: relative;\n        .login-form-container {\n            position: absolute;\n            min-width: 500px;\n            padding: 30px 30px 20px;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            .login-btn {\n                width: 150px;\n                height: 45px;\n                color: white;\n                background: #FF7800;\n                margin: auto;\n            }\n            .register-link {\n                a {\n                    color: #FF7800 !important;\n                }\n            }\n        }\n    }\n</style>\n"],"sourceRoot":"src/modules/account/_components"}]}