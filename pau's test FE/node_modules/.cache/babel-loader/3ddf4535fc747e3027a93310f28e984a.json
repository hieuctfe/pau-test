{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js!/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Pau's test/pau's test FE/src/components/pagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/components/pagination.vue","mtime":1554347196336},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/Volumes/Document/Pau's test/pau's test FE/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    value: {\n      type: [Number, String]\n    },\n    total: {\n      type: Number,\n      required: true\n    },\n    routerLink: {\n      default: true\n    },\n    forcePage: {\n      type: Number\n    },\n    change: {\n      type: Function,\n      default: function _default() {}\n    },\n    pageRange: {\n      type: Number,\n      default: 5\n    },\n    marginPages: {\n      type: Number,\n      default: 1\n    },\n    prevText: {\n      type: String,\n      default: '<i class=\"fal fa-angle-left\"></i>'\n    },\n    nextText: {\n      type: String,\n      default: '<i class=\"fal fa-angle-right\"></i>'\n    },\n    breakViewText: {\n      type: String,\n      default: 'â€¦'\n    },\n    containerClass: {\n      type: String,\n      default: 'pagination'\n    },\n    pageClass: {\n      type: String\n    },\n    pageLinkClass: {\n      type: String\n    },\n    prevClass: {\n      type: String\n    },\n    prevLinkClass: {\n      type: String\n    },\n    nextClass: {\n      type: String\n    },\n    nextLinkClass: {\n      type: String\n    },\n    breakViewClass: {\n      type: String\n    },\n    breakViewLinkClass: {\n      type: String\n    },\n    activeClass: {\n      type: String,\n      default: 'active'\n    },\n    disabledClass: {\n      type: String,\n      default: 'disabled'\n    },\n    noLiSurround: {\n      type: Boolean,\n      default: false\n    },\n    firstLastButton: {\n      type: Boolean,\n      default: false\n    },\n    firstButtonText: {\n      type: String,\n      default: 'First'\n    },\n    lastButtonText: {\n      type: String,\n      default: 'Last'\n    },\n    hidePrevNext: {\n      type: Boolean,\n      default: false\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    if (this.forcePage === undefined) return;\n\n    if (this.forcePage !== this.selected) {\n      this.selected = this.forcePage;\n    }\n  },\n  computed: {\n    selected: {\n      get: function get() {\n        return this.value || this.innerValue;\n      },\n      set: function set(newValue) {\n        this.innerValue = newValue;\n      }\n    },\n    pages: function pages() {\n      var _this = this;\n\n      var items = {};\n\n      if (this.total <= this.pageRange) {\n        for (var index = 0; index < this.total; index++) {\n          var page = {\n            index: index,\n            content: index + 1,\n            selected: index === this.selected - 1\n          };\n          items[index] = page;\n        }\n      } else {\n        var halfPageRange = Math.floor(this.pageRange / 2);\n\n        var setPageItem = function setPageItem(index) {\n          var page = {\n            index: index,\n            content: index + 1,\n            selected: index === _this.selected - 1\n          };\n          items[index] = page;\n        };\n\n        var setBreakView = function setBreakView(index) {\n          var breakView = {\n            disabled: true,\n            breakView: true\n          };\n          items[index] = breakView;\n        }; // 1st - loop thru low end of margin pages\n\n\n        for (var i = 0; i < this.marginPages; i++) {\n          setPageItem(i);\n        } // 2nd - loop thru selected range\n\n\n        var selectedRangeLow = 0;\n\n        if (this.selected - halfPageRange > 0) {\n          selectedRangeLow = this.selected - 1 - halfPageRange;\n        }\n\n        var selectedRangeHigh = selectedRangeLow + this.pageRange - 1;\n\n        if (selectedRangeHigh >= this.total) {\n          selectedRangeHigh = this.total - 1;\n          selectedRangeLow = selectedRangeHigh - this.pageRange + 1;\n        }\n\n        for (var _i = selectedRangeLow; _i <= selectedRangeHigh && _i <= this.total - 1; _i++) {\n          setPageItem(_i);\n        } // Check if there is breakView in the left of selected range\n\n\n        if (selectedRangeLow > this.marginPages) {\n          setBreakView(selectedRangeLow - 1);\n        } // Check if there is breakView in the right of selected range\n\n\n        if (selectedRangeHigh + 1 < this.total - this.marginPages) {\n          setBreakView(selectedRangeHigh + 1);\n        } // 3rd - loop thru high end of margin pages\n\n\n        for (var _i2 = this.total - 1; _i2 >= this.total - this.marginPages; _i2--) {\n          setPageItem(_i2);\n        }\n      }\n\n      return items;\n    }\n  },\n  data: function data() {\n    return {\n      innerValue: 1\n    };\n  },\n  methods: {\n    setRouterLink: function setRouterLink(page) {\n      var route = {\n        name: this.$route.name,\n        query: JSON.parse(_JSON$stringify(this.$route.query)),\n        params: JSON.parse(_JSON$stringify(this.$route.params))\n      };\n      route.query['page'] = page;\n      return this.setRouterLinkDefault(route);\n    },\n    handlePageSelected: function handlePageSelected(selected) {\n      if (this.selected === selected) return;\n      this.innerValue = selected;\n      this.$emit('input', selected);\n      this.change(selected);\n    },\n    prevPage: function prevPage() {\n      if (this.selected <= 1) return;\n      this.handlePageSelected(this.selected - 1);\n    },\n    nextPage: function nextPage() {\n      if (this.selected >= this.total) return;\n      this.handlePageSelected(this.selected + 1);\n    },\n    firstPageSelected: function firstPageSelected() {\n      return this.selected === 1;\n    },\n    lastPageSelected: function lastPageSelected() {\n      return this.selected === this.total || this.total === 0;\n    },\n    selectFirstPage: function selectFirstPage() {\n      if (this.selected <= 1) return;\n      this.handlePageSelected(1);\n    },\n    selectLastPage: function selectLastPage() {\n      if (this.selected >= this.total) return;\n      this.handlePageSelected(this.total);\n    }\n  }\n};",{"version":3,"sources":["pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA;AADA,KADA;AAIA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAJA;AAQA,IAAA,UAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA,KARA;AAWA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAXA;AAcA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KAdA;AAkBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAlBA;AAsBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAtBA;AA0BA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA1BA;AA8BA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA9BA;AAkCA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAlCA;AAsCA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAtCA;AA0CA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KA1CA;AA6CA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KA7CA;AAgDA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAhDA;AAmDA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAnDA;AAsDA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAtDA;AAyDA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAzDA;AA4DA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KA5DA;AA+DA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KA/DA;AAkEA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAlEA;AAsEA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAtEA;AA0EA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA1EA;AA8EA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA9EA;AAkFA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAlFA;AAsFA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAtFA;AA0FA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA1FA,GADA;AAgGA,EAAA,YAhGA,0BAgGA;AACA,QAAA,KAAA,SAAA,KAAA,SAAA,EAAA;;AACA,QAAA,KAAA,SAAA,KAAA,KAAA,QAAA,EAAA;AACA,WAAA,QAAA,GAAA,KAAA,SAAA;AACA;AACA,GArGA;AAsGA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,GAAA,EAAA,eAAA;AACA,eAAA,KAAA,KAAA,IAAA,KAAA,UAAA;AACA,OAHA;AAIA,MAAA,GAAA,EAAA,aAAA,QAAA,EAAA;AACA,aAAA,UAAA,GAAA,QAAA;AACA;AANA,KADA;AASA,IAAA,KAAA,EAAA,iBAAA;AAAA;;AACA,UAAA,KAAA,GAAA,EAAA;;AACA,UAAA,KAAA,KAAA,IAAA,KAAA,SAAA,EAAA;AACA,aAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AACA,cAAA,IAAA,GAAA;AACA,YAAA,KAAA,EAAA,KADA;AAEA,YAAA,OAAA,EAAA,KAAA,GAAA,CAFA;AAGA,YAAA,QAAA,EAAA,KAAA,KAAA,KAAA,QAAA,GAAA;AAHA,WAAA;AAKA,UAAA,KAAA,CAAA,KAAA,CAAA,GAAA,IAAA;AACA;AACA,OATA,MASA;AACA,YAAA,aAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,SAAA,GAAA,CAAA,CAAA;;AAEA,YAAA,WAAA,GAAA,SAAA,WAAA,CAAA,KAAA,EAAA;AACA,cAAA,IAAA,GAAA;AACA,YAAA,KAAA,EAAA,KADA;AAEA,YAAA,OAAA,EAAA,KAAA,GAAA,CAFA;AAGA,YAAA,QAAA,EAAA,KAAA,KAAA,KAAA,CAAA,QAAA,GAAA;AAHA,WAAA;AAMA,UAAA,KAAA,CAAA,KAAA,CAAA,GAAA,IAAA;AACA,SARA;;AAUA,YAAA,YAAA,GAAA,SAAA,YAAA,CAAA,KAAA,EAAA;AACA,cAAA,SAAA,GAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,SAAA,EAAA;AAFA,WAAA;AAKA,UAAA,KAAA,CAAA,KAAA,CAAA,GAAA,SAAA;AACA,SAPA,CAbA,CAsBA;;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,WAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,WAAA,CAAA,CAAA,CAAA;AACA,SAzBA,CA2BA;;;AACA,YAAA,gBAAA,GAAA,CAAA;;AACA,YAAA,KAAA,QAAA,GAAA,aAAA,GAAA,CAAA,EAAA;AACA,UAAA,gBAAA,GAAA,KAAA,QAAA,GAAA,CAAA,GAAA,aAAA;AACA;;AAEA,YAAA,iBAAA,GAAA,gBAAA,GAAA,KAAA,SAAA,GAAA,CAAA;;AACA,YAAA,iBAAA,IAAA,KAAA,KAAA,EAAA;AACA,UAAA,iBAAA,GAAA,KAAA,KAAA,GAAA,CAAA;AACA,UAAA,gBAAA,GAAA,iBAAA,GAAA,KAAA,SAAA,GAAA,CAAA;AACA;;AAEA,aAAA,IAAA,EAAA,GAAA,gBAAA,EAAA,EAAA,IAAA,iBAAA,IAAA,EAAA,IAAA,KAAA,KAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA;AACA,UAAA,WAAA,CAAA,EAAA,CAAA;AACA,SAzCA,CA2CA;;;AACA,YAAA,gBAAA,GAAA,KAAA,WAAA,EAAA;AACA,UAAA,YAAA,CAAA,gBAAA,GAAA,CAAA,CAAA;AACA,SA9CA,CAgDA;;;AACA,YAAA,iBAAA,GAAA,CAAA,GAAA,KAAA,KAAA,GAAA,KAAA,WAAA,EAAA;AACA,UAAA,YAAA,CAAA,iBAAA,GAAA,CAAA,CAAA;AACA,SAnDA,CAqDA;;;AACA,aAAA,IAAA,GAAA,GAAA,KAAA,KAAA,GAAA,CAAA,EAAA,GAAA,IAAA,KAAA,KAAA,GAAA,KAAA,WAAA,EAAA,GAAA,EAAA,EAAA;AACA,UAAA,WAAA,CAAA,GAAA,CAAA;AACA;AACA;;AACA,aAAA,KAAA;AACA;AA/EA,GAtGA;AAuLA,EAAA,IAvLA,kBAuLA;AACA,WAAA;AACA,MAAA,UAAA,EAAA;AADA,KAAA;AAGA,GA3LA;AA4LA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,IADA,EACA;AACA,UAAA,KAAA,GAAA;AACA,QAAA,IAAA,EAAA,KAAA,MAAA,CAAA,IADA;AAEA,QAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,KAAA,MAAA,CAAA,KAAA,CAAA,CAFA;AAGA,QAAA,MAAA,EAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAHA,OAAA;AAKA,MAAA,KAAA,CAAA,KAAA,CAAA,MAAA,IAAA,IAAA;AACA,aAAA,KAAA,oBAAA,CAAA,KAAA,CAAA;AACA,KATA;AAUA,IAAA,kBAVA,8BAUA,QAVA,EAUA;AACA,UAAA,KAAA,QAAA,KAAA,QAAA,EAAA;AAEA,WAAA,UAAA,GAAA,QAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,QAAA;AACA,WAAA,MAAA,CAAA,QAAA;AACA,KAhBA;AAiBA,IAAA,QAjBA,sBAiBA;AACA,UAAA,KAAA,QAAA,IAAA,CAAA,EAAA;AAEA,WAAA,kBAAA,CAAA,KAAA,QAAA,GAAA,CAAA;AACA,KArBA;AAsBA,IAAA,QAtBA,sBAsBA;AACA,UAAA,KAAA,QAAA,IAAA,KAAA,KAAA,EAAA;AAEA,WAAA,kBAAA,CAAA,KAAA,QAAA,GAAA,CAAA;AACA,KA1BA;AA2BA,IAAA,iBA3BA,+BA2BA;AACA,aAAA,KAAA,QAAA,KAAA,CAAA;AACA,KA7BA;AA8BA,IAAA,gBA9BA,8BA8BA;AACA,aAAA,KAAA,QAAA,KAAA,KAAA,KAAA,IAAA,KAAA,KAAA,KAAA,CAAA;AACA,KAhCA;AAiCA,IAAA,eAjCA,6BAiCA;AACA,UAAA,KAAA,QAAA,IAAA,CAAA,EAAA;AAEA,WAAA,kBAAA,CAAA,CAAA;AACA,KArCA;AAsCA,IAAA,cAtCA,4BAsCA;AACA,UAAA,KAAA,QAAA,IAAA,KAAA,KAAA,EAAA;AAEA,WAAA,kBAAA,CAAA,KAAA,KAAA;AACA;AA1CA;AA5LA,CAAA","sourcesContent":["<template>\n    <ul :class=\"containerClass\" v-if=\"total > 1\">\n        <template v-if=\"routerLink\">\n            <li v-if=\"firstLastButton\" :class=\"[pageClass, firstPageSelected() ? disabledClass : '']\">\n                <router-link @click=\"selectFirstPage()\" @keyup.enter=\"selectFirstPage()\" :class=\"pageLinkClass\" :tabindex=\"firstPageSelected() ? -1 : 0\"\n                    v-html=\"firstButtonText\" :to=\"setRouterLink(1)\"></router-link>\n            </li>\n\n            <li v-if=\"!(firstPageSelected() && hidePrevNext)\" :class=\"[prevClass, firstPageSelected() ? disabledClass : '']\">\n                <router-link :to=\"setRouterLink(selected - 1)\" @click=\"prevPage()\" @keyup.enter=\"prevPage()\" :class=\"prevLinkClass\" :tabindex=\"firstPageSelected() ? -1 : 0\"\n                    v-html=\"prevText\"></router-link>\n            </li>\n\n            <li v-for=\"(page, index) in pages\" :class=\"[pageClass, page.selected ? activeClass : '', page.disabled ? disabledClass : '', page.breakView ? breakViewClass: '']\" :key=\"`page_index_${index}`\">\n                <a v-if=\"page.breakView\" :class=\"[pageLinkClass, breakViewLinkClass]\" tabindex=\"0\">\n                    <slot name=\"breakViewContent\">{{ breakViewText }}</slot>\n                </a>\n                <a v-else-if=\"page.disabled\" :class=\"pageLinkClass\" tabindex=\"0\">{{ page.content }}</a>\n                <router-link v-else @click=\"handlePageSelected(page.index + 1)\"\n                @keyup.enter=\"handlePageSelected(page.index + 1)\"\n                :class=\"pageLinkClass\" :to=\"setRouterLink(page.index + 1)\"\n                    tabindex=\"0\">{{ page.content }}</router-link>\n            </li>\n\n            <li v-if=\"!(lastPageSelected() && hidePrevNext)\" :class=\"[nextClass, lastPageSelected() ? disabledClass : '']\">\n                <router-link :to=\"setRouterLink(selected + 1)\" @click=\"nextPage()\" @keyup.enter=\"nextPage()\" :class=\"nextLinkClass\" :tabindex=\"lastPageSelected() ? -1 : 0\"\n                    v-html=\"nextText\"></router-link>\n            </li>\n\n            <li v-if=\"firstLastButton\" :class=\"[pageClass, lastPageSelected() ? disabledClass : '']\">\n                <router-link :to=\"setRouterLink(total)\"  @click=\"selectLastPage()\" @keyup.enter=\"selectLastPage()\" :class=\"pageLinkClass\" :tabindex=\"lastPageSelected() ? -1 : 0\"\n                    v-html=\"lastButtonText\"></router-link>\n            </li>\n        </template>\n        <template v-else>\n            <li v-if=\"firstLastButton\" :class=\"[pageClass, firstPageSelected() ? disabledClass : '']\">\n                <a @click=\"selectFirstPage()\" @keyup.enter=\"selectFirstPage()\" :class=\"pageLinkClass\" :tabindex=\"firstPageSelected() ? -1 : 0\"\n                    v-html=\"firstButtonText\" ></a>\n            </li>\n\n            <li v-if=\"!(firstPageSelected() && hidePrevNext)\" :class=\"[prevClass, firstPageSelected() ? disabledClass : '']\">\n                <a  @click=\"prevPage()\" @keyup.enter=\"prevPage()\" :class=\"prevLinkClass\" :tabindex=\"firstPageSelected() ? -1 : 0\"\n                    v-html=\"prevText\"></a>\n            </li>\n\n            <li v-for=\"(page, index) in pages\" :class=\"[pageClass, page.selected ? activeClass : '', page.disabled ? disabledClass : '', page.breakView ? breakViewClass: '']\" :key=\"`page_index_${index}`\">\n                <a v-if=\"page.breakView\" :class=\"[pageLinkClass, breakViewLinkClass]\" tabindex=\"0\">\n                    <slot name=\"breakViewContent\">{{ breakViewText }}</slot>\n                </a>\n                <a v-else-if=\"page.disabled\" :class=\"pageLinkClass\" tabindex=\"0\">{{ page.content }}</a>\n                <a v-else @click=\"handlePageSelected(page.index + 1)\"\n                @keyup.enter=\"handlePageSelected(page.index + 1)\"\n                :class=\"pageLinkClass\"\n                    tabindex=\"0\">{{ page.content }}</a>\n            </li>\n\n            <li v-if=\"!(lastPageSelected() && hidePrevNext)\" :class=\"[nextClass, lastPageSelected() ? disabledClass : '']\">\n                <a  @click=\"nextPage()\" @keyup.enter=\"nextPage()\" :class=\"nextLinkClass\" :tabindex=\"lastPageSelected() ? -1 : 0\"\n                    v-html=\"nextText\"></a>\n            </li>\n\n            <li v-if=\"firstLastButton\" :class=\"[pageClass, lastPageSelected() ? disabledClass : '']\">\n                <a   @click=\"selectLastPage()\" @keyup.enter=\"selectLastPage()\" :class=\"pageLinkClass\" :tabindex=\"lastPageSelected() ? -1 : 0\"\n                    v-html=\"lastButtonText\"></a>\n            </li>\n        </template>\n    </ul>\n</template>\n\n<script>\nexport default {\n    props: {\n        value: {\n            type: [Number, String]\n        },\n        total: {\n            type: Number,\n            required: true\n        },\n        routerLink :{\n            default : true,\n        },\n        forcePage: {\n            type: Number\n        },\n        change: {\n            type: Function,\n            default: () => {}\n        },\n        pageRange: {\n            type: Number,\n            default: 5\n        },\n        marginPages: {\n            type: Number,\n            default: 1\n        },\n        prevText: {\n            type: String,\n            default: '<i class=\"fal fa-angle-left\"></i>'\n        },\n        nextText: {\n            type: String,\n            default: '<i class=\"fal fa-angle-right\"></i>'\n        },\n        breakViewText: {\n            type: String,\n            default: 'â€¦'\n        },\n        containerClass: {\n            type: String,\n            default : 'pagination'\n        },\n        pageClass: {\n            type: String\n        },\n        pageLinkClass: {\n            type: String\n        },\n        prevClass: {\n            type: String\n        },\n        prevLinkClass: {\n            type: String\n        },\n        nextClass: {\n            type: String\n        },\n        nextLinkClass: {\n            type: String\n        },\n        breakViewClass: {\n            type: String\n        },\n        breakViewLinkClass: {\n            type: String\n        },\n        activeClass: {\n            type: String,\n            default: 'active'\n        },\n        disabledClass: {\n            type: String,\n            default: 'disabled'\n        },\n        noLiSurround: {\n            type: Boolean,\n            default: false\n        },\n        firstLastButton: {\n            type: Boolean,\n            default: false\n        },\n        firstButtonText: {\n            type: String,\n            default: 'First'\n        },\n        lastButtonText: {\n            type: String,\n            default: 'Last'\n        },\n        hidePrevNext: {\n            type: Boolean,\n            default: false\n        }\n    },\n    beforeUpdate() {\n        if (this.forcePage === undefined) return\n        if (this.forcePage !== this.selected) {\n            this.selected = this.forcePage\n        }\n    },\n    computed: {\n        selected: {\n            get: function () {\n                return this.value || this.innerValue\n            },\n            set: function (newValue) {\n                this.innerValue = newValue\n            }\n        },\n        pages: function () {\n            let items = {}\n            if (this.total <= this.pageRange) {\n                for (let index = 0; index < this.total; index++) {\n                    let page = {\n                        index: index,\n                        content: index + 1,\n                        selected: index === (this.selected - 1)\n                    }\n                    items[index] = page\n                }\n            } else {\n                const halfPageRange = Math.floor(this.pageRange / 2)\n\n                let setPageItem = index => {\n                    let page = {\n                        index: index,\n                        content: index + 1,\n                        selected: index === (this.selected - 1)\n                    }\n\n                    items[index] = page\n                }\n\n                let setBreakView = index => {\n                    let breakView = {\n                        disabled: true,\n                        breakView: true\n                    }\n\n                    items[index] = breakView\n                }\n\n                // 1st - loop thru low end of margin pages\n                for (let i = 0; i < this.marginPages; i++) {\n                    setPageItem(i);\n                }\n\n                // 2nd - loop thru selected range\n                let selectedRangeLow = 0;\n                if (this.selected - halfPageRange > 0) {\n                    selectedRangeLow = this.selected - 1 - halfPageRange;\n                }\n\n                let selectedRangeHigh = selectedRangeLow + this.pageRange - 1;\n                if (selectedRangeHigh >= this.total) {\n                    selectedRangeHigh = this.total - 1;\n                    selectedRangeLow = selectedRangeHigh - this.pageRange + 1;\n                }\n\n                for (let i = selectedRangeLow; i <= selectedRangeHigh && i <= this.total - 1; i++) {\n                    setPageItem(i);\n                }\n\n                // Check if there is breakView in the left of selected range\n                if (selectedRangeLow > this.marginPages) {\n                    setBreakView(selectedRangeLow - 1)\n                }\n\n                // Check if there is breakView in the right of selected range\n                if (selectedRangeHigh + 1 < this.total - this.marginPages) {\n                    setBreakView(selectedRangeHigh + 1)\n                }\n\n                // 3rd - loop thru high end of margin pages\n                for (let i = this.total - 1; i >= this.total - this.marginPages; i--) {\n                    setPageItem(i);\n                }\n            }\n            return items\n        }\n    },\n    data() {\n        return {\n            innerValue: 1,\n        }\n    },\n    methods: {\n        setRouterLink(page){\n            var route = {\n                name : this.$route.name,\n                query : JSON.parse(JSON.stringify(this.$route.query)),\n                params : JSON.parse(JSON.stringify(this.$route.params)),\n            }\n            route.query['page'] = page\n            return this.setRouterLinkDefault(route)\n        },\n        handlePageSelected(selected) {\n            if (this.selected === selected) return\n\n            this.innerValue = selected\n            this.$emit('input', selected)\n            this.change(selected)\n        },\n        prevPage() {\n            if (this.selected <= 1) return\n\n            this.handlePageSelected(this.selected - 1)\n        },\n        nextPage() {\n            if (this.selected >= this.total) return\n\n            this.handlePageSelected(this.selected + 1)\n        },\n        firstPageSelected() {\n            return this.selected === 1\n        },\n        lastPageSelected() {\n            return (this.selected === this.total) || (this.total === 0)\n        },\n        selectFirstPage() {\n            if (this.selected <= 1) return\n\n            this.handlePageSelected(1)\n        },\n        selectLastPage() {\n            if (this.selected >= this.total) return\n\n            this.handlePageSelected(this.total)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    @import 'src/assets/style';\n    a {\n        cursor: pointer;\n    }\n    .pagination{\n        display: flex;\n        justify-content: center;\n        flex-direction: row;\n        flex-wrap: nowrap;\n        li{\n            display: inline-flex;\n            padding: 0 3px;\n            a{\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                min-height: 36px;\n                min-width: 36px;\n                padding: 0;\n                text-decoration: none;\n                color:$text-color;\n                border: 1px solid $yellow;\n                font-size: 14px;\n                font-weight: 500;\n                background: #fff;\n                user-select: none;\n                &:hover{\n                    background: $yellow;\n                    color:#fff;\n                }\n            }\n            &.disabled{\n                opacity: 0.7;\n                cursor: not-allowed;\n                a{\n                    pointer-events: none;\n                    &:hover{\n                        background: #fff;\n                        color:$text-color;\n                    }\n                }\n            }\n            &.active{\n                a{\n                    background: $yellow;\n                    color:#fff;\n                }\n            }\n        }\n    }\n</style>\n"],"sourceRoot":"src/components"}]}