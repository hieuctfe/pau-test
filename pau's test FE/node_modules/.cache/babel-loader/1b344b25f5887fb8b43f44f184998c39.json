{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js!/Volumes/Document/Pau's test/pau's test FE/src/modules/account/_store/actions.js","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/modules/account/_store/actions.js","mtime":1556254610461},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Document/Pau's test/pau's test FE/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"/Volumes/Document/Pau's test/pau's test FE/node_modules/@babel/runtime-corejs2/core-js/promise\";\nexport default {\n  REGISTER: function REGISTER(_ref, userInfo) {\n    var commit = _ref.commit;\n    return new _Promise(function (reslove, reject) {\n      axios.post('/api/auth/register', userInfo).then(function (res) {\n        // let {status, data} = res.data\n        // if (status) {\n        //     commit('LOGIN_SUCCESS', data.token)\n        // }\n        reslove(res);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  },\n  LOGIN: function LOGIN(_ref2, _ref3) {\n    var commit = _ref2.commit;\n    var email = _ref3.email,\n        password = _ref3.password;\n    return new _Promise(function (reslove, reject) {\n      axios.post('/api/auth/login', {\n        email: email,\n        password: password\n      }).then(function (res) {\n        var _res$data = res.data,\n            status = _res$data.status,\n            token = _res$data.token;\n\n        if (status) {\n          commit('LOGIN_SUCCESS', token);\n        }\n\n        reslove(res);\n      });\n    });\n  },\n  LOGOUT: function LOGOUT(_ref4) {\n    var commit = _ref4.commit;\n    commit('LOGOUT_SUCCESS');\n  },\n  GET_USER_INFO: function GET_USER_INFO(_ref5) {\n    var commit = _ref5.commit;\n    console.log('goi moi info');\n    return new _Promise(function (resolve, reject) {\n      axios.get(\"/api/auth/user\").then(function (res) {\n        resolve(res);\n        var data = res.data;\n        console.log(data);\n        commit('UPDATE_SELLER_INFO', data);\n      }, function (error) {\n        commit('LOGOUT_SUCCESS');\n        reject(error);\n      });\n    });\n  },\n  GET_USER_QUESTION_REGISTER: function () {\n    var _GET_USER_QUESTION_REGISTER = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref6) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref6.commit;\n              _context.next = 3;\n              return axios.get(\"/api/auth/loadquestion\");\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_USER_QUESTION_REGISTER(_x) {\n      return _GET_USER_QUESTION_REGISTER.apply(this, arguments);\n    }\n\n    return GET_USER_QUESTION_REGISTER;\n  }()\n};",{"version":3,"sources":["/Volumes/Document/Pau's test/pau's test FE/src/modules/account/_store/actions.js"],"names":["REGISTER","userInfo","commit","reslove","reject","axios","post","then","res","error","LOGIN","email","password","data","status","token","LOGOUT","GET_USER_INFO","console","log","resolve","get","GET_USER_QUESTION_REGISTER"],"mappings":";;;AAAA,eAAe;AACXA,EAAAA,QADW,0BACQC,QADR,EACkB;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AACzB,WAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,MAAAA,KAAK,CAACC,IAAN,CAAW,oBAAX,EAAiCL,QAAjC,EAA2CM,IAA3C,CAAgD,UAACC,GAAD,EAAS;AACrD;AACA;AACA;AACA;AACAL,QAAAA,OAAO,CAACK,GAAD,CAAP;AACH,OAND,EAMG,UAACC,KAAD,EAAU;AACTL,QAAAA,MAAM,CAACK,KAAD,CAAN;AACH,OARD;AASH,KAVM,CAAP;AAWH,GAbU;AAcXC,EAAAA,KAdW,+BAcwB;AAAA,QAA5BR,MAA4B,SAA5BA,MAA4B;AAAA,QAAlBS,KAAkB,SAAlBA,KAAkB;AAAA,QAAXC,QAAW,SAAXA,QAAW;AAC/B,WAAO,aAAY,UAACT,OAAD,EAAUC,MAAV,EAAqB;AACpCC,MAAAA,KAAK,CAACC,IAAN,CAAW,iBAAX,EAA8B;AAACK,QAAAA,KAAK,EAAEA,KAAR;AAAeC,QAAAA,QAAQ,EAAEA;AAAzB,OAA9B,EAAkEL,IAAlE,CAAuE,UAACC,GAAD,EAAS;AAAA,wBACtDA,GAAG,CAACK,IADkD;AAAA,YACvEC,MADuE,aACvEA,MADuE;AAAA,YAC/DC,KAD+D,aAC/DA,KAD+D;;AAE5E,YAAID,MAAJ,EAAY;AACRZ,UAAAA,MAAM,CAAC,eAAD,EAAkBa,KAAlB,CAAN;AACH;;AACDZ,QAAAA,OAAO,CAACK,GAAD,CAAP;AACH,OAND;AAOH,KARM,CAAP;AASH,GAxBU;AAyBXQ,EAAAA,MAzBW,yBAyBM;AAAA,QAATd,MAAS,SAATA,MAAS;AACbA,IAAAA,MAAM,CAAC,gBAAD,CAAN;AACH,GA3BU;AA4BXe,EAAAA,aA5BW,gCA4Ba;AAAA,QAATf,MAAS,SAATA,MAAS;AACpBgB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAO,aAAY,UAACC,OAAD,EAAUhB,MAAV,EAAqB;AACpCC,MAAAA,KAAK,CAACgB,GAAN,mBAA4Bd,IAA5B,CAAiC,UAAAC,GAAG,EAAI;AACpCY,QAAAA,OAAO,CAACZ,GAAD,CAAP;AACA,YAAIK,IAAI,GAAGL,GAAG,CAACK,IAAf;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAX,QAAAA,MAAM,CAAC,oBAAD,EAAuBW,IAAvB,CAAN;AACH,OALD,EAKG,UAAAJ,KAAK,EAAI;AACRP,QAAAA,MAAM,CAAC,gBAAD,CAAN;AACAE,QAAAA,MAAM,CAACK,KAAD,CAAN;AACH,OARD;AASH,KAVM,CAAP;AAWH,GAzCU;AA0CLa,EAAAA,0BA1CK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CuBpB,cAAAA,MA1CvB,SA0CuBA,MA1CvB;AAAA;AAAA,qBA2CMG,KAAK,CAACgB,GAAN,0BA3CN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAf","sourcesContent":["export default {\n    REGISTER({commit}, userInfo) {\n        return new Promise((reslove, reject) => {\n            axios.post('/api/auth/register', userInfo).then((res) => {\n                // let {status, data} = res.data\n                // if (status) {\n                //     commit('LOGIN_SUCCESS', data.token)\n                // }\n                reslove(res)\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    LOGIN({commit}, {email, password}) {\n        return new Promise((reslove, reject) => {\n            axios.post('/api/auth/login', {email: email, password: password}).then((res) => {\n                let {status, token} = res.data\n                if (status) {\n                    commit('LOGIN_SUCCESS', token)\n                }\n                reslove(res)\n            })\n        })\n    },\n    LOGOUT({commit}) {\n        commit('LOGOUT_SUCCESS')\n    },\n    GET_USER_INFO({commit}) {\n        console.log('goi moi info');\n        return new Promise((resolve, reject) => {\n            axios.get(`/api/auth/user`).then(res => {\n                resolve(res)\n                let data = res.data\n                console.log(data);\n                commit('UPDATE_SELLER_INFO', data)\n            }, error => {\n                commit('LOGOUT_SUCCESS')\n                reject(error)\n            })\n        })\n    },\n    async GET_USER_QUESTION_REGISTER({commit}) {\n        return await axios.get(`/api/auth/loadquestion`)\n    }\n}\n"]}]}