{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Pau's test/pau's test FE/src/modules/seller/_components/choosingplan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/modules/seller/_components/choosingplan.vue","mtime":1555498934033},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pricing from './pricing'\nimport carddialog from './card-dialog'\nimport {mapActions} from 'vuex'\n\nexport default {\n    name: \"choosingplan\",\n    components: {\n        pricing,carddialog\n    },\n    data() {\n        return {\n            selected: \"\",\n            isCardDialogShow: false\n        }\n    },\n    methods: {\n        ...mapActions({\n            sellerChoosingPlan: \"$_Seller/SELLER_CHOOSING_PLAN\",\n            createCustomer: \"$_Seller/CREATE_CUSTOMER\",\n        }),\n        choosePlan(plan) {\n            // this.isCardDialogShow = true\n            // // alert(plan)\n            this.selected = plan\n            this.sellerChoosingPlan(plan).then(res => {\n                if (res.data.status) {\n                    this.$router.push({name: 'AddShoptifyStore'})\n                } else {\n                    this.isCardDialogShow = true\n                }\n            })\n        },\n        createCardForCustomer(cardInfo) {\n            let democart = {\n                \"card_no\": cardInfo.card_no.replace(/\\W/gi, ''),\n                \"ccExpiryMonth\": cardInfo.expire_date.split('/')[0],\n                \"ccExpiryYear\": cardInfo.expire_date.split('/')[1],\n                \"cvvNumber\": cardInfo.secure_code,\n                \"plan_id\": this.selected\n            }\n            console.log(democart);\n            this.isCardDialogShow = false\n            this.createCustomer(democart).then(res => {\n                if (res.data.status) {\n                    this.$router.push({name: 'AddShoptifyStore'})\n                } else {\n                    this.isCardDialogShow = true\n                    let {status, data, message} = res.data\n                    // let message = data.message\n                    let lvmessage = data.message\n                    for (let mess in lvmessage) {\n                        $notify({\n                            content: lvmessage[mess][0],\n                            type: \"danger\"\n                        })\n                    }\n                }\n            })\n        }\n    },\n    created: function () {\n        // load user info and current, dose add credit card\n        // this.selected = 'free'\n    }\n}\n",{"version":3,"sources":["choosingplan.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"choosingplan.vue","sourceRoot":"src/modules/seller/_components","sourcesContent":["<template>\n    <div>\n        <div class=\"plan-description m-b-40\"><span>Your acccount has been verified. Please select your plan</span></div>\n        <div>\n            <pricing @choose_plan=\"choosePlan\" :isNotAuto=\"true\"></pricing>\n        </div>\n        <carddialog :isShow=\"isCardDialogShow\" @modalHide=\"isCardDialogShow=false\" @dialogConfirm=\"createCardForCustomer\"></carddialog>\n    </div>\n</template>\n\n<script>\n    import pricing from './pricing'\n    import carddialog from './card-dialog'\n    import {mapActions} from 'vuex'\n\n    export default {\n        name: \"choosingplan\",\n        components: {\n            pricing,carddialog\n        },\n        data() {\n            return {\n                selected: \"\",\n                isCardDialogShow: false\n            }\n        },\n        methods: {\n            ...mapActions({\n                sellerChoosingPlan: \"$_Seller/SELLER_CHOOSING_PLAN\",\n                createCustomer: \"$_Seller/CREATE_CUSTOMER\",\n            }),\n            choosePlan(plan) {\n                // this.isCardDialogShow = true\n                // // alert(plan)\n                this.selected = plan\n                this.sellerChoosingPlan(plan).then(res => {\n                    if (res.data.status) {\n                        this.$router.push({name: 'AddShoptifyStore'})\n                    } else {\n                        this.isCardDialogShow = true\n                    }\n                })\n            },\n            createCardForCustomer(cardInfo) {\n                let democart = {\n                    \"card_no\": cardInfo.card_no.replace(/\\W/gi, ''),\n                    \"ccExpiryMonth\": cardInfo.expire_date.split('/')[0],\n                    \"ccExpiryYear\": cardInfo.expire_date.split('/')[1],\n                    \"cvvNumber\": cardInfo.secure_code,\n                    \"plan_id\": this.selected\n                }\n                console.log(democart);\n                this.isCardDialogShow = false\n                this.createCustomer(democart).then(res => {\n                    if (res.data.status) {\n                        this.$router.push({name: 'AddShoptifyStore'})\n                    } else {\n                        this.isCardDialogShow = true\n                        let {status, data, message} = res.data\n                        // let message = data.message\n                        let lvmessage = data.message\n                        for (let mess in lvmessage) {\n                            $notify({\n                                content: lvmessage[mess][0],\n                                type: \"danger\"\n                            })\n                        }\n                    }\n                })\n            }\n        },\n        created: function () {\n            // load user info and current, dose add credit card\n            // this.selected = 'free'\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .plan-description {\n        font-size: 35px;\n    }\n\n</style>\n"]}]}