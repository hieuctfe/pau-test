{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js!/Volumes/Document/Pau's test/pau's test FE/src/components/v-carousel/mixins/autoplay.js","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/components/v-carousel/mixins/autoplay.js","mtime":1552898513899},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nvar autoplay = {\n  props: {\n    /**\n     * Flag to enable autoplay\n     */\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * Time elapsed before advancing slide\n     */\n    autoplayTimeout: {\n      type: Number,\n      default: 2000\n    },\n\n    /**\n     * Flag to pause autoplay on hover\n     */\n    autoplayHoverPause: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * Autoplay direction. User can insert backward to make autoplay move from right to left\n     */\n    autoplayDirection: {\n      type: String,\n      default: \"forward\"\n    }\n  },\n  data: function data() {\n    return {\n      autoplayInterval: null\n    };\n  },\n  destroyed: function destroyed() {\n    if (!this.$isServer) {\n      this.$el.removeEventListener(\"mouseenter\", this.pauseAutoplay);\n      this.$el.removeEventListener(\"mouseleave\", this.startAutoplay);\n    }\n  },\n  methods: {\n    pauseAutoplay: function pauseAutoplay() {\n      if (this.autoplayInterval) {\n        this.autoplayInterval = clearInterval(this.autoplayInterval);\n      }\n    },\n    startAutoplay: function startAutoplay() {\n      if (this.autoplay) {\n        this.autoplayInterval = setInterval(this.autoplayAdvancePage, this.autoplayTimeout);\n      }\n    },\n    restartAutoplay: function restartAutoplay() {\n      this.pauseAutoplay();\n      this.startAutoplay();\n    },\n    autoplayAdvancePage: function autoplayAdvancePage() {\n      this.advancePage(this.autoplayDirection);\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$isServer && this.autoplayHoverPause) {\n      this.$el.addEventListener(\"mouseenter\", this.pauseAutoplay);\n      this.$el.addEventListener(\"mouseleave\", this.startAutoplay);\n    }\n\n    this.startAutoplay();\n  }\n};\nexport default autoplay;",{"version":3,"sources":["/Volumes/Document/Pau's test/pau's test FE/src/components/v-carousel/mixins/autoplay.js"],"names":["autoplay","props","type","Boolean","default","autoplayTimeout","Number","autoplayHoverPause","autoplayDirection","String","data","autoplayInterval","destroyed","$isServer","$el","removeEventListener","pauseAutoplay","startAutoplay","methods","clearInterval","setInterval","autoplayAdvancePage","restartAutoplay","advancePage","mounted","addEventListener"],"mappings":";AAAA,IAAMA,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE;AACL;;;AAGAD,IAAAA,QAAQ,EAAE;AACRE,MAAAA,IAAI,EAAEC,OADE;AAERC,MAAAA,OAAO,EAAE;AAFD,KAJL;;AAQL;;;AAGAC,IAAAA,eAAe,EAAE;AACfH,MAAAA,IAAI,EAAEI,MADS;AAEfF,MAAAA,OAAO,EAAE;AAFM,KAXZ;;AAeL;;;AAGAG,IAAAA,kBAAkB,EAAE;AAClBL,MAAAA,IAAI,EAAEC,OADY;AAElBC,MAAAA,OAAO,EAAE;AAFS,KAlBf;;AAsBL;;;AAGAI,IAAAA,iBAAiB,EAAE;AACjBN,MAAAA,IAAI,EAAEO,MADW;AAEjBL,MAAAA,OAAO,EAAE;AAFQ;AAzBd,GADQ;AA+BfM,EAAAA,IA/Be,kBA+BR;AACL,WAAO;AACLC,MAAAA,gBAAgB,EAAE;AADb,KAAP;AAGD,GAnCc;AAoCfC,EAAAA,SApCe,uBAoCH;AACV,QAAI,CAAC,KAAKC,SAAV,EAAqB;AACnB,WAAKC,GAAL,CAASC,mBAAT,CAA6B,YAA7B,EAA2C,KAAKC,aAAhD;AACA,WAAKF,GAAL,CAASC,mBAAT,CAA6B,YAA7B,EAA2C,KAAKE,aAAhD;AACD;AACF,GAzCc;AA0CfC,EAAAA,OAAO,EAAE;AACPF,IAAAA,aADO,2BACS;AACd,UAAI,KAAKL,gBAAT,EAA2B;AACzB,aAAKA,gBAAL,GAAwBQ,aAAa,CAAC,KAAKR,gBAAN,CAArC;AACD;AACF,KALM;AAMPM,IAAAA,aANO,2BAMS;AACd,UAAI,KAAKjB,QAAT,EAAmB;AACjB,aAAKW,gBAAL,GAAwBS,WAAW,CACjC,KAAKC,mBAD4B,EAEjC,KAAKhB,eAF4B,CAAnC;AAID;AACF,KAbM;AAcPiB,IAAAA,eAdO,6BAcW;AAChB,WAAKN,aAAL;AACA,WAAKC,aAAL;AACD,KAjBM;AAkBPI,IAAAA,mBAlBO,iCAkBe;AACpB,WAAKE,WAAL,CAAiB,KAAKf,iBAAtB;AACD;AApBM,GA1CM;AAgEfgB,EAAAA,OAhEe,qBAgEL;AACR,QAAI,CAAC,KAAKX,SAAN,IAAmB,KAAKN,kBAA5B,EAAgD;AAC9C,WAAKO,GAAL,CAASW,gBAAT,CAA0B,YAA1B,EAAwC,KAAKT,aAA7C;AACA,WAAKF,GAAL,CAASW,gBAAT,CAA0B,YAA1B,EAAwC,KAAKR,aAA7C;AACD;;AAED,SAAKA,aAAL;AACD;AAvEc,CAAjB;AA0EA,eAAejB,QAAf","sourcesContent":["const autoplay = {\n  props: {\n    /**\n     * Flag to enable autoplay\n     */\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Time elapsed before advancing slide\n     */\n    autoplayTimeout: {\n      type: Number,\n      default: 2000\n    },\n    /**\n     * Flag to pause autoplay on hover\n     */\n    autoplayHoverPause: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Autoplay direction. User can insert backward to make autoplay move from right to left\n     */\n    autoplayDirection: {\n      type: String,\n      default: \"forward\"\n    }\n  },\n  data() {\n    return {\n      autoplayInterval: null\n    };\n  },\n  destroyed() {\n    if (!this.$isServer) {\n      this.$el.removeEventListener(\"mouseenter\", this.pauseAutoplay);\n      this.$el.removeEventListener(\"mouseleave\", this.startAutoplay);\n    }\n  },\n  methods: {\n    pauseAutoplay() {\n      if (this.autoplayInterval) {\n        this.autoplayInterval = clearInterval(this.autoplayInterval);\n      }\n    },\n    startAutoplay() {\n      if (this.autoplay) {\n        this.autoplayInterval = setInterval(\n          this.autoplayAdvancePage,\n          this.autoplayTimeout\n        );\n      }\n    },\n    restartAutoplay() {\n      this.pauseAutoplay();\n      this.startAutoplay();\n    },\n    autoplayAdvancePage() {\n      this.advancePage(this.autoplayDirection);\n    }\n  },\n  mounted() {\n    if (!this.$isServer && this.autoplayHoverPause) {\n      this.$el.addEventListener(\"mouseenter\", this.pauseAutoplay);\n      this.$el.addEventListener(\"mouseleave\", this.startAutoplay);\n    }\n\n    this.startAutoplay();\n  }\n};\n\nexport default autoplay;\n"]}]}