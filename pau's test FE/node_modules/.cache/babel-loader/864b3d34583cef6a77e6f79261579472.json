{"remainingRequest":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/components/v-money/component.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/components/v-money/component.vue","mtime":1552898513901},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport _Number$MAX_SAFE_INTEGER from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/core-js/number/max-safe-integer\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport money from './directive';\nimport defaults from './options';\nimport { format, unformat } from './utils';\nexport default {\n  name: 'Money',\n  props: {\n    value: {\n      required: true,\n      type: [Number, String],\n      default: 0\n    },\n    masked: {\n      type: Boolean,\n      default: false\n    },\n    precision: {\n      type: Number,\n      default: function _default() {\n        return defaults.precision;\n      }\n    },\n    decimal: {\n      type: String,\n      default: function _default() {\n        return defaults.decimal;\n      }\n    },\n    thousands: {\n      type: String,\n      default: function _default() {\n        return defaults.thousands;\n      }\n    },\n    prefix: {\n      type: String,\n      default: function _default() {\n        return defaults.prefix;\n      }\n    },\n    suffix: {\n      type: String,\n      default: function _default() {\n        return defaults.suffix;\n      }\n    },\n    allowBlank: {\n      type: Boolean,\n      default: function _default() {\n        return defaults.allowBlank;\n      }\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: _Number$MAX_SAFE_INTEGER\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  directives: {\n    money: money\n  },\n  data: function data() {\n    return {\n      formattedValue: ''\n    };\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(newValue, oldValue) {\n        var formatted = format(newValue, this.$props);\n\n        if (formatted !== this.formattedValue) {\n          this.formattedValue = formatted;\n        }\n      }\n    }\n  },\n  methods: {\n    change: function change(e) {\n      if (this.masked) {\n        this.$emit('input', this.masked ? e.target.value : unformat(e.target.value, this.precision));\n      } else {\n        var val = unformat(e.target.value, this.precision);\n\n        if (val < _parseInt(this.min)) {\n          e.target.value = _parseInt(this.min);\n          return;\n        }\n\n        if (this.max != undefined && val > this.max) {\n          e.target.value = this.max;\n        }\n\n        this.$emit(\"input\", val);\n      }\n    },\n    _focus: function _focus() {\n      this.$refs.input.focus();\n    },\n    _select: function _select() {\n      this.$refs.input.select();\n    }\n  }\n};",{"version":3,"sources":["component.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n  <input ref=\"input\" type=\"tel\"\n         :value=\"formattedValue\"\n         @change=\"change\"\n\t\t:placeholder=\"placeholder\"\n         v-money=\"{precision, decimal, thousands, prefix, suffix, allowBlank}\"\n         class=\"v-money\" />\n</template>\n\n<script>\nimport money from './directive'\nimport defaults from './options'\nimport {format, unformat} from './utils'\n\nexport default {\n  name: 'Money',\n  \tprops: {\n  \t\tvalue: {\n  \t\t\trequired: true,\n  \t\t\ttype: [Number, String],\n  \t\t\tdefault: 0\n  \t\t},\n  \t\tmasked: {\n  \t\t\ttype: Boolean,\n  \t\t\tdefault: false\n  \t\t},\n  \t\tprecision: {\n  \t\t\ttype: Number,\n  \t\t\tdefault: () => defaults.precision\n  \t\t},\n  \t\tdecimal: {\n  \t\t\ttype: String,\n  \t\t\tdefault: () => defaults.decimal\n  \t\t},\n  \t\tthousands: {\n  \t\t\ttype: String,\n  \t\t\tdefault: () => defaults.thousands\n  \t\t},\n  \t\tprefix: {\n  \t\t\ttype: String,\n  \t\t\tdefault: () => defaults.prefix\n  \t\t},\n  \t\tsuffix: {\n  \t\t\ttype: String,\n  \t\t\tdefault: () => defaults.suffix\n  \t\t},\n  \t\tallowBlank: {\n  \t\t\ttype: Boolean,\n  \t\t\tdefault: () => defaults.allowBlank\n  \t\t},\n  \t\tmin: {\n  \t\t\ttype: Number,\n  \t\t\tdefault: 0,\n  \t\t},\n  \t\tmax: {\n  \t\t\ttype: Number,\n  \t\t\tdefault: Number.MAX_SAFE_INTEGER\n\t\t},\n\t\tplaceholder: {\n  \t\t\ttype: String,\n  \t\t\tdefault: ''\n  \t\t}\n  \t},\n\n  \tdirectives: {\n  \t\tmoney\n  \t},\n\n  \tdata() {\n  \t\treturn {\n  \t\t\tformattedValue: ''\n  \t\t}\n  \t},\n  \twatch: {\n  \t\tvalue: {\n  \t\t\timmediate: true,\n  \t\t\thandler(newValue, oldValue) {\n  \t\t\t\tvar formatted = format(newValue, this.$props)\n  \t\t\t\tif (formatted !== this.formattedValue) {\n  \t\t\t\t\tthis.formattedValue = formatted\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t},\n\n  \tmethods: {\n  \t\tchange(e) {\n  \t\t\tif (this.masked) {\n  \t\t\t\tthis.$emit('input', this.masked ? e.target.value : unformat(e.target.value, this.precision))\n  \t\t\t} else {\n\t\t\t\tvar val = unformat(e.target.value, this.precision)\n  \t\t\t\tif (val < parseInt(this.min)) {\n  \t\t\t\t\te.target.value = parseInt(this.min);\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n  \t\t\t\tif (this.max != undefined && val > this.max) {\n  \t\t\t\t\te.target.value = this.max;\n  \t\t\t\t}\n  \t\t\t\tthis.$emit(\"input\", val);\n  \t\t\t}\n\t\t},\n\t\t_focus(){\n\t\t\tthis.$refs.input.focus();\n\t\t},\n\t\t_select(){\n\t\t\tthis.$refs.input.select();\n\t\t}\n  \t}\n}\n</script>\n"],"sourceRoot":"src/components/v-money"}]}