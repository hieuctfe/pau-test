{"remainingRequest":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/store/actions.js","dependencies":[{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/store/actions.js","mtime":1552472544865},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _objectDestructuringEmpty from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nexport default {\n  toggleSidebar: function toggleSidebar(_ref, payload) {\n    var commit = _ref.commit;\n    commit('toggleSidebar', payload);\n  },\n  updateBreadcrumb: function updateBreadcrumb(_ref2, payload) {\n    var commit = _ref2.commit;\n    commit('updateBreadcrumb', payload);\n  },\n  setLang: function setLang(_ref3, payload) {\n    var commit = _ref3.commit;\n    commit('setLang', payload);\n  },\n  SEARCH_PRODUCT_HEADER: function SEARCH_PRODUCT_HEADER(_ref4, _ref5) {\n    _objectDestructuringEmpty(_ref4);\n\n    var _ref5$keyword = _ref5.keyword,\n        keyword = _ref5$keyword === void 0 ? '' : _ref5$keyword,\n        _ref5$collection_id = _ref5.collection_id,\n        collection_id = _ref5$collection_id === void 0 ? null : _ref5$collection_id;\n    return new _Promise(function (resolve, reject) {\n      var params = {\n        limit: 3\n      };\n\n      if (keyword != '') {\n        params['keyword'] = keyword;\n      }\n\n      if (collection_id && collection_id != 'all') {\n        params['collection_id'] = collection_id;\n      }\n\n      axios.get('/api/seller/products', {\n        params: params\n      }).then(function (res) {\n        resolve(res.data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  }\n};",{"version":3,"sources":["/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/store/actions.js"],"names":["toggleSidebar","payload","commit","updateBreadcrumb","setLang","SEARCH_PRODUCT_HEADER","keyword","collection_id","resolve","reject","params","limit","axios","get","then","res","data","error"],"mappings":";;AAAA,eAAe;AACXA,EAAAA,aADW,+BACeC,OADf,EACuB;AAAA,QAAlBC,MAAkB,QAAlBA,MAAkB;AAC9BA,IAAAA,MAAM,CAAC,eAAD,EAAmBD,OAAnB,CAAN;AACH,GAHU;AAIXE,EAAAA,gBAJW,mCAIkBF,OAJlB,EAI0B;AAAA,QAAlBC,MAAkB,SAAlBA,MAAkB;AACjCA,IAAAA,MAAM,CAAC,kBAAD,EAAsBD,OAAtB,CAAN;AACH,GANU;AAOXG,EAAAA,OAPW,0BAOOH,OAPP,EAOgB;AAAA,QAAlBC,MAAkB,SAAlBA,MAAkB;AACvBA,IAAAA,MAAM,CAAC,SAAD,EAAYD,OAAZ,CAAN;AACH,GATU;AAUXI,EAAAA,qBAVW,+CAUuD;AAAA;;AAAA,8BAArCC,OAAqC;AAAA,QAArCA,OAAqC,8BAA3B,EAA2B;AAAA,oCAAtBC,aAAsB;AAAA,QAAtBA,aAAsB,oCAAN,IAAM;AAC9D,WAAO,aAAY,UAACC,OAAD,EAAWC,MAAX,EAAqB;AACpC,UAAIC,MAAM,GAAG;AACTC,QAAAA,KAAK,EAAG;AADC,OAAb;;AAGA,UAAIL,OAAO,IAAI,EAAf,EAAmB;AACfI,QAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBJ,OAApB;AACH;;AACD,UAAIC,aAAa,IAAIA,aAAa,IAAI,KAAtC,EAA6C;AACzCG,QAAAA,MAAM,CAAC,eAAD,CAAN,GAA0BH,aAA1B;AACH;;AACDK,MAAAA,KAAK,CAACC,GAAN,CAAU,sBAAV,EAAmC;AAAEH,QAAAA,MAAM,EAAGA;AAAX,OAAnC,EAAuDI,IAAvD,CAA4D,UAACC,GAAD,EAAO;AAC/DP,QAAAA,OAAO,CAACO,GAAG,CAACC,IAAL,CAAP;AACH,OAFD,EAEG,UAACC,KAAD,EAAU;AACTR,QAAAA,MAAM,CAACQ,KAAD,CAAN;AACH,OAJD;AAKH,KAfM,CAAP;AAgBH;AA3BU,CAAf","sourcesContent":["export default {\n    toggleSidebar( {commit} , payload){\n        commit('toggleSidebar' , payload);\n    },\n    updateBreadcrumb( {commit} , payload){\n        commit('updateBreadcrumb' , payload);\n    },\n    setLang({commit}, payload) {\n        commit('setLang', payload)\n    },\n    SEARCH_PRODUCT_HEADER({} , { keyword = '' , collection_id = null}){\n        return new Promise((resolve , reject) =>{\n            var params = {\n                limit : 3\n            }\n            if( keyword != '' ){\n                params['keyword'] = keyword;\n            }\n            if( collection_id && collection_id != 'all' ){\n                params['collection_id'] = collection_id;\n            }\n            axios.get('/api/seller/products' , { params : params}).then((res)=>{\n                resolve(res.data);\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    }\n}"]}]}