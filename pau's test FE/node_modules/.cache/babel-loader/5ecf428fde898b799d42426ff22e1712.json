{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js!/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Pau's test/pau's test FE/src/modules/account/_components/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/modules/account/_components/register.vue","mtime":1556259939688},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/Document/Pau's test/pau's test FE/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength, maxLength, email, sameAs } from 'vuelidate/lib/validators';\nimport VueTelInput from 'vue-tel-input';\nimport { mapActions } from 'vuex';\nexport default {\n  name: \"login\",\n  data: function data() {\n    return {\n      phone: '',\n      form: {\n        email: '',\n        type: 'personal',\n        name: '',\n        password: '',\n        repassword: '',\n        phone_number: '',\n        address: '',\n        question: '',\n        content_option: ''\n      },\n      isRegisting: false,\n      is_phone_number_valid: true,\n      server_message: {},\n      question_list: [],\n      formstate: false\n    };\n  },\n  components: {\n    VueTelInput: VueTelInput\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getRegisterQuestion().then(function (res) {\n      var _res$data = res.data,\n          status = _res$data.status,\n          data = _res$data.data;\n\n      if (status) {\n        _this.question_list = data;\n      }\n    });\n  },\n  methods: _objectSpread({}, mapActions({\n    getRegisterQuestion: \"$_Account/GET_USER_QUESTION_REGISTER\",\n    registerAccount: \"$_Account/REGISTER\"\n  }), {\n    regis_account: function regis_account() {\n      var _this2 = this;\n\n      this.formstate = true;\n\n      if (!this.$v.form.$invalid) {\n        this.isRegisting = true;\n        this.registerAccount(this.form).then(function (res) {\n          var _res$data2 = res.data,\n              status = _res$data2.status,\n              message = _res$data2.message,\n              errors = _res$data2.errors;\n\n          if (status) {\n            _this2.$router.push({\n              name: \"Login\"\n            });\n          } else {\n            _this2.server_message = errors;\n\n            for (var key in errors) {\n              $notify({\n                type: \"danger\",\n                content: errors[key][0]\n              });\n            }\n          }\n\n          _this2.isRegisting = false;\n        }, function (err) {\n          console.log(err);\n        });\n      }\n    },\n    onInput: function onInput(_ref) {\n      var number = _ref.number,\n          isValid = _ref.isValid,\n          country = _ref.country;\n      console.log(isValid);\n      this.is_phone_number_valid = isValid;\n    },\n    isNumber: function isNumber(evt) {\n      evt = evt ? evt : window.event;\n      var charCode = evt.which ? evt.which : evt.keyCode;\n\n      if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 46) {\n        evt.preventDefault();\n      } else {\n        return true;\n      }\n    }\n  }),\n  watch: {\n    \"form.type\": function formType(value) {\n      this.formstate = false;\n      this.server_message = {};\n      this.form = {\n        type: this.form.type,\n        email: '',\n        name: '',\n        password: '',\n        repassword: '',\n        phone_number: '',\n        address: '',\n        question: '',\n        content_option: ''\n      };\n    }\n  },\n  validations: function validations() {\n    return {\n      form: {\n        email: {\n          required: required,\n          email: email // exist: function (value) {\n          //     return this.emails.indexOf(value) == -1\n          // }\n\n        },\n        password: {\n          required: required,\n          minLength: minLength(6)\n        },\n        repassword: {\n          required: required,\n          sameAs: sameAs('password')\n        },\n        phone_number: {\n          required: required,\n          isValid: function isValid() {\n            return this.is_phone_number_valid;\n          }\n        },\n        name: {\n          required: required\n        }\n      }\n    };\n  }\n};",{"version":3,"sources":["register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"login-register-account-wrap login-page container\">\n        <div class=\"login-page__header p-t-30\">\n            <img src=\"../../../assets/images/default/Logo.png\" height=\"57\" width=\"386\"/>\n        </div>\n        <div class=\"row login-page__body m-t-40\">\n            <div class=\"col col-6 login-promote\">\n                <div class=\"login-promote__image\">\n                    <img src=\"../../../assets/images/login/login-image-1.png\" height=\"301\" width=\"449\"/>\n                </div>\n                <div class=\"login-promote__description\">\n                    <p class=\"login-promote__description__title m-t-30\">\n                        Sell and manage everywhere\n                    </p>\n                    <p>\n                        The easiest way for brands & retailers to list and sell their products on the world’s largest\n                        online marketplaces.\n                    </p>\n                </div>\n            </div>\n            <div class=\"col col-6\">\n                <div class=\"form-container card\">\n                    <div class=\"login-form-header\">\n                        <div class=\"create-account-logo\">\n                            <div class=\"logo\">\n                                <img src=\"../../../assets/images/default/avatar.png\" alt=\"\">\n                            </div>\n                            <div class=\"create-account-title\">\n                                <p class=\"big-title\">Create account</p>\n                                <p class=\"small-title\">For free experience</p>\n                            </div>\n                        </div>\n                        <div class=\"already-have-account\">\n                            <p class=\"font-weight-bold\">Already have account?</p>\n                            <router-link class=\"btn btn-outline-signin\" :to=\"{name:'Login'}\">\n                                Sign in\n                            </router-link>\n                            <!--<router-link :to=\"{name : 'Subscription'}\">Subscription</router-link>-->\n                        </div>\n                    </div>\n                    <form @submit.stop.prevent=\"regis_account()\">\n                        <div class=\"login-form-body\">\n                            <div class=\"login-form-body-account-type\">\n                                <span>You’re using this app for</span>\n                                <ul class=\"list-account-type\">\n                                    <li class=\"m-r-10\" :class=\"form.type=='personal'?'checked':''\">\n                                        <input type=\"radio\" v-model=\"form.type\" value=\"personal\" id=\"personal\"\n                                               name=\"type-group\" checked>\n                                        <label for=\"personal\">Personal use</label>\n                                    </li>\n                                    <li :class=\"form.type=='company'?'checked':''\">\n                                        <input type=\"radio\" v-model=\"form.type\" value=\"company\" id=\"company\"\n                                               name=\"type-group\">\n                                        <label for=\"company\">Company</label>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div v-if=\"form.type=='personal'\" class=\"login-form-body-form-info\">\n                                <p>Give us some info</p>\n                                <div class=\"row\">\n                                    <div class=\"form-group col col-6\">\n                                        <label>Your name</label>\n                                        <input type=\"text\" v-model=\"form.name\"\n                                               :class=\"{ 'is-invalid' : $v.form.name.$invalid && formstate}\"\n                                               class=\"form-control\" placeholder=\"Name\">\n                                        <small v-if=\"$v.form.name.$invalid && formstate\"\n                                               class=\"form-text invalid-feedback\">Your name is require\n                                        </small>\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Phone number</label>\n                                        <input type=\"text\" v-model=\"form.phone_number\"\n                                               :class=\"{ 'is-invalid' : $v.form.phone_number.$invalid && formstate}\"\n                                               class=\"form-control\" placeholder=\"Personal phone number\">\n                                        <small class=\"form-text invalid-feedback\">Phone number is require</small>\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Email</label>\n                                        <input type=\"email\" v-model=\"form.email\"\n                                               :class=\"{ 'is-invalid' : $v.form.email.$invalid && formstate}\"\n                                               class=\"form-control\" placeholder=\"Your mail address\">\n                                        <small class=\"form-text invalid-feedback\">This email is invalid</small>\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Address (Optional)</label>\n                                        <input type=\"text\" v-model=\"form.address\" class=\"form-control\"\n                                               placeholder=\"Your address\">\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Password</label>\n                                        <input type=\"password\" v-model=\"form.password\"\n                                               :class=\"{ 'is-invalid' : $v.form.password.$invalid && formstate}\"\n                                               class=\"form-control\" placeholder=\"Your password\">\n                                        <small class=\"form-text invalid-feedback\">Password length is more than 6</small>\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Re-enter Password</label>\n                                        <input type=\"password\" v-model=\"form.repassword\"\n                                               :class=\"{ 'is-invalid' : $v.form.repassword.$invalid && formstate}\"\n                                               class=\"form-control\" placeholder=\"re-enter password again\">\n                                        <small v-if=\"$v.form.repassword.require\" class=\"form-text invalid-feedback\">\n                                            Re-enter password length must more than 6\n                                        </small>\n                                        <small v-if=\"$v.form.repassword.sameAs && !$v.form.repassword.require\"\n                                               class=\"form-text invalid-feedback\">Re-enter password length must same\n                                            with password\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div v-else class=\"login-form-body-form-info\">\n                                <p>Give us some info</p>\n                                <div class=\"row\">\n                                    <div class=\"form-group col col-6\">\n                                        <label>Company name</label>\n                                        <input type=\"text\" v-model=\"form.name\"\n                                               :class=\"{ 'is-invalid' : $v.form.name.$invalid && formstate}\"\n                                               class=\"form-control\" placeholder=\"Company name\">\n                                        <small v-if=\"$v.form.name.$invalid && formstate\"\n                                               class=\"form-text invalid-feedback\">Your company name is require\n                                        </small>\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Phone number</label>\n                                        <VueTelInput v-model=\"form.phone_number\"\n                                                     @onInput=\"onInput\"\n                                                     :type=\"'number'\"\n                                                     :placeholder=\"'Company number'\"\n                                                     :disabledFormatting=\"true\"\n                                                     :inputOptions=\"{showDialCode: true}\"\n                                                     :class=\"{ 'is-invalid' : $v.form.phone_number.$invalid && formstate}\"\n                                                     class=\"form-control\"\n                                                     :preferredCountries=\"['us', 'gb', 'ua']\"></VueTelInput>\n                                        <!--<input v-model=\"form.phone_number\"-->\n                                        <!--:class=\"{ 'is-invalid' : $v.form.phone_number.$invalid && formstate}\"-->\n                                        <!--type=\"text\" class=\"form-control\" placeholder=\"Personal phone number\">-->\n                                        <small v-if=\"!$v.form.phone_number.required\" class=\"form-text invalid-feedback\">\n                                            Phone number is require\n                                        </small>\n                                        <small v-if=\"!$v.form.phone_number.isValid && $v.form.phone_number.required\"\n                                               class=\"form-text invalid-feedback\">Phone number is not valid\n                                        </small>\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Email</label>\n                                        <input v-model=\"form.email\"\n                                               :class=\"{ 'is-invalid' : $v.form.email.$invalid && formstate}\"\n                                               type=\"email\" class=\"form-control\" placeholder=\"Your mail address\">\n                                        <small class=\"form-text invalid-feedback\">This email is invalid</small>\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Company website (option)</label>\n                                        <input v-model=\"form.address\" type=\"text\" class=\"form-control\"\n                                               placeholder=\"Website link\">\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Password</label>\n                                        <input v-model=\"form.password\"\n                                               :class=\"{ 'is-invalid' : $v.form.password.$invalid && formstate}\"\n                                               type=\"password\" class=\"form-control\" placeholder=\"Your password\">\n                                        <small class=\"form-text invalid-feedback\">Password length is more than 6</small>\n                                    </div>\n                                    <div class=\"form-group col col-6\">\n                                        <label>Re-enter Password</label>\n                                        <input v-model=\"form.repassword\"\n                                               :class=\"{ 'is-invalid' : $v.form.repassword.$invalid && formstate}\"\n                                               type=\"password\" class=\"form-control\"\n                                               placeholder=\"re-enter password again\">\n                                        <small v-if=\"$v.form.repassword.require\" class=\"form-text invalid-feedback\">\n                                            Re-enter password length must more than 6\n                                        </small>\n                                        <small v-if=\"$v.form.repassword.sameAs && !$v.form.repassword.require\"\n                                               class=\"form-text invalid-feedback\">Re-enter password length must same\n                                            with password\n                                        </small>\n                                    </div>\n                                    <div class=\"difficults-report col col-12\">\n                                        <p>Difficults that your company are facing</p>\n                                        <ul class=\"list-difficult\">\n                                            <li v-for=\"question in question_list\">\n                                                <input type=\"radio\" v-model=\"form.question\" :value=\"question.id\"\n                                                       :id=\"question.id\"\n                                                       name=\"difficult-group\"/>\n                                                <label :for=\"question.id\">{{question.content}}</label>\n                                            </li>\n                                        </ul>\n                                        <div class=\"form-group\">\n                                            <input v-model=\"form.content_option\"\n                                                   type=\"text\" class=\"form-control\"\n                                                   placeholder=\"Else? Show us others problem that you are facing.\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <ul v-if=\"server_message\" class=\"text-danger\">\n                                <li v-for=\"(value,key) in server_message\">\n                                    {{server_message[key][0]}}\n                                </li>\n                            </ul>\n                            <div class=\"login-form-body-action m-t-15\">\n                                <span><span>By signing up, you agree to our <a href=\"#\">Terms of Use</a>.</span></span>\n                                <!--<button class=\"btn\">Create account</button>-->\n                                <button\n                                        :class=\"{'btn-importing': isRegisting}\" class=\"btn\">\n                                    <div class=\"circle-loader\">\n                                        <div class=\"checkmark draw\"></div>\n                                    </div>\n                                    Create account\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {required, minLength, maxLength, email, sameAs} from 'vuelidate/lib/validators'\n    import VueTelInput from 'vue-tel-input';\n    import {mapActions} from 'vuex'\n\n    export default {\n        name: \"login\",\n        data() {\n            return {\n                phone: '',\n                form: {\n                    email: '',\n                    type: 'personal',\n                    name: '',\n                    password: '',\n                    repassword: '',\n                    phone_number: '',\n                    address: '',\n                    question: '',\n                    content_option: '',\n                },\n                isRegisting: false,\n                is_phone_number_valid: true,\n                server_message: {},\n                question_list: [],\n                formstate: false,\n            }\n        },\n        components: {\n            VueTelInput,\n        },\n        created: function () {\n            this.getRegisterQuestion().then(res => {\n                let {status, data} = res.data\n                if (status) {\n                    this.question_list = data\n                }\n            })\n        },\n        methods: {\n            ...mapActions({\n                getRegisterQuestion: \"$_Account/GET_USER_QUESTION_REGISTER\",\n                registerAccount: \"$_Account/REGISTER\"\n            }),\n            regis_account() {\n                this.formstate = true\n                if (!this.$v.form.$invalid) {\n                    this.isRegisting = true\n                    this.registerAccount(this.form).then(res => {\n                        let {status, message, errors} = res.data\n                        if (status) {\n                            this.$router.push({name: \"Login\"})\n                        } else {\n                            this.server_message = errors\n                            for (let key in errors) {\n                                $notify({\n                                    type: \"danger\",\n                                    content: errors[key][0]\n                                })\n                            }\n                        }\n                        this.isRegisting = false\n                    }, (err) => {\n                        console.log(err);\n                    })\n                }\n            },\n            onInput({number, isValid, country}) {\n                console.log(isValid);\n                this.is_phone_number_valid = isValid\n            },\n            isNumber: function (evt) {\n                evt = (evt) ? evt : window.event;\n                var charCode = (evt.which) ? evt.which : evt.keyCode;\n                if ((charCode > 31 && (charCode < 48 || charCode > 57)) && charCode !== 46) {\n                    evt.preventDefault();\n                } else {\n                    return true;\n                }\n            },\n        },\n        watch: {\n            \"form.type\": function (value) {\n                this.formstate = false\n                this.server_message = {}\n                this.form = {\n                    type: this.form.type,\n                    email: '',\n                    name: '',\n                    password: '',\n                    repassword: '',\n                    phone_number: '',\n                    address: '',\n                    question: '',\n                    content_option: '',\n                }\n            },\n        },\n        validations() {\n            return {\n                form: {\n                    email: {\n                        required, email,\n                        // exist: function (value) {\n                        //     return this.emails.indexOf(value) == -1\n                        // }\n                    },\n                    password: {\n                        required,\n                        minLength: minLength(6),\n                    },\n                    repassword: {\n                        required,\n                        sameAs: sameAs('password')\n                    },\n                    phone_number: {\n                        required,\n                        isValid: function () {\n                            return this.is_phone_number_valid\n                        }\n                    },\n                    name: {\n                        required,\n                    }\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    $high-light-color: #FF7800;\n    .middle-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n    }\n\n    .login-page {\n        margin: auto;\n        padding-bottom: 30px;\n        /*height: 100vh;*/\n        &__header {\n\n        }\n        &__body {\n            .login-promote {\n                &__description {\n                    font-size: 18px;\n                    &__title {\n                        font-size: 38px;\n                    }\n                }\n            }\n            .form-container {\n                padding: 20px;\n                .login-form-header {\n                    display: flex;\n                    justify-content: space-between;\n                    .create-account-logo {\n                        display: flex;\n                        height: fit-content;\n                        .logo {\n                            @extend .middle-content;\n                            img {\n                                width: 40px;\n                                height: 40px;\n                                border-radius: 50%;\n                            }\n                        }\n                        .create-account-title {\n                            display: flex;\n                            flex-direction: column;\n                            justify-content: space-between;\n                            margin-left: 10px;\n                            p {\n                                margin-bottom: 0px;\n                            }\n                            .big-title {\n                                font-size: 22px;\n                            }\n                            .small-title {\n                                font-size: 16px;\n                            }\n                        }\n                    }\n                    .already-have-account {\n                        text-align: right;\n                        p {\n                            margin-bottom: 6px;\n                            font-size: 16px;\n                        }\n                        .btn-outline-signin {\n                            border: 0.5px solid #299DFF;\n                            width: 115px;\n                        }\n                    }\n\n                }\n                .login-form-body {\n                    &-account-type {\n                        .list-account-type {\n                            list-style-type: none;\n                            margin-top: 13px;\n                            padding: 0px;\n                            display: flex;\n                            li {\n                                background: #F1F5F7;\n                                border-radius: 20px;\n                                padding: 8px 25px 8px 8px;\n                                border: solid 1px #F1F5F7;\n                                transition: all .4s;\n                                &.checked {\n                                    border: solid 1px #FF7800;\n                                    background: white;\n                                    font-weight: 600;\n                                }\n                            }\n                        }\n                    }\n                    &-form-info {\n                        & > p {\n                            font-size: 18px;\n                            margin-bottom: 18px;\n                        }\n                        .form-group {\n                            & > label {\n                                font-weight: 600;\n                            }\n                        }\n                        .difficults-report {\n                            & > p {\n                                font-size: 18px;\n                                margin-bottom: 18px;\n                            }\n                            .list-difficult {\n                                list-style-type: none;\n                                padding: 0px;\n                                li {\n                                    margin-bottom: 19px;\n                                }\n                            }\n                        }\n                    }\n                }\n                .login-form-body-action {\n                    display: flex;\n                    & > span {\n                        flex: 1;\n                        @extend .middle-content;\n                    }\n                    button {\n                        width: 150px;\n                        height: 45px;\n                        color: white;\n                        background: $high-light-color;\n                        display: flex;\n                        transition: all .4s;\n                        justify-content: center;\n                        &.btn-importing {\n                            width: auto;\n                            line-height: 20px;\n                            .circle-loader {\n                                display: block;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n</style>\n"],"sourceRoot":"src/modules/account/_components"}]}