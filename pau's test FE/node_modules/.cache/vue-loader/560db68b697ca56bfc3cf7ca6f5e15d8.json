{"remainingRequest":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/components/v-carousel/Slide.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/components/v-carousel/Slide.vue","mtime":1552898513898},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"slide\",\n  props: [\"title\"],\n  data() {\n    return {\n      width: null\n    };\n  },\n  inject: [\"carousel\"],\n  mounted() {\n    if (!this.$isServer) {\n      this.$el.addEventListener(\"dragstart\", e => e.preventDefault());\n    }\n\n    this.$el.addEventListener(\n      this.carousel.isTouch ? \"touchend\" : \"mouseup\",\n      this.onTouchEnd\n    );\n  },\n  computed: {\n    activeSlides() {\n      const { currentPage, perPage, $children } = this.carousel;\n      const activeSlides = [];\n      const children = $children\n        .filter(\n          child =>\n            child.$el && child.$el.className.indexOf(\"VueCarousel-slide\") >= 0\n        )\n        .map(child => child._uid);\n\n      let i = 0;\n      while (i < perPage) {\n        const child = children[currentPage * perPage + i];\n        activeSlides.push(child);\n        i++;\n      }\n\n      return activeSlides;\n    },\n    /**\n     * `isActive` describes whether a slide is visible\n     * @return {Boolean}\n     */\n    isActive() {\n      return this.activeSlides.indexOf(this._uid) >= 0;\n    },\n    /**\n     * `isCenter` describes whether a slide is in the center of all visible slides\n     * if perPage is an even number, we quit\n     * @return {Boolean}\n     */\n    isCenter() {\n      const { perPage } = this.carousel;\n      if (perPage % 2 === 0 || !this.isActive) return false;\n      return this.activeSlides.indexOf(this._uid) === Math.floor(perPage / 2);\n    },\n    /**\n     * `isAdjustableHeight` describes if the carousel adjusts its height to the active slide(s)\n     * @return {Boolean}\n     */\n    isAdjustableHeight() {\n      const { adjustableHeight } = this.carousel;\n      return adjustableHeight;\n    }\n  },\n  methods: {\n    onTouchEnd(e) {\n      /**\n       * @event slideclick\n       * @event slide-click\n       * @type {Object}\n       */\n      const eventPosX =\n        this.carousel.isTouch && e.changedTouches && e.changedTouches.length > 0\n          ? e.changedTouches[0].clientX\n          : e.clientX;\n      const deltaX = this.carousel.dragStartX - eventPosX;\n\n      if (\n        this.carousel.minSwipeDistance === 0 ||\n        Math.abs(deltaX) < this.carousel.minSwipeDistance\n      ) {\n        this.$emit(\"slideclick\", Object.assign({}, e.currentTarget.dataset));\n        this.$emit(\"slide-click\", Object.assign({}, e.currentTarget.dataset));\n      }\n    }\n  }\n};\n",{"version":3,"sources":["Slide.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Slide.vue","sourceRoot":"src/components/v-carousel","sourcesContent":["<template>\n  <div\n    class=\"VueCarousel-slide\"\n    tabindex=\"-1\"\n    :aria-hidden=\"!isActive\"\n    role=\"tabpanel\"\n    :class=\"{\n      'VueCarousel-slide-active': isActive,\n      'VueCarousel-slide-center': isCenter,\n      'VueCarousel-slide-adjustableHeight': isAdjustableHeight\n    }\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"slide\",\n  props: [\"title\"],\n  data() {\n    return {\n      width: null\n    };\n  },\n  inject: [\"carousel\"],\n  mounted() {\n    if (!this.$isServer) {\n      this.$el.addEventListener(\"dragstart\", e => e.preventDefault());\n    }\n\n    this.$el.addEventListener(\n      this.carousel.isTouch ? \"touchend\" : \"mouseup\",\n      this.onTouchEnd\n    );\n  },\n  computed: {\n    activeSlides() {\n      const { currentPage, perPage, $children } = this.carousel;\n      const activeSlides = [];\n      const children = $children\n        .filter(\n          child =>\n            child.$el && child.$el.className.indexOf(\"VueCarousel-slide\") >= 0\n        )\n        .map(child => child._uid);\n\n      let i = 0;\n      while (i < perPage) {\n        const child = children[currentPage * perPage + i];\n        activeSlides.push(child);\n        i++;\n      }\n\n      return activeSlides;\n    },\n    /**\n     * `isActive` describes whether a slide is visible\n     * @return {Boolean}\n     */\n    isActive() {\n      return this.activeSlides.indexOf(this._uid) >= 0;\n    },\n    /**\n     * `isCenter` describes whether a slide is in the center of all visible slides\n     * if perPage is an even number, we quit\n     * @return {Boolean}\n     */\n    isCenter() {\n      const { perPage } = this.carousel;\n      if (perPage % 2 === 0 || !this.isActive) return false;\n      return this.activeSlides.indexOf(this._uid) === Math.floor(perPage / 2);\n    },\n    /**\n     * `isAdjustableHeight` describes if the carousel adjusts its height to the active slide(s)\n     * @return {Boolean}\n     */\n    isAdjustableHeight() {\n      const { adjustableHeight } = this.carousel;\n      return adjustableHeight;\n    }\n  },\n  methods: {\n    onTouchEnd(e) {\n      /**\n       * @event slideclick\n       * @event slide-click\n       * @type {Object}\n       */\n      const eventPosX =\n        this.carousel.isTouch && e.changedTouches && e.changedTouches.length > 0\n          ? e.changedTouches[0].clientX\n          : e.clientX;\n      const deltaX = this.carousel.dragStartX - eventPosX;\n\n      if (\n        this.carousel.minSwipeDistance === 0 ||\n        Math.abs(deltaX) < this.carousel.minSwipeDistance\n      ) {\n        this.$emit(\"slideclick\", Object.assign({}, e.currentTarget.dataset));\n        this.$emit(\"slide-click\", Object.assign({}, e.currentTarget.dataset));\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.VueCarousel-slide {\n  flex-basis: inherit;\n  flex-grow: 0;\n  flex-shrink: 0;\n  user-select: none;\n  backface-visibility: hidden;\n  -webkit-touch-callout: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  outline: none;\n}\n\n.VueCarousel-slide-adjustableHeight {\n  display: table;\n  flex-basis: auto;\n  width: 100%;\n}\n</style>\n"]}]}