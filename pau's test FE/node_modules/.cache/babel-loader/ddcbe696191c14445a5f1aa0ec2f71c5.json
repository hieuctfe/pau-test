{"remainingRequest":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/seller/_components/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/seller/_components/login.vue","mtime":1555046162014},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength, email, sameAs } from 'vuelidate/lib/validators';\nimport { mapGetters, mapActions } from 'vuex';\nimport loginFB from './partials/fblogin';\nimport gglogin from './partials/gglogin';\nimport helper from '@/plugins/helper';\nexport default {\n  name: \"LoginAndRegister\",\n  data: function data() {\n    return {\n      isLoginFocus: true,\n      login: {\n        email: '',\n        password: ''\n      },\n      register: {\n        email: '',\n        password: '',\n        repassword: '',\n        country_code: 'US',\n        agree: false\n      },\n      register_dialog: {\n        email: '',\n        password: '',\n        country_code: 'US',\n        id: '',\n        name_social: ''\n      },\n      register_dialog_validate: {\n        password: true,\n        country_code: true,\n        email: true\n      },\n      forgot: {\n        email: ''\n      },\n      error: {\n        login: '',\n        forgot: '',\n        register: ''\n      },\n      loginStatus: false,\n      forgotStatus: false,\n      registerStatus: false,\n      forgotPassword: false,\n      isSentForgotEmail: false,\n      isSocialRegisterSuccess: false,\n      isFbhaveEmail: true\n    };\n  },\n  components: {\n    loginFB: loginFB,\n    gglogin: gglogin\n  },\n  mounted: function mounted() {},\n  methods: _objectSpread({}, mapActions({\n    sendTokenToServer: \"$_Seller/SEND_ACCESS_TOKEN\",\n    sentForgotPasswordRequest: \"$_Seller/FORGOT_PASSWORD\",\n    registerWithSocial: \"$_Seller/REGISTER_WITH_SOCIAL\",\n    socialWithNewEmail: \"$_Seller/SOCIAL_WITH_NEW_EMAIL\"\n  }), {\n    onRegisterWithSocial: function onRegisterWithSocial() {\n      var _this = this;\n\n      this.register_dialog_validate.password = this.register_dialog.password.length >= 6;\n      this.register_dialog_validate.email = helper.validateEmail(this.register_dialog.email);\n\n      if (this.register_dialog_validate.password && this.register_dialog_validate.email) {\n        $('#fb-regis-dialog').modal('hide');\n\n        if (this.isFbhaveEmail) {\n          this.registerWithSocial(this.register_dialog).then(function (res) {\n            if (res.data.status) {\n              _this.$store.commit('$_Seller/LOGIN_SUCCESS', res.data.data.token);\n\n              _this.redirect({\n                name: 'Seller'\n              });\n            } else {\n              $notify({\n                content: res.data.message,\n                type: \"danger\"\n              });\n              $('#fb-regis-dialog').modal('show');\n            }\n          });\n        } else {\n          this.socialWithNewEmail(this.register_dialog).then(function (res) {\n            if (res.data.status) {\n              _this.isSocialRegisterSuccess = true;\n              $('#fb-regis-dialog').modal('show');\n            } else {\n              $notify({\n                content: \"The email has already been taken\",\n                type: \"danger\"\n              });\n              $('#fb-regis-dialog').modal('show');\n            }\n          });\n        }\n      }\n    },\n    fbLogin: function fbLogin(userInfo) {\n      var _this2 = this;\n\n      console.log(userInfo); // let token = u\n\n      if (userInfo.status == \"connected\") {\n        var user = {\n          token: userInfo.authResponse.accessToken,\n          type: \"facebook\"\n        };\n        this.sendTokenToServer(user).then(function (res) {\n          if (res.data.status) {\n            if (!res.data.data.token) {\n              _this2.register_dialog.email = res.data.data.email;\n              _this2.register_dialog.id = res.data.data.fb_id;\n              _this2.register_dialog.name_social = 'FB';\n              $('#fb-regis-dialog').modal('show');\n            } else {\n              _this2.$store.commit('$_Seller/LOGIN_SUCCESS', res.data.data.token);\n\n              _this2.redirect({\n                name: 'Seller'\n              });\n            }\n          } else {\n            _this2.register_dialog.id = res.data.data.fb_id;\n            _this2.register_dialog.name_social = 'FB';\n            _this2.isFbhaveEmail = false;\n            $('#fb-regis-dialog').modal('show');\n          }\n        });\n      }\n    },\n    ggLogin: function ggLogin(userInfo) {\n      var _this3 = this;\n\n      console.log(userInfo);\n\n      if (!userInfo.error) {\n        var user = {\n          token: userInfo.Zi.id_token,\n          type: \"google\"\n        };\n        this.sendTokenToServer(user).then(function (res) {\n          if (res.data.status) {\n            if (!res.data.data.token) {\n              _this3.register_dialog.email = res.data.data.email;\n              _this3.register_dialog.id = res.data.data.gg_id;\n              _this3.register_dialog.name_social = 'GG';\n              $('#fb-regis-dialog').modal('show');\n            } else {\n              _this3.$store.commit('$_Seller/LOGIN_SUCCESS', res.data.data.token);\n\n              _this3.redirect({\n                name: 'Seller'\n              });\n            }\n          }\n        });\n      }\n    },\n    formFocus: function formFocus(isLogin) {\n      if (isLogin == \"login-form\") {\n        this.isLoginFocus = true;\n      } else {\n        this.isLoginFocus = false;\n      }\n    },\n    onSubmitLogin: function onSubmitLogin() {\n      var _this4 = this;\n\n      this.$v.login.$touch();\n      this.loginStatus = true;\n\n      if (!this.$v.login.$invalid) {\n        this.$store.dispatch('$_Seller/LOGIN', {\n          email: this.login.email,\n          password: this.login.password\n        }).then(function (res) {\n          var _res$data = res.data,\n              status = _res$data.status,\n              data = _res$data.data;\n\n          if (status) {\n            if (_this4.router.name) {\n              _this4.redirect(_this4.router.fullPath);\n            } else {\n              _this4.redirect({\n                name: 'Seller'\n              });\n            }\n          } else {\n            _this4.error.login = data.message ? data.message : 'error';\n          }\n        });\n      }\n    },\n    onSubmitForgot: function onSubmitForgot() {\n      var _this5 = this;\n\n      this.$v.forgot.$touch();\n      this.forgotStatus = true;\n\n      if (!this.$v.forgot.$invalid) {\n        this.sentForgotPasswordRequest({\n          email: this.forgot.email\n        }).then(function (res) {\n          var _res$data2 = res.data,\n              status = _res$data2.status,\n              message = _res$data2.message;\n\n          if (status) {\n            _this5.isSentForgotEmail = true;\n          } else {\n            _this5.error.forgot = message ? message : 'error';\n          }\n        });\n      }\n    },\n    onSubmitRegister: function onSubmitRegister() {\n      var _this6 = this;\n\n      this.$v.register.$touch();\n      this.registerStatus = true;\n\n      if (!this.$v.register.$invalid) {\n        this.$store.dispatch('$_Seller/REGISTER', {\n          email: this.register.email,\n          password: this.register.password,\n          country_code: this.register.country_code\n        }).then(function (res) {\n          console.log(res);\n          var _res$data3 = res.data,\n              status = _res$data3.status,\n              data = _res$data3.data;\n\n          if (status) {\n            _this6.redirect({\n              name: 'SellerPlan'\n            });\n          } else {\n            _this6.error.register = data.message.email ? data.message.email[0] : 'error';\n          }\n        });\n      }\n    }\n  }),\n  computed: _objectSpread({}, mapGetters({\n    countries: '$_Home/getCountries',\n    router: 'getPreviousRouter'\n  })),\n  watch: {\n    'forgotPassword': function forgotPassword(value) {\n      if (!value) {\n        this.forgot = {\n          email: ''\n        };\n        this.$v.forgot.$reset();\n      } else {\n        this.login = {\n          email: '',\n          password: ''\n        };\n        this.$v.login.$reset();\n      }\n    }\n  },\n  validations: {\n    login: {\n      email: {\n        required: required,\n        email: email\n      },\n      password: {\n        required: required,\n        minLength: minLength(6)\n      }\n    },\n    forgot: {\n      email: {\n        required: required,\n        email: email\n      }\n    },\n    register: {\n      email: {\n        required: required,\n        email: email\n      },\n      password: {\n        required: required,\n        minLength: minLength(6)\n      },\n      repassword: {\n        required: required,\n        macth: sameAs('password')\n      },\n      country_code: {\n        required: required\n      },\n      agree: {\n        required: function required(value) {\n          return value;\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"login-container\">\n        <div class=\"login-form row\">\n            <div @click=\"formFocus('login-form')\" :class=\"{'form-opacity':!isLoginFocus}\"\n                 class=\"col col-md-6 login-left-form\">\n                <transition name=\"fade-transform\" mode=\"out-in\">\n                    <form @submit.stop.prevent=\"onSubmitLogin()\" novalidate v-if=\"!forgotPassword\" key=\"is-login\">\n                        <div class=\"product-filter-title m-b-25\">\n                            <span>Login</span>\n                        </div>\n                        <p>Keep raising your business</p>\n                        <div class=\"form-group become-input col col-md-8\">\n                            <label class=\"input-title\">Email <span class=\"text-danger\">*</span></label>\n                            <input class=\"form-control outline-type\"\n                                   :class=\"{'is-invalid': $v.login.email.$error || (loginStatus && $v.login.email.$invalid)}\"\n                                   v-model=\"$v.login.email.$model\"/>\n                            <div class=\"invalid-feedback\"\n                                 v-if=\"$v.login.email.$error  || (loginStatus && $v.login.email.$invalid)\">\n                                <span v-if=\"!$v.login.email.required\">Email is required</span>\n                                <span v-if=\"!$v.login.email.email\">Email is not valid</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group become-input col col-md-8\">\n                            <label class=\"input-title\">Password <span class=\"text-danger\">*</span></label>\n                            <input class=\"form-control outline-type\" type=\"password\"\n                                   :class=\"{'is-invalid': $v.login.password.$error || (loginStatus && $v.login.password.$invalid)}\"\n                                   v-model=\"$v.login.password.$model\"/>\n                            <div class=\"invalid-feedback\"\n                                 v-if=\"$v.login.password.$error || (loginStatus && $v.login.password.$invalid)\">\n                                <span v-if=\"!$v.login.password.required\">Password is required</span>\n                                <span v-if=\"!$v.login.password.minLength\">Password to short</span>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group become-input col col-md-8 m-t-10\">\n                            <div class=\"row\">\n                                <div class=\"col col-6\">\n                                    <div class=\"custom-checkbox\">\n                                        <label><input type=\"checkbox\">Remember Me</label>\n                                    </div>\n                                </div>\n                                <div class=\"col col-6 text-right\">\n                                    <a href=\"#\" @click.stop.prevent=\"forgotPassword = true\"\n                                       class=\"text-yellow forgot-password\">Forgot your password?</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\" v-if=\"error.login != ''\">\n                            <div class=\"error-login text-danger\">\n                                {{ error.login }}\n                            </div>\n                        </div>\n                        <div class=\"login-action m-t-20\">\n                            <button class=\"save-login btn btn-warning btn-radius-border\" type=\"submit\"\n                                    :disabled=\"$v.login.$invalid\">\n                                Login\n                            </button>\n                        </div>\n                        <div class=\"social-network-container m-t-15\">\n                            <loginFB app-id=\"980782702116743\" @login=\"fbLogin\"></loginFB>\n                            <gglogin @Login=\"ggLogin\"></gglogin>\n                        </div>\n                    </form>\n                    <form @submit.stop.prevent=\"onSubmitForgot()\" novalidate v-else key=\"is-fotgot-password\">\n                        <template v-if=\"!isSentForgotEmail\">\n                            <div class=\"product-filter-title m-b-25\">\n                                <span>Forgot your password?</span>\n                            </div>\n                            <p>Enter your email </p>\n                            <div class=\"form-group become-input col col-md-8\">\n                                <label class=\"input-title\">Email <span class=\"text-danger\">*</span></label>\n                                <input class=\"form-control outline-type\"\n                                       :class=\"{'is-invalid': $v.forgot.email.$error || (forgotStatus && $v.forgot.email.$invalid)}\"\n                                       v-model=\"$v.forgot.email.$model\"/>\n                                <div class=\"invalid-feedback\"\n                                     v-if=\"$v.forgot.email.$error  || (forgotStatus && $v.forgot.email.$invalid)\">\n                                    <span v-if=\"!$v.forgot.email.required\">Email is required</span>\n                                    <span v-if=\"!$v.forgot.email.email\">Email is not valid</span>\n                                </div>\n                            </div>\n                            <div class=\"back-link-forgot form-group become-input col col-md-8 m-t-10 text-right\">\n                                <div class=\"form-group\">\n                                    <div class=\"error-login text-danger\">\n                                        {{ error.forgot }}\n                                    </div>\n                                </div>\n                                <a href=\"#\" @click.stop.prevent=\"forgotPassword = false\"\n                                   class=\"text-yellow forgot-password\">Back to login</a>\n                            </div>\n\n                            <div class=\"login-action m-t-20\">\n                                <button class=\"save-login btn btn-warning btn-radius-border\" type=\"submit\"\n                                        :disabled=\"$v.forgot.$invalid\">\n                                    Get Verified Mail\n                                </button>\n                            </div>\n                        </template>\n                        <template v-else>\n                            <div class=\"sent-success\">\n                                <p class=\"sent-success-title m-t-60\">\n                                    Check your email to continue reset password\n                                </p>\n                                <p class=\"sent-success-description\">\n                                    <a href=\"#\" @click.stop.prevent=\"forgotPassword = false; isSentForgotEmail = false\"\n                                       class=\"text-yellow forgot-password\">Back to login</a>\n                                </p>\n                            </div>\n                        </template>\n                    </form>\n                </transition>\n            </div>\n            <div @click=\"formFocus\" :class=\"{'form-opacity':isLoginFocus}\" class=\"col col-md-6 register-right-form\">\n                <form @submit.stop.prevent=\"onSubmitRegister()\" novalidate>\n                    <div class=\"product-filter-title m-b-25\">\n                        <span>Register</span>\n                    </div>\n                    <p>Start making business with us!</p>\n                    <div class=\"form-group become-input col col-md-8\">\n                        <label class=\"input-title\">Email <span class=\"text-danger\">*</span> </label>\n                        <input class=\"form-control outline-type\"\n                               :class=\"{\n                            'is-invalid': $v.register.email.$error || (registerStatus&&$v.register.email.$invalid),\n                            'is-valid': !$v.register.email.$invalid\n                        }\" v-model=\"$v.register.email.$model\"/>\n                        <div class=\"invalid-feedback\"\n                             v-if=\"$v.register.email.$error || (registerStatus&&$v.register.email.$invalid)\">\n                            <span v-if=\"!$v.register.email.required\">Email is required</span>\n                            <span v-if=\"!$v.register.email.email\">Email is not valid</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group become-input col col-md-8\">\n                        <label class=\"input-title\">Password <span class=\"text-danger\">*</span></label>\n                        <input class=\"form-control outline-type\" type=\"password\" v-model=\"$v.register.password.$model\"\n                               :class=\"{\n                            'is-invalid': $v.register.password.$error || (registerStatus&&$v.register.password.$invalid),\n                            'is-valid': !$v.register.password.$invalid\n                        }\"/>\n                        <div class=\"invalid-feedback\"\n                             v-if=\"$v.register.password.$error || (registerStatus&&$v.register.password.$invalid)\">\n                            <span v-if=\"!$v.register.password.required\">Password is required</span>\n                            <span v-if=\"!$v.register.password.minLength\">Password length much more than 6</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group become-input col col-md-8\">\n                        <label class=\"input-title\">Repassword <span class=\"text-danger\">*</span></label>\n                        <input class=\"form-control outline-type\" type=\"password\"\n                               :class=\"{\n                            'is-invalid': $v.register.repassword.$error || (registerStatus&&$v.register.repassword.$invalid) ,\n                            'is-valid': !$v.register.repassword.$invalid\n                        }\" v-model=\"$v.register.repassword.$model\"/>\n                        <div class=\"invalid-feedback\"\n                             v-if=\"$v.register.repassword.$error || (registerStatus&&$v.register.repassword.$invalid)\">\n                            <span v-if=\"!$v.register.repassword.required\">Repassword is required</span>\n                            <span v-if=\"$v.register.repassword.required && !$v.register.repassword.match\">Repassword must be same as password</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group become-input col col-md-8\">\n                        <label class=\"input-title\">Country <span class=\"text-danger\">*</span></label>\n                        <div class=\"outline-type select-outline\">\n                            <select class=\"form-control\"\n                                    :class=\"{\n                            'is-invalid': $v.register.country_code.$error || (registerStatus&&$v.register.country_code.$invalid)\n                        }\" v-model=\"$v.register.country_code.$model\">\n                                <option v-for=\"(item , index) in countries\" :value=\"item.code\" :key=\"`item${index}`\">\n                                    {{item.name}}\n                                </option>\n                            </select>\n                        </div>\n                        <div class=\"invalid-feedback\"\n                             v-if=\"$v.register.country_code.$error || ( registerStatus&&$v.register.country_code.$invalid)\">\n                            <span v-if=\"!$v.register.country_code.required\">Password is required</span>\n                        </div>\n                    </div>\n                    <div class=\"accept-checkbox form-check form-check-inline m-t-10\">\n                        <div class=\"custom-checkbox\">\n                            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"register.agree\">\n                        </div>\n                        <label class=\"form-check-label\">I have read and accept <a href=\"\">the terms and\n                            conditions</a></label>\n                    </div>\n                    <div class=\"form-group\" v-if=\"error.register != ''\">\n                        <div class=\"error-login text-danger\">\n                            {{ error.register }}\n                        </div>\n                    </div>\n                    <div class=\"login-action m-t-20\">\n                        <button class=\"save-login btn btn-warning btn-radius-border\" type=\"submit\"\n                                :disabled=\"$v.register.$invalid\">\n                            Register Now\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"modal fade\" id=\"fb-regis-dialog\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n                <form @submit.stop.prevent=\"onRegisterWithSocial\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-title\">\n                            <div class=\"\">Register</div>\n                        </div>\n                        <div v-if=\"!isSocialRegisterSuccess\" class=\"modal-body\">\n                            <div class=\"register-fb-container\">\n                                <div class=\"row\">\n                                    <div class=\"form-group col col-12\">\n                                        <label class=\"input-title\">email <span class=\"text-danger\">*</span></label>\n                                        <div class=\"outline-type\">\n                                            <input v-model=\"register_dialog.email\" class=\"form-control border-0\"\n                                                   :disabled=\"isFbhaveEmail\"\n                                                   :class=\"{'is-invalid':!register_dialog_validate.email}\"\n                                                   placeholder=\"example@fireapps.com\" type=\"text\"/>\n                                        </div>\n                                        <div class=\"invalid-feedback\">\n                                            <span>Email is invalid</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"form-group col col-12\">\n                                        <label class=\"input-title\">Password <span class=\"text-danger\">*</span></label>\n                                        <input :class=\"{'is-invalid':!register_dialog_validate.password}\"\n                                               v-model=\"register_dialog.password\" class=\"form-control outline-type\"\n                                               placeholder=\"Password\" type=\"password\"/>\n                                    </div>\n                                    <div class=\"invalid-feedback\">\n                                        <span>Password length must more than 6</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"form-group col col-md-12\">\n                                        <label class=\"input-title\">Country <span class=\"text-danger\">*</span></label>\n                                        <div class=\"outline-type select-outline\">\n                                            <select v-model=\"register_dialog.country_code\" class=\"form-control\">\n                                                <option v-for=\"(item , index) in countries\" :value=\"item.code\"\n                                                        :key=\"`item${index}`\">\n                                                    {{item.name}}\n                                                </option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"dialog-action m-b-15\">\n                                <button class=\"btn btn-warning btn-radius-border m-t-25 text-white\">Register</button>\n                            </div>\n                        </div>\n                        <div v-else class=\"modal-body\">\n                            <div class=\"register-fb-container\">\n                                <div class=\"sent-success\">\n                                    <p class=\"sent-success-title m-t-20 text-center\">\n                                        Check your email to continue\n                                    </p>\n                                    <!--<p class=\"sent-success-description text-center\">-->\n                                    <!--<router-link :to=\"{name: 'Seller'}\" class=\"text-yellow forgot-password\">Back to-->\n                                    <!--login-->\n                                    <!--</router-link>-->\n                                    <!--</p>-->\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {required, minLength, email, sameAs} from 'vuelidate/lib/validators'\n    import {mapGetters, mapActions} from 'vuex';\n    import loginFB from './partials/fblogin';\n    import gglogin from './partials/gglogin';\n    import helper from '@/plugins/helper'\n\n    export default {\n        name: \"LoginAndRegister\",\n        data() {\n            return {\n                isLoginFocus: true,\n                login: {\n                    email: '',\n                    password: ''\n                },\n                register: {\n                    email: '',\n                    password: '',\n                    repassword: '',\n                    country_code: 'US',\n                    agree: false\n                },\n                register_dialog: {\n                    email: '',\n                    password: '',\n                    country_code: 'US',\n                    id: '',\n                    name_social: ''\n                },\n                register_dialog_validate: {\n                    password: true,\n                    country_code: true,\n                    email: true\n                },\n                forgot: {\n                    email: ''\n                },\n                error: {\n                    login: '',\n                    forgot: '',\n                    register: ''\n                },\n                loginStatus: false,\n                forgotStatus: false,\n                registerStatus: false,\n                forgotPassword: false,\n                isSentForgotEmail: false,\n                isSocialRegisterSuccess: false,\n                isFbhaveEmail: true\n            }\n        },\n        components: {\n            loginFB, gglogin\n        },\n        mounted: function () {\n\n        },\n        methods: {\n            ...mapActions({\n                sendTokenToServer: \"$_Seller/SEND_ACCESS_TOKEN\",\n                sentForgotPasswordRequest: \"$_Seller/FORGOT_PASSWORD\",\n                registerWithSocial: \"$_Seller/REGISTER_WITH_SOCIAL\",\n                socialWithNewEmail: \"$_Seller/SOCIAL_WITH_NEW_EMAIL\",\n            }),\n            onRegisterWithSocial() {\n                this.register_dialog_validate.password = this.register_dialog.password.length >= 6\n                this.register_dialog_validate.email = helper.validateEmail(this.register_dialog.email)\n                if (this.register_dialog_validate.password && this.register_dialog_validate.email) {\n                    $('#fb-regis-dialog').modal('hide')\n                    if (this.isFbhaveEmail) {\n                        this.registerWithSocial(this.register_dialog).then(res => {\n                            if (res.data.status) {\n                                this.$store.commit('$_Seller/LOGIN_SUCCESS', res.data.data.token)\n                                this.redirect({\n                                    name: 'Seller'\n                                })\n                            } else {\n                                $notify({\n                                    content: res.data.message,\n                                    type: \"danger\"\n                                })\n                                $('#fb-regis-dialog').modal('show')\n                            }\n                        })\n                    } else {\n                        this.socialWithNewEmail(this.register_dialog).then(res => {\n                            if (res.data.status) {\n                                this.isSocialRegisterSuccess = true\n                                $('#fb-regis-dialog').modal('show')\n                            } else {\n                                $notify({\n                                    content: \"The email has already been taken\",\n                                    type: \"danger\"\n                                })\n                                $('#fb-regis-dialog').modal('show')\n                            }\n                        })\n                    }\n                }\n            },\n            fbLogin(userInfo) {\n                console.log(userInfo);\n                // let token = u\n                if (userInfo.status == \"connected\") {\n                    let user = {\n                        token: userInfo.authResponse.accessToken,\n                        type: \"facebook\"\n                    }\n                    this.sendTokenToServer(user).then(res => {\n                        if (res.data.status) {\n                            if (!res.data.data.token) {\n                                this.register_dialog.email = res.data.data.email\n                                this.register_dialog.id = res.data.data.fb_id\n                                this.register_dialog.name_social = 'FB'\n                                $('#fb-regis-dialog').modal('show')\n                            } else {\n                                this.$store.commit('$_Seller/LOGIN_SUCCESS', res.data.data.token)\n                                this.redirect({\n                                    name: 'Seller'\n                                })\n                            }\n                        } else {\n                            this.register_dialog.id = res.data.data.fb_id\n                            this.register_dialog.name_social = 'FB'\n                            this.isFbhaveEmail = false\n                            $('#fb-regis-dialog').modal('show')\n                        }\n                    })\n\n                }\n            },\n            ggLogin(userInfo) {\n                console.log(userInfo);\n                if (!userInfo.error) {\n                    let user = {\n                        token: userInfo.Zi.id_token,\n                        type: \"google\"\n                    }\n                    this.sendTokenToServer(user).then(res => {\n                        if (res.data.status) {\n                            if (!res.data.data.token) {\n                                this.register_dialog.email = res.data.data.email\n                                this.register_dialog.id = res.data.data.gg_id\n                                this.register_dialog.name_social = 'GG'\n                                $('#fb-regis-dialog').modal('show')\n                            } else {\n                                this.$store.commit('$_Seller/LOGIN_SUCCESS', res.data.data.token)\n                                this.redirect({\n                                    name: 'Seller'\n                                })\n                            }\n                        }\n                    })\n                }\n            },\n            formFocus(isLogin) {\n                if (isLogin == \"login-form\") {\n                    this.isLoginFocus = true\n                } else {\n                    this.isLoginFocus = false\n                }\n            },\n            onSubmitLogin() {\n                this.$v.login.$touch()\n                this.loginStatus = true\n                if (!this.$v.login.$invalid) {\n                    this.$store.dispatch('$_Seller/LOGIN', {\n                        email: this.login.email,\n                        password: this.login.password,\n                    }).then(res => {\n                        let {status, data} = res.data\n                        if (status) {\n                            if (this.router.name) {\n                                this.redirect(this.router.fullPath)\n                            } else {\n                                this.redirect({\n                                    name: 'Seller'\n                                })\n                            }\n\n                        } else {\n                            this.error.login = data.message ? data.message : 'error'\n                        }\n                    })\n                }\n            },\n            onSubmitForgot() {\n                this.$v.forgot.$touch()\n                this.forgotStatus = true\n                if (!this.$v.forgot.$invalid) {\n                    this.sentForgotPasswordRequest({email: this.forgot.email}).then(res => {\n                        let {status, message} = res.data\n                        if (status) {\n                            this.isSentForgotEmail = true\n                        } else {\n                            this.error.forgot = message ? message : 'error'\n                        }\n                    })\n                }\n            },\n            onSubmitRegister() {\n                this.$v.register.$touch()\n                this.registerStatus = true\n                if (!this.$v.register.$invalid) {\n                    this.$store.dispatch('$_Seller/REGISTER', {\n                        email: this.register.email,\n                        password: this.register.password,\n                        country_code: this.register.country_code\n                    }).then(res => {\n                        console.log(res);\n                        let {status, data} = res.data\n                        if (status) {\n                            this.redirect({\n                                name: 'SellerPlan'\n                            })\n                        } else {\n                            this.error.register = data.message.email ? data.message.email[0] : 'error'\n                        }\n                    })\n                }\n            }\n        },\n        computed: {\n            ...mapGetters({\n                countries: '$_Home/getCountries',\n                router: 'getPreviousRouter'\n            })\n        },\n        watch: {\n            'forgotPassword': function (value) {\n                if (!value) {\n                    this.forgot = {\n                        email: ''\n                    }\n                    this.$v.forgot.$reset()\n                } else {\n                    this.login = {\n                        email: '',\n                        password: ''\n                    }\n                    this.$v.login.$reset()\n                }\n            }\n        },\n        validations: {\n            login: {\n                email: {\n                    required, email\n                },\n                password: {\n                    required, minLength: minLength(6)\n                }\n            },\n            forgot: {\n                email: {\n                    required, email\n                },\n            },\n            register: {\n                email: {\n                    required, email\n                },\n                password: {\n                    required, minLength: minLength(6)\n                },\n                repassword: {\n                    required,\n                    macth: sameAs('password')\n                },\n                country_code: {\n                    required,\n                },\n                agree: {\n                    required: function (value) {\n                        return value\n                    }\n                }\n            }\n        },\n    }\n</script>\n\n\n<style lang=\"scss\" scoped>\n    @import 'src/assets/style';\n\n    .form-opacity {\n        opacity: .4;\n    }\n\n    .login-form {\n        .login-left-form {\n            position: relative;\n            &:after {\n                content: '';\n                height: 100%;\n                border-right: solid 1px lightgray;\n                position: absolute;\n                right: 10%;\n                top: 0px;\n                z-index: 10;\n            }\n            &:before {\n                content: 'or';\n                height: 50px;\n                width: 50px;\n                border-radius: 50%;\n                border: solid 1px lightgray;\n                text-align: center;\n                line-height: 50px;\n                position: absolute;\n                right: 10%;\n                top: 40%;\n                transform: translateX(50%);\n                z-index: 11;\n                background: white;\n            }\n        }\n\n        .login-left-form, .register-right-form {\n            transition: all .5s;\n        }\n        .become-input {\n            margin-top: 20px;\n            padding-left: 0px;\n            input.form-control, select {\n                height: 40px;\n            }\n        }\n        .accept-checkbox {\n            a {\n                color: $yellow;\n            }\n        }\n    }\n\n    .login-action {\n        .save-login {\n            color: white;\n            padding-left: 20px;\n            padding-right: 20px;\n            min-width: 150px;\n        }\n    }\n\n    .text-yellow {\n        color: $yellow;\n    }\n\n    .forgot-password {\n        color: $yellow;\n        &:hover {\n            color: $yellow;\n            text-decoration: underline;\n        }\n    }\n\n    .back-link-forgot {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .social-network-container {\n        button {\n            float: left;\n            margin-right: 10px;\n        }\n    }\n\n    #fb-regis-dialog {\n        .form-control {\n            height: 40px;\n        }\n        .dialog-action {\n            text-align: center;\n            button {\n                min-width: 150px;\n            }\n        }\n        .modal-title {\n            font-weight: $font-weight-bold;\n            font-size: 30px;\n            padding: 16px 16px 0px 16px;\n        }\n    }\n\n    .sent-success {\n        &-title {\n            font-size: 25px;\n        }\n        &-description {\n\n        }\n    }\n</style>\n"],"sourceRoot":"src/modules/seller/_components"}]}