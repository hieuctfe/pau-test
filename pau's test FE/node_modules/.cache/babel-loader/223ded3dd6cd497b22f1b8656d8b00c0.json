{"remainingRequest":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/home/_store/actions.js","dependencies":[{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/home/_store/actions.js","mtime":1554975161251},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"regenerator-runtime/runtime\";\nimport _Promise from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _objectDestructuringEmpty from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nimport _asyncToGenerator from \"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction MERGE_IMPORTED_PRODUCT(_x) {\n  return _MERGE_IMPORTED_PRODUCT.apply(this, arguments);\n}\n\nfunction _MERGE_IMPORTED_PRODUCT() {\n  _MERGE_IMPORTED_PRODUCT = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee11(list_product) {\n    var imported, str;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return action.GET_LIST_IMPORTED();\n\n          case 2:\n            imported = _context11.sent;\n            str = [];\n\n            if (imported.data.status) {\n              str = imported.data.data.imported;\n            }\n\n            return _context11.abrupt(\"return\", list_product.map(function (el, idx) {\n              console.log(el);\n\n              if (str.indexOf(el.id) >= 0) {\n                el.isImported = true;\n              } else {\n                el.isImported = false;\n              }\n\n              return el;\n            }));\n\n          case 6:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _MERGE_IMPORTED_PRODUCT.apply(this, arguments);\n}\n\nvar action = {\n  GET_LIST_COLLECTIONS: function GET_LIST_COLLECTIONS(_ref, _ref2) {\n    var commit = _ref.commit;\n\n    _objectDestructuringEmpty(_ref2);\n\n    return new _Promise(function (resolve, reject) {\n      axios.get('/api/collections').then(function (res) {\n        var _res$data = res.data,\n            status = _res$data.status,\n            data = _res$data.data;\n\n        if (status) {\n          commit('UPDATE_COLLECTION', data);\n        }\n\n        resolve(res.data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  },\n  GET_LIST_COUNTRIES: function GET_LIST_COUNTRIES(_ref3, _ref4) {\n    var commit = _ref3.commit;\n\n    _objectDestructuringEmpty(_ref4);\n\n    return new _Promise(function (resolve, reject) {\n      axios.get('/api/supplier/country').then(function (res) {\n        var _res$data2 = res.data,\n            status = _res$data2.status,\n            data = _res$data2.data;\n\n        if (status) {\n          commit('UPDATE_COUNTRY', data);\n        }\n\n        resolve(res.data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  },\n  GET_LIST_SUPPLIERS: function GET_LIST_SUPPLIERS(_ref5, _ref6) {\n    var commit = _ref5.commit;\n\n    _objectDestructuringEmpty(_ref6);\n\n    return new _Promise(function (resolve, reject) {\n      axios.get('/api/suppliers').then(function (res) {\n        var _res$data3 = res.data,\n            status = _res$data3.status,\n            data = _res$data3.data;\n\n        if (status) {\n          commit('UPDATE_SUPPLIER', data);\n        }\n\n        resolve(res.data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  },\n  GET_LIST_BANNERS: function GET_LIST_BANNERS(_ref7, _ref8) {\n    var commit = _ref7.commit;\n\n    _objectDestructuringEmpty(_ref8);\n\n    return new _Promise(function (resolve, reject) {\n      setTimeout(function () {\n        commit('UPDATE_BANNERS', [{\n          id: '123',\n          url: 'adsadad',\n          image: 'https://dropsquare-api-dev.fireapps.io/uploads/images/1627401458103778/V9NJQmix7sS5KfJ8EY1eYv4FtwtnHMH6IZs341OM.png'\n        }, {\n          id: '345',\n          url: 'adsadad',\n          image: 'https://dropsquare-api-dev.fireapps.io/uploads/images/1627401458103778/IeXdcwKsmODuK3P2phf0sZQ27sEw7zHVZTCRmy6r.jpeg'\n        }, {\n          id: '567',\n          url: 'adsadad',\n          image: 'https://dropsquare-api-dev.fireapps.io/uploads/images/1627401458103778/3aLH16PJVAGumjjCpcVLss1XlLuBrLbJGJZwD2Cu.jpeg'\n        }]);\n        resolve();\n      }, 500);\n    });\n  },\n  GET_PRODUCT_QUESTION: function GET_PRODUCT_QUESTION(_ref9, _ref10) {\n    var commit = _ref9.commit;\n    var id = _ref10.id,\n        _ref10$current_page = _ref10.current_page,\n        current_page = _ref10$current_page === void 0 ? 1 : _ref10$current_page,\n        _ref10$limit = _ref10.limit,\n        limit = _ref10$limit === void 0 ? 5 : _ref10$limit;\n    var params = {\n      current_page: current_page,\n      limit: limit\n    };\n    return new _Promise(function (resolve, reject) {\n      axios.get(\"api/seller/products/\".concat(id, \"/questions\"), {\n        params: params\n      }).then(function (res) {\n        resolve(res.data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  },\n  POST_PRODUCT_QUESTION: function POST_PRODUCT_QUESTION(_ref11, _ref12) {\n    _objectDestructuringEmpty(_ref11);\n\n    var id = _ref12.id,\n        content = _ref12.content;\n    return new _Promise(function (resolve, reject) {\n      axios.post(\"api/seller/products/\".concat(id, \"/questions/add\"), {\n        title: content\n      }).then(function (res) {\n        resolve(res.data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  },\n  GET_LIST_IMPORTED: function () {\n    var _GET_LIST_IMPORTED = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"/api/seller/products/imported\");\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_LIST_IMPORTED() {\n      return _GET_LIST_IMPORTED.apply(this, arguments);\n    }\n\n    return GET_LIST_IMPORTED;\n  }(),\n  GET_RECENT_PRODUCT: function () {\n    var _GET_RECENT_PRODUCT = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref13, ids) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref13.commit;\n              return _context3.abrupt(\"return\", new _Promise(function (resolve, reject) {\n                axios.get('/api/seller/products/recent_viewed', {\n                  params: {\n                    ids: ids\n                  }\n                }).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref14 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee2(res) {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!res.data.status) {\n                              _context2.next = 4;\n                              break;\n                            }\n\n                            _context2.next = 3;\n                            return MERGE_IMPORTED_PRODUCT(res.data.data);\n\n                          case 3:\n                            res.data.data = _context2.sent;\n\n                          case 4:\n                            resolve(res);\n\n                          case 5:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x4) {\n                    return _ref14.apply(this, arguments);\n                  };\n                }(), function (error) {\n                  reject(error);\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function GET_RECENT_PRODUCT(_x2, _x3) {\n      return _GET_RECENT_PRODUCT.apply(this, arguments);\n    }\n\n    return GET_RECENT_PRODUCT;\n  }(),\n  GET_LIST_BEST_SELLING: function GET_LIST_BEST_SELLING(_ref15, product_id) {\n    var commit = _ref15.commit;\n    return new _Promise(function (resolve, reject) {\n      axios.get(\"/api/seller/products/\".concat(product_id, \"/best_selling\")).then(\n      /*#__PURE__*/\n      function () {\n        var _ref16 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee4(res) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  if (!res.data.status) {\n                    _context4.next = 4;\n                    break;\n                  }\n\n                  _context4.next = 3;\n                  return MERGE_IMPORTED_PRODUCT(res.data.data);\n\n                case 3:\n                  res.data.data = _context4.sent;\n\n                case 4:\n                  resolve(res.data);\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x5) {\n          return _ref16.apply(this, arguments);\n        };\n      }(), function (error) {\n        reject(error);\n      });\n    });\n  },\n  GET_TOP_CATEGORY: function GET_TOP_CATEGORY(_ref17) {\n    var commit = _ref17.commit;\n    return new _Promise(function (resolve, reject) {\n      axios.get('/api/seller/favorite_collections').then(\n      /*#__PURE__*/\n      function () {\n        var _ref18 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee5(res) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  resolve(res.data);\n\n                case 1:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x6) {\n          return _ref18.apply(this, arguments);\n        };\n      }(), function (error) {\n        reject(error);\n      });\n    });\n  },\n  GET_PRODUCT_DETAIL: function GET_PRODUCT_DETAIL(_ref19, _ref20) {\n    _objectDestructuringEmpty(_ref19);\n\n    var id = _ref20.id;\n    return new _Promise(function (resolve, reject) {\n      axios.get(\"/api/seller/products/\".concat(id)).then(\n      /*#__PURE__*/\n      function () {\n        var _ref21 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee6(res) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  if (!res.data.status) {\n                    _context6.next = 4;\n                    break;\n                  }\n\n                  _context6.next = 3;\n                  return MERGE_IMPORTED_PRODUCT([res.data.data]);\n\n                case 3:\n                  res.data.data = _context6.sent[0];\n\n                case 4:\n                  resolve(res.data);\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x7) {\n          return _ref21.apply(this, arguments);\n        };\n      }(), function (error) {\n        reject(error);\n      });\n    });\n  },\n  GET_LIST_PRODUCTS: function () {\n    var _GET_LIST_PRODUCTS = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(_ref22, _ref23) {\n      var commit, _ref23$keyword, keyword, _ref23$is_premium, is_premium, _ref23$limit, limit, _ref23$page, page, _ref23$supplier_id, supplier_id, _ref23$collection_id, collection_id, _ref23$prices, prices, _ref23$shipping_from, shipping_from, _ref23$shipping_to, shipping_to, _ref23$sort, sort, params;\n\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref22.commit;\n              _ref23$keyword = _ref23.keyword, keyword = _ref23$keyword === void 0 ? '' : _ref23$keyword, _ref23$is_premium = _ref23.is_premium, is_premium = _ref23$is_premium === void 0 ? 0 : _ref23$is_premium, _ref23$limit = _ref23.limit, limit = _ref23$limit === void 0 ? 12 : _ref23$limit, _ref23$page = _ref23.page, page = _ref23$page === void 0 ? 1 : _ref23$page, _ref23$supplier_id = _ref23.supplier_id, supplier_id = _ref23$supplier_id === void 0 ? null : _ref23$supplier_id, _ref23$collection_id = _ref23.collection_id, collection_id = _ref23$collection_id === void 0 ? null : _ref23$collection_id, _ref23$prices = _ref23.prices, prices = _ref23$prices === void 0 ? null : _ref23$prices, _ref23$shipping_from = _ref23.shipping_from, shipping_from = _ref23$shipping_from === void 0 ? null : _ref23$shipping_from, _ref23$shipping_to = _ref23.shipping_to, shipping_to = _ref23$shipping_to === void 0 ? null : _ref23$shipping_to, _ref23$sort = _ref23.sort, sort = _ref23$sort === void 0 ? 'lasted' : _ref23$sort;\n              params = {\n                keyword: keyword,\n                limit: limit,\n                current_page: page,\n                is_premium: is_premium\n              };\n\n              if (sort) {\n                params['sort'] = sort;\n              }\n\n              if (collection_id) {\n                params['collection_id'] = collection_id;\n              }\n\n              if (prices) {\n                params['prices'] = prices;\n              }\n\n              if (supplier_id) {\n                params['supplier_id'] = supplier_id;\n              }\n\n              if (shipping_from) {\n                params['shipping_from'] = shipping_from;\n              }\n\n              if (shipping_from) {\n                params['shipping_to'] = shipping_to;\n              }\n\n              _context8.next = 11;\n              return new _Promise(function (resolve, reject) {\n                axios.get('/api/seller/products', {\n                  params: params\n                }).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref24 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee7(res) {\n                    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            if (!res.data.status) {\n                              _context7.next = 4;\n                              break;\n                            }\n\n                            _context7.next = 3;\n                            return MERGE_IMPORTED_PRODUCT(res.data.data);\n\n                          case 3:\n                            res.data.data = _context7.sent;\n\n                          case 4:\n                            resolve(res.data);\n\n                          case 5:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7);\n                  }));\n\n                  return function (_x10) {\n                    return _ref24.apply(this, arguments);\n                  };\n                }(), function (error) {\n                  reject(error);\n                });\n              });\n\n            case 11:\n              return _context8.abrupt(\"return\", _context8.sent);\n\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function GET_LIST_PRODUCTS(_x8, _x9) {\n      return _GET_LIST_PRODUCTS.apply(this, arguments);\n    }\n\n    return GET_LIST_PRODUCTS;\n  }(),\n  IMPORT_PRODUCT: function () {\n    var _IMPORT_PRODUCT = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(_ref25, import_info) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              commit = _ref25.commit;\n              _context9.next = 3;\n              return axios.post('/api/seller/products/import', import_info);\n\n            case 3:\n              return _context9.abrupt(\"return\", _context9.sent);\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function IMPORT_PRODUCT(_x11, _x12) {\n      return _IMPORT_PRODUCT.apply(this, arguments);\n    }\n\n    return IMPORT_PRODUCT;\n  }(),\n  REMOVE_IMPORTED_PRODUCT: function () {\n    var _REMOVE_IMPORTED_PRODUCT = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(_ref26, import_info) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              commit = _ref26.commit;\n              _context10.next = 3;\n              return axios.post('/api/seller/products/remove_imported', import_info);\n\n            case 3:\n              return _context10.abrupt(\"return\", _context10.sent);\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function REMOVE_IMPORTED_PRODUCT(_x13, _x14) {\n      return _REMOVE_IMPORTED_PRODUCT.apply(this, arguments);\n    }\n\n    return REMOVE_IMPORTED_PRODUCT;\n  }()\n};\nexport default action;",{"version":3,"sources":["/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/home/_store/actions.js"],"names":["MERGE_IMPORTED_PRODUCT","list_product","action","GET_LIST_IMPORTED","imported","str","data","status","map","el","idx","console","log","indexOf","id","isImported","GET_LIST_COLLECTIONS","commit","resolve","reject","axios","get","then","res","error","GET_LIST_COUNTRIES","GET_LIST_SUPPLIERS","GET_LIST_BANNERS","setTimeout","url","image","GET_PRODUCT_QUESTION","current_page","limit","params","POST_PRODUCT_QUESTION","content","post","title","GET_RECENT_PRODUCT","ids","GET_LIST_BEST_SELLING","product_id","GET_TOP_CATEGORY","GET_PRODUCT_DETAIL","GET_LIST_PRODUCTS","keyword","is_premium","page","supplier_id","collection_id","prices","shipping_from","shipping_to","sort","IMPORT_PRODUCT","import_info","REMOVE_IMPORTED_PRODUCT"],"mappings":"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","sourcesContent":["\nasync function MERGE_IMPORTED_PRODUCT(list_product) {\n    let imported = await action.GET_LIST_IMPORTED()\n    let str = []\n    if (imported.data.status) {\n        str = imported.data.data.imported\n    }\n    return list_product.map(function (el,idx) {\n        console.log(el);\n        if (str.indexOf(el.id) >= 0) {\n            el.isImported = true\n        } else {\n            el.isImported = false\n        }\n        return el\n    })\n}\n\nlet action =  {\n    GET_LIST_COLLECTIONS({commit}, { }){\n        return new Promise((resolve , reject) =>{\n            axios.get('/api/collections' ).then((res)=>{\n                let {  status , data } = res.data;\n                if( status ){\n                    commit('UPDATE_COLLECTION' , data);\n                }\n                resolve(res.data);\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    GET_LIST_COUNTRIES({commit}, { }){\n        return new Promise((resolve , reject) =>{\n            axios.get('/api/supplier/country' ).then((res)=>{\n                let {  status , data } = res.data;\n                if( status ){\n                    commit('UPDATE_COUNTRY' , data);\n                }\n                resolve(res.data);\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    GET_LIST_SUPPLIERS({commit}, { }){\n        return new Promise((resolve , reject) =>{\n            axios.get('/api/suppliers' ).then((res)=>{\n                let {  status , data } = res.data;\n                if( status ){\n                    commit('UPDATE_SUPPLIER' , data);\n                }\n                resolve(res.data);\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    GET_LIST_BANNERS({commit} , {}){\n        return new Promise((resolve , reject) =>{\n            setTimeout(function () {\n                commit('UPDATE_BANNERS' , [\n                    {\n                        id : '123',\n                        url : 'adsadad',\n                        image : 'https://dropsquare-api-dev.fireapps.io/uploads/images/1627401458103778/V9NJQmix7sS5KfJ8EY1eYv4FtwtnHMH6IZs341OM.png'\n                    },\n                    {\n                        id : '345',\n                        url : 'adsadad',\n                        image : 'https://dropsquare-api-dev.fireapps.io/uploads/images/1627401458103778/IeXdcwKsmODuK3P2phf0sZQ27sEw7zHVZTCRmy6r.jpeg'\n                    },\n                    {\n                        id : '567',\n                        url : 'adsadad',\n                        image : 'https://dropsquare-api-dev.fireapps.io/uploads/images/1627401458103778/3aLH16PJVAGumjjCpcVLss1XlLuBrLbJGJZwD2Cu.jpeg'\n                    }\n                ])\n                resolve()\n            }, 500);\n        })\n    },\n    GET_PRODUCT_QUESTION({commit} , { id , current_page = 1, limit = 5 }){\n        var params = {\n            current_page : current_page ,\n            limit : limit\n        }\n        return new Promise((resolve , reject) =>{\n            axios.get(`api/seller/products/${id}/questions` , { params : params} ).then((res)=>{\n                resolve(res.data)\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    POST_PRODUCT_QUESTION({} , { id , content}){\n        return new Promise((resolve , reject) =>{\n            axios.post(`api/seller/products/${id}/questions/add` , { title : content } ).then((res)=>{\n                resolve(res.data)\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    async GET_LIST_IMPORTED() {\n      return await axios.get(`/api/seller/products/imported`);\n    },\n    async GET_RECENT_PRODUCT({commit} , ids ){\n        return new Promise((resolve , reject) =>{\n            axios.get('/api/seller/products/recent_viewed', {\n                params : {\n                    ids : ids\n                }\n            }).then(async (res)=>{\n                if (res.data.status) {\n                    res.data.data = await MERGE_IMPORTED_PRODUCT(res.data.data)\n                }\n                resolve(res)\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    GET_LIST_BEST_SELLING({commit} , product_id){\n        return new Promise((resolve , reject) =>{\n            axios.get(`/api/seller/products/${product_id}/best_selling` ).then(async (res)=>{\n                if (res.data.status) {\n                    res.data.data = await MERGE_IMPORTED_PRODUCT(res.data.data)\n                }\n                resolve(res.data)\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    GET_TOP_CATEGORY({commit}){\n        return new Promise((resolve , reject) =>{\n            axios.get('/api/seller/favorite_collections' ).then(async (res)=>{\n                resolve(res.data)\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    GET_PRODUCT_DETAIL({ } , { id }){\n        return new Promise((resolve , reject) =>{\n            axios.get(`/api/seller/products/${id}` ).then(async (res)=>{\n                if (res.data.status) {\n                    res.data.data = (await MERGE_IMPORTED_PRODUCT([res.data.data]))[0]\n                }\n                resolve(res.data)\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    async GET_LIST_PRODUCTS({commit} , { keyword = '' , is_premium = 0 , limit = 12 , page = 1 , supplier_id = null , collection_id = null ,  prices = null , shipping_from = null , shipping_to = null , sort = 'lasted'}){\n        var params = {\n            keyword : keyword,\n            limit : limit ,\n            current_page : page ,\n            is_premium : is_premium\n        }\n        if( sort ){\n            params['sort'] = sort\n        }\n        if( collection_id ){\n            params['collection_id'] = collection_id\n        }\n        if( prices ){\n            params['prices'] = prices\n        }\n        if( supplier_id ){\n            params['supplier_id'] = supplier_id\n        }\n        if( shipping_from ){\n            params['shipping_from'] = shipping_from\n        }\n        if( shipping_from ){\n            params['shipping_to'] = shipping_to\n        }\n\n        return await new Promise((resolve , reject) =>{\n            axios.get('/api/seller/products', { params : params} ).then(async (res)=>{\n                if (res.data.status) {\n                    // console.log(res.data.data);\n                    res.data.data = await MERGE_IMPORTED_PRODUCT(res.data.data)\n                }\n                resolve(res.data)\n            }, (error) =>{\n                reject(error)\n            })\n        })\n    },\n    async IMPORT_PRODUCT({commit} , import_info ){\n        return await axios.post('/api/seller/products/import', import_info)\n    },\n\n    async REMOVE_IMPORTED_PRODUCT({commit} , import_info ){\n        return await axios.post('/api/seller/products/remove_imported', import_info)\n    }\n}\n\nexport default action\n"]}]}