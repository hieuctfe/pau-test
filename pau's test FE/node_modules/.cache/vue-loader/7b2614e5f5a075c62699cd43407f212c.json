{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Pau's test/pau's test FE/src/modules/seller/_components/forgot-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/modules/seller/_components/forgot-password.vue","mtime":1555556885563},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapActions} from 'vuex'\n\nexport default {\n    name: \"forgot-password\",\n    data() {\n        return {\n            isInvalid: false,\n            password: '',\n            confirmPassword: '',\n            token: ''\n        }\n    },\n    methods: {\n        ...mapActions({\n            checkToken: \"$_Seller/CHECK_TOKEN\",\n            resetPassword: \"$_Seller/RESET_PASSWORD\"\n        }),\n        onSubmitResetPassword() {\n            if (this.password != this.confirmPassword || this.password.length < 6) {\n                this.isInvalid = true\n            } else {\n                let temp = {\n                    reset_password_token: this.token,\n                    new_password: this.password\n                }\n                this.resetPassword(temp).then(res => {\n                    if (res.data.status) {\n                        this.$store.commit('$_Seller/LOGIN_SUCCESS', res.data.data.token)\n                        this.redirect({\n                            name: \"Home\"\n                        })\n                    } else {\n                        $notify({\n                            content: res.data.message,\n                            type: \"danger\"\n                        })\n                    }\n                })\n            }\n        }\n    },\n    created: function () {\n        let token = this.$route.query['id']\n        this.token = token\n        console.log(token);\n        this.checkToken(token).then(res => {\n            if (!res.data.status) {\n                this.redirect({\n                    name: 'Error404'\n                })\n            }\n        })\n    }\n}\n",{"version":3,"sources":["forgot-password.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"forgot-password.vue","sourceRoot":"src/modules/seller/_components","sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"col col-md-6 login-left-form\">\n            <div class=\"product-filter-title m-b-25\">\n                <span>Reset Password</span>\n            </div>\n            <form @submit.stop.prevent=\"onSubmitResetPassword()\">\n                <div class=\"form-group reset-password-form\">\n                    <label class=\"input-title\">Password <span class=\"text-danger\">*</span></label>\n                    <input v-model=\"password\" :class=\"{'is-invalid': isInvalid}\" class=\"form-control outline-type\"\n                           type=\"password\"/>\n                    <div class=\"invalid-feedback\">\n                        <span>Password and confirm password must be same and more than 6</span>\n                    </div>\n                </div>\n                <div class=\"form-group reset-password-form\">\n                    <label class=\"input-title\">Confirm password <span class=\"text-danger\">*</span></label>\n                    <input v-model=\"confirmPassword\" :class=\"{'is-invalid': isInvalid}\"\n                           class=\"form-control outline-type\" type=\"password\"/>\n                    <div class=\"invalid-feedback\">\n                        <span>Password and confirm password must be same and more than 6</span>\n                    </div>\n                </div>\n                <div class=\"reset-password-action m-t-25\">\n                    <button class=\"btn btn-warning btn-radius-border text-white\">\n                        Reset\n                    </button>\n                </div>\n            </form>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import {mapActions} from 'vuex'\n\n    export default {\n        name: \"forgot-password\",\n        data() {\n            return {\n                isInvalid: false,\n                password: '',\n                confirmPassword: '',\n                token: ''\n            }\n        },\n        methods: {\n            ...mapActions({\n                checkToken: \"$_Seller/CHECK_TOKEN\",\n                resetPassword: \"$_Seller/RESET_PASSWORD\"\n            }),\n            onSubmitResetPassword() {\n                if (this.password != this.confirmPassword || this.password.length < 6) {\n                    this.isInvalid = true\n                } else {\n                    let temp = {\n                        reset_password_token: this.token,\n                        new_password: this.password\n                    }\n                    this.resetPassword(temp).then(res => {\n                        if (res.data.status) {\n                            this.$store.commit('$_Seller/LOGIN_SUCCESS', res.data.data.token)\n                            this.redirect({\n                                name: \"Home\"\n                            })\n                        } else {\n                            $notify({\n                                content: res.data.message,\n                                type: \"danger\"\n                            })\n                        }\n                    })\n                }\n            }\n        },\n        created: function () {\n            let token = this.$route.query['id']\n            this.token = token\n            console.log(token);\n            this.checkToken(token).then(res => {\n                if (!res.data.status) {\n                    this.redirect({\n                        name: 'Error404'\n                    })\n                }\n            })\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .reset-password-action {\n        button {\n            min-width: 150px;\n        }\n    }\n\n    .reset-password-form {\n        input {\n            max-width: 350px;\n        }\n    }\n</style>\n"]}]}