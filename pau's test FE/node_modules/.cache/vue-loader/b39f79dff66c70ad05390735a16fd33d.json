{"remainingRequest":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/seller/_components/partials/gglogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/src/modules/seller/_components/partials/gglogin.vue","mtime":1553747406544},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Fireapps/DSSellerFE/ds-seller-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport GAuth from 'vue-google-oauth2'\nimport Vue from 'vue'\n\nconst gauthOption = {\n    clientId: '703733633001-tkuffkv394cquvoi7qrcife6tmjm6q0o.apps.googleusercontent.com',\n    scope: 'profile email',\n    prompt: 'consent'\n}\nVue.use(GAuth, gauthOption)\nexport default {\n    name: \"gglogin\",\n    created: function () {\n\n    },\n    methods: {\n        login() {\n            this.$gAuth.signIn()\n                .then(GoogleUser => {\n                    // On success do something, refer to https://developers.google.com/api-client-library/javascript/reference/referencedocs#googleusergetid\n                    // GoogleUser.getId() : Get the user's unique ID string.\n                    // GoogleUser.getBasicProfile() : Get the user's basic profile information.\n                    // GoogleUser.getAuthResponse() : Get the response object from the user's auth session. access_token and so on\n                    this.$emit('Login',GoogleUser)\n                    this.isSignIn = this.$gAuth.isAuthorized\n                })\n                .catch(error => {\n                    //on fail do something\n                    console.log(error);\n                })\n        }\n    }\n}\n",{"version":3,"sources":["gglogin.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gglogin.vue","sourceRoot":"src/modules/seller/_components/partials","sourcesContent":["<template>\n    <button class=\"g-btn\" @click=\"login\" type=\"button\">\n        <i class=\"fab fa-google-plus-g\"></i>\n    </button>\n</template>\n\n<script>\n    import GAuth from 'vue-google-oauth2'\n    import Vue from 'vue'\n\n    const gauthOption = {\n        clientId: '703733633001-tkuffkv394cquvoi7qrcife6tmjm6q0o.apps.googleusercontent.com',\n        scope: 'profile email',\n        prompt: 'consent'\n    }\n    Vue.use(GAuth, gauthOption)\n    export default {\n        name: \"gglogin\",\n        created: function () {\n\n        },\n        methods: {\n            login() {\n                this.$gAuth.signIn()\n                    .then(GoogleUser => {\n                        // On success do something, refer to https://developers.google.com/api-client-library/javascript/reference/referencedocs#googleusergetid\n                        // GoogleUser.getId() : Get the user's unique ID string.\n                        // GoogleUser.getBasicProfile() : Get the user's basic profile information.\n                        // GoogleUser.getAuthResponse() : Get the response object from the user's auth session. access_token and so on\n                        this.$emit('Login',GoogleUser)\n                        this.isSignIn = this.$gAuth.isAuthorized\n                    })\n                    .catch(error => {\n                        //on fail do something\n                        console.log(error);\n                    })\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .g-btn {\n        width: 40px;\n        height: 40px;\n        border-radius: 100%;\n        color: white;\n        background: #DD4B39;\n        position: relative;\n        padding: 0px;\n        display: inline-block;\n        i {\n            /*position: absolute;*/\n            /*top:  50%;*/\n            /*left: 50%;*/\n            /*transform: translate(50%, 50%);*/\n            font-size: 20px;\n            line-height: 40x;\n        }\n    }\n</style>\n"]}]}