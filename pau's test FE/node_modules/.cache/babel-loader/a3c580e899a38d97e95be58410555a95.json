{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js!/Volumes/Document/Pau's test/pau's test FE/src/modules/seller/_store/actions.js","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/modules/seller/_store/actions.js","mtime":1556025607844},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/Volumes/Document/Pau's test/pau's test FE/node_modules/@babel/runtime-corejs2/core-js/promise\";\nexport default {\n  REGISTER: function REGISTER(_ref, _ref2) {\n    var commit = _ref.commit;\n    var email = _ref2.email,\n        password = _ref2.password,\n        country_code = _ref2.country_code;\n    return new _Promise(function (reslove, reject) {\n      axios.post('/api/seller/register', {\n        email: email,\n        password: password,\n        country_code: country_code\n      }).then(function (res) {\n        var _res$data = res.data,\n            status = _res$data.status,\n            data = _res$data.data;\n\n        if (status) {\n          commit('LOGIN_SUCCESS', data.token);\n        }\n\n        reslove(res);\n      });\n    });\n  },\n  LOGIN: function LOGIN(_ref3, _ref4) {\n    var commit = _ref3.commit;\n    var email = _ref4.email,\n        password = _ref4.password;\n    return new _Promise(function (reslove, reject) {\n      axios.post('/api/users/login', {\n        email: email,\n        password: password\n      }).then(function (res) {\n        var _res$data2 = res.data,\n            status = _res$data2.status,\n            data = _res$data2.data;\n\n        if (status) {\n          commit('LOGIN_SUCCESS', data.token);\n        }\n\n        reslove(res);\n      });\n    });\n  },\n  LOGOUT: function LOGOUT(_ref5) {\n    var commit = _ref5.commit;\n    commit('LOGOUT_SUCCESS');\n  }\n};",{"version":3,"sources":["/Volumes/Document/Pau's test/pau's test FE/src/modules/seller/_store/actions.js"],"names":["REGISTER","commit","email","password","country_code","reslove","reject","axios","post","then","res","data","status","token","LOGIN","LOGOUT"],"mappings":";AAAA,eAAe;AACXA,EAAAA,QADW,iCACyC;AAAA,QAA1CC,MAA0C,QAA1CA,MAA0C;AAAA,QAAhCC,KAAgC,SAAhCA,KAAgC;AAAA,QAAzBC,QAAyB,SAAzBA,QAAyB;AAAA,QAAfC,YAAe,SAAfA,YAAe;AAChD,WAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,MAAAA,KAAK,CAACC,IAAN,CAAW,sBAAX,EAAmC;AAC/BN,QAAAA,KAAK,EAAEA,KADwB;AAE/BC,QAAAA,QAAQ,EAAEA,QAFqB;AAG/BC,QAAAA,YAAY,EAAEA;AAHiB,OAAnC,EAIGK,IAJH,CAIQ,UAACC,GAAD,EAAS;AAAA,wBACQA,GAAG,CAACC,IADZ;AAAA,YACRC,MADQ,aACRA,MADQ;AAAA,YACAD,IADA,aACAA,IADA;;AAEb,YAAIC,MAAJ,EAAY;AACRX,UAAAA,MAAM,CAAC,eAAD,EAAkBU,IAAI,CAACE,KAAvB,CAAN;AACH;;AACDR,QAAAA,OAAO,CAACK,GAAD,CAAP;AACH,OAVD;AAWH,KAZM,CAAP;AAaH,GAfU;AAgBXI,EAAAA,KAhBW,+BAgBwB;AAAA,QAA5Bb,MAA4B,SAA5BA,MAA4B;AAAA,QAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,QAAXC,QAAW,SAAXA,QAAW;AAC/B,WAAO,aAAY,UAACE,OAAD,EAAUC,MAAV,EAAqB;AACpCC,MAAAA,KAAK,CAACC,IAAN,CAAW,kBAAX,EAA+B;AAACN,QAAAA,KAAK,EAAEA,KAAR;AAAeC,QAAAA,QAAQ,EAAEA;AAAzB,OAA/B,EAAmEM,IAAnE,CAAwE,UAACC,GAAD,EAAS;AAAA,yBACxDA,GAAG,CAACC,IADoD;AAAA,YACxEC,MADwE,cACxEA,MADwE;AAAA,YAChED,IADgE,cAChEA,IADgE;;AAE7E,YAAIC,MAAJ,EAAY;AACRX,UAAAA,MAAM,CAAC,eAAD,EAAkBU,IAAI,CAACE,KAAvB,CAAN;AACH;;AACDR,QAAAA,OAAO,CAACK,GAAD,CAAP;AACH,OAND;AAOH,KARM,CAAP;AASH,GA1BU;AA2BXK,EAAAA,MA3BW,yBA2BM;AAAA,QAATd,MAAS,SAATA,MAAS;AACbA,IAAAA,MAAM,CAAC,gBAAD,CAAN;AACH;AA7BU,CAAf","sourcesContent":["export default {\n    REGISTER({commit}, {email, password, country_code}) {\n        return new Promise((reslove, reject) => {\n            axios.post('/api/seller/register', {\n                email: email,\n                password: password,\n                country_code: country_code\n            }).then((res) => {\n                let {status, data} = res.data\n                if (status) {\n                    commit('LOGIN_SUCCESS', data.token)\n                }\n                reslove(res)\n            })\n        })\n    },\n    LOGIN({commit}, {email, password}) {\n        return new Promise((reslove, reject) => {\n            axios.post('/api/users/login', {email: email, password: password}).then((res) => {\n                let {status, data} = res.data\n                if (status) {\n                    commit('LOGIN_SUCCESS', data.token)\n                }\n                reslove(res)\n            })\n        })\n    },\n    LOGOUT({commit}) {\n        commit('LOGOUT_SUCCESS')\n    },\n}\n"]}]}