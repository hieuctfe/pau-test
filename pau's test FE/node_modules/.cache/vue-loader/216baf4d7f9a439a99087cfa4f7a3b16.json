{"remainingRequest":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Document/Pau's test/pau's test FE/src/modules/seller/_components/account.vue?vue&type=style&index=0&id=72d61be4&lang=scss&scoped=true&","dependencies":[{"path":"/Volumes/Document/Pau's test/pau's test FE/src/modules/seller/_components/account.vue","mtime":1553581797011},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Document/Pau's test/pau's test FE/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'src/assets/style';\n\n.account-container {\n    .title-container {\n        margin-bottom: 40px;\n    }\n    .form-group {\n        margin-bottom: 30px;\n        input, .select-outline {\n            height: 45px;\n        }\n    }\n    .update-profile-btn {\n        color: white;\n    }\n}\n\n",{"version":3,"sources":["account.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"account.vue","sourceRoot":"src/modules/seller/_components","sourcesContent":["<template>\n    <div class=\"account-container\">\n        <div class=\"account-form-container row\">\n            <div class=\"form-group col col-5\">\n                <label class=\"input-title\">Email</label>\n                <input readonly class=\"form-control outline-type\" v-model=\"accountInfo.email\"/>\n            </div>\n            <div class=\"form-group col col-md-5\">\n                <label class=\"input-title\">Country*</label>\n                <div class=\"outline-type select-outline\">\n                    <select class=\"form-control\" v-model=\"accountInfo.country_code\">\n                        <option v-for=\"(item , index) in countries\" :value=\"item.code\" :key=\"`item${index}`\">\n                            {{item.name}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group col col-5\">\n                <label class=\"input-title\">Password</label>\n                <input class=\"form-control outline-type\" type=\"password\" :class=\"{\n                        'is-invalid': !account_validate.password,\n                    }\" v-model=\"accountInfo.password\"/>\n                <div class=\"invalid-feedback\">\n                    <span>Password and confirm password must be same</span>\n                </div>\n            </div>\n            <div class=\"form-group col col-5\">\n                <label class=\"input-title\" type=\"password\">Confirm Password</label>\n                <input class=\"form-control outline-type\" type=\"password\" :class=\"{\n                        'is-invalid': !account_validate.repassword,\n                    }\" v-model=\"accountInfo.repassword\"/>\n                <div class=\"invalid-feedback\">\n                    <span>Password and confirm password must be same</span>\n                </div>\n            </div>\n            <div class=\"form-group col col-5\">\n                <label class=\"input-title\">Current Password</label>\n                <input class=\"form-control outline-type\" type=\"password\" :class=\"{\n                        'is-invalid': !account_validate.current_password,\n                    }\" v-model=\"accountInfo.current_password\"/>\n                <div class=\"invalid-feedback\">\n                    <span>Current password is require</span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"account-action\">\n            <button class=\"update-profile-btn btn btn-warning btn-radius-border\" @click=\"updateAccountInfo\">Update\n                Profile\n            </button>\n            <button class=\"btn\">Cancel</button>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {mapGetters, mapActions} from 'vuex';\n\n    export default {\n        name: \"account\",\n        data() {\n            return {\n                accountInfo: {\n                    country_code: \"US\",\n                    password: '',\n                    repassword: '',\n                    current_password: '',\n                    email: ''\n                },\n                account_validate: {\n                    password: true,\n                    repassword: true,\n                    current_password: true\n                }\n            }\n        },\n        computed: {\n            ...mapGetters({\n                countries: '$_Home/getCountries'\n            })\n        },\n        methods: {\n            ...mapActions({\n                updateSellerInfo: '$_Seller/UPDATE_USER_INFO',\n                getSellerInfo: \"$_Seller/GET_USER_INFO\"\n            }),\n            updateAccountInfo: function () {\n                this.validateUserInfo()\n                let isValidate = true;\n                for (let key in this.account_validate) {\n                    if (!this.account_validate[key]) {\n                        isValidate = false\n                    }\n                }\n                if (isValidate) {\n                    console.log(this.accountInfo);\n                    this.updateSellerInfo(this.accountInfo).then((res) => {\n                        // after update here\n                        console.log(res);\n                        if (res.data.status) {\n                            $notify({\n                                content: \"Update success\",\n                                type: \"success\"\n                            })\n                        } else {\n                            $notify({\n                                content: res.data.message,\n                                type: \"danger\"\n                            })\n                        }\n                        this.resetUserInfo()\n                    })\n                }\n            },\n            validateUserInfo() {\n                this.account_validate.repassword = (this.accountInfo.password == this.accountInfo.repassword) && (this.accountInfo.password.length >= 6 || this.accountInfo.password.length == 0)\n                this.account_validate.password = (this.accountInfo.password == this.accountInfo.repassword) && (this.accountInfo.password.length >= 6 || this.accountInfo.password.length == 0)\n                this.account_validate.current_password = this.accountInfo.current_password.length >= 6\n            },\n            initUserInfo() {\n                this.getSellerInfo().then(res => {\n                    if (res.status) {\n                        this.accountInfo = {...this.accountInfo,...res.data.data}\n                    } else {\n                        $notify({\n                            content: \"Load Seller info Fail\",\n                            type: \"danger\"\n                        })\n                    }\n                })\n            },\n            resetUserInfo() {\n                this.accountInfo.password = ''\n                this.accountInfo.repassword = ''\n                this.accountInfo.current_password = ''\n            }\n        },\n        created: function () {\n            // this.initUserInfo()\n            var seller = this.$store.getters['$_Seller/getSeller']\n            if( seller ){\n                this.accountInfo = {...this.accountInfo,...seller}\n            }\n        },\n        watch: {\n            \"accountInfo\":{\n                handler(val){\n                    // do stuff\n                },\n                deep: true\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    @import 'src/assets/style';\n\n    .account-container {\n        .title-container {\n            margin-bottom: 40px;\n        }\n        .form-group {\n            margin-bottom: 30px;\n            input, .select-outline {\n                height: 45px;\n            }\n        }\n        .update-profile-btn {\n            color: white;\n        }\n    }\n\n</style>\n"]}]}